{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Pega/pegaswap-docs/src/contexts/LocalStorage.js\";\nimport React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react';\nconst UNISWAP = 'UNISWAP';\nconst VERSION = 'VERSION';\nconst CURRENT_VERSION = 0;\nconst LAST_SAVED = 'LAST_SAVED';\nconst DISMISSED_PATHS = 'DISMISSED_PATHS';\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS';\nconst SAVED_TOKENS = 'SAVED_TOKENS';\nconst SAVED_PAIRS = 'SAVED_PAIRS';\nconst DARK_MODE = 'DARK_MODE';\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS];\nconst UPDATE_KEY = 'UPDATE_KEY';\nconst LocalStorageContext = createContext();\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext);\n}\n\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case UPDATE_KEY:\n      {\n        const {\n          key,\n          value\n        } = payload;\n\n        if (!UPDATABLE_KEYS.some(k => k === key)) {\n          throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`);\n        } else {\n          return { ...state,\n            [key]: value\n          };\n        }\n      }\n\n    default:\n      {\n        throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`);\n      }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {}\n  };\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP));\n\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage;\n    } else {\n      return { ...defaultLocalStorage,\n        ...parsed\n      };\n    }\n  } catch {\n    return defaultLocalStorage;\n  }\n}\n\nexport default function Provider({\n  children\n}) {\n  const [state, dispatch] = useReducer(reducer, undefined, init);\n  const updateKey = useCallback((key, value) => {\n    dispatch({\n      type: UPDATE_KEY,\n      payload: {\n        key,\n        value\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(LocalStorageContext.Provider, {\n    value: useMemo(() => [state, {\n      updateKey\n    }], [state, updateKey]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport function Updater() {\n  const [state] = useLocalStorageContext();\n  useEffect(() => {\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state,\n      [LAST_SAVED]: Math.floor(Date.now() / 1000)\n    }));\n  });\n  return null;\n}\nexport function useDarkModeManager() {\n  const [state, {\n    updateKey\n  }] = useLocalStorageContext();\n  let isDarkMode = state[DARK_MODE];\n  const toggleDarkMode = useCallback(value => {\n    updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode);\n  }, [updateKey, isDarkMode]);\n  return [isDarkMode, toggleDarkMode];\n}\nexport function usePathDismissed(path) {\n  var _state$DISMISSED_PATH;\n\n  const [state, {\n    updateKey\n  }] = useLocalStorageContext();\n  const pathDismissed = state === null || state === void 0 ? void 0 : (_state$DISMISSED_PATH = state[DISMISSED_PATHS]) === null || _state$DISMISSED_PATH === void 0 ? void 0 : _state$DISMISSED_PATH[path];\n\n  function dismiss() {\n    let newPaths = state === null || state === void 0 ? void 0 : state[DISMISSED_PATHS];\n    newPaths[path] = true;\n    updateKey(DISMISSED_PATHS, newPaths);\n  }\n\n  return [pathDismissed, dismiss];\n}\nexport function useSavedAccounts() {\n  const [state, {\n    updateKey\n  }] = useLocalStorageContext();\n  const savedAccounts = state === null || state === void 0 ? void 0 : state[SAVED_ACCOUNTS];\n  const addAccount = useCallback(account => {\n    updateKey(SAVED_ACCOUNTS, [...(savedAccounts !== null && savedAccounts !== void 0 ? savedAccounts : []), account]);\n  }, [savedAccounts, updateKey]);\n  const removeAccount = useCallback(account => {\n    var _savedAccounts$indexO;\n\n    let index = (_savedAccounts$indexO = savedAccounts === null || savedAccounts === void 0 ? void 0 : savedAccounts.indexOf(account)) !== null && _savedAccounts$indexO !== void 0 ? _savedAccounts$indexO : -1;\n\n    if (index > -1) {\n      updateKey(SAVED_ACCOUNTS, [...savedAccounts.slice(0, index), ...savedAccounts.slice(index + 1, savedAccounts.length)]);\n    }\n  }, [savedAccounts, updateKey]);\n  return [savedAccounts, addAccount, removeAccount];\n}\nexport function useSavedPairs() {\n  const [state, {\n    updateKey\n  }] = useLocalStorageContext();\n  const savedPairs = state === null || state === void 0 ? void 0 : state[SAVED_PAIRS];\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state === null || state === void 0 ? void 0 : state[SAVED_PAIRS];\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol\n    };\n    updateKey(SAVED_PAIRS, newList);\n  }\n\n  function removePair(address) {\n    let newList = state === null || state === void 0 ? void 0 : state[SAVED_PAIRS];\n    newList[address] = null;\n    updateKey(SAVED_PAIRS, newList);\n  }\n\n  return [savedPairs, addPair, removePair];\n}\nexport function useSavedTokens() {\n  const [state, {\n    updateKey\n  }] = useLocalStorageContext();\n  const savedTokens = state === null || state === void 0 ? void 0 : state[SAVED_TOKENS];\n\n  function addToken(address, symbol) {\n    let newList = state === null || state === void 0 ? void 0 : state[SAVED_TOKENS];\n    newList[address] = {\n      symbol\n    };\n    updateKey(SAVED_TOKENS, newList);\n  }\n\n  function removeToken(address) {\n    let newList = state === null || state === void 0 ? void 0 : state[SAVED_TOKENS];\n    newList[address] = null;\n    updateKey(SAVED_TOKENS, newList);\n  }\n\n  return [savedTokens, addToken, removeToken];\n}","map":{"version":3,"sources":["/Users/macbook/Desktop/Pega/pegaswap-docs/src/contexts/LocalStorage.js"],"names":["React","createContext","useContext","useReducer","useMemo","useCallback","useEffect","UNISWAP","VERSION","CURRENT_VERSION","LAST_SAVED","DISMISSED_PATHS","SAVED_ACCOUNTS","SAVED_TOKENS","SAVED_PAIRS","DARK_MODE","UPDATABLE_KEYS","UPDATE_KEY","LocalStorageContext","useLocalStorageContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","dispatch","undefined","updateKey","Updater","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","pathDismissed","dismiss","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","savedPairs","addPair","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","removePair","useSavedTokens","savedTokens","addToken","symbol","removeToken"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nconst UNISWAP = 'UNISWAP'\n\nconst VERSION = 'VERSION'\nconst CURRENT_VERSION = 0\nconst LAST_SAVED = 'LAST_SAVED'\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\nconst SAVED_TOKENS = 'SAVED_TOKENS'\nconst SAVED_PAIRS = 'SAVED_PAIRS'\n\nconst DARK_MODE = 'DARK_MODE'\n\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\n\nconst UPDATE_KEY = 'UPDATE_KEY'\n\nconst LocalStorageContext = createContext()\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_KEY: {\n      const { key, value } = payload\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\n      } else {\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\n    }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {},\n  }\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP))\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage\n    } else {\n      return { ...defaultLocalStorage, ...parsed }\n    }\n  } catch {\n    return defaultLocalStorage\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, undefined, init)\n\n  const updateKey = useCallback((key, value) => {\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\n  }, [])\n\n  return (\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\n      {children}\n    </LocalStorageContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const [state] = useLocalStorageContext()\n\n  useEffect(() => {\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\n  })\n\n  return null\n}\n\nexport function useDarkModeManager() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  let isDarkMode = state[DARK_MODE]\n  const toggleDarkMode = useCallback(\n    (value) => {\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\n    },\n    [updateKey, isDarkMode]\n  )\n  return [isDarkMode, toggleDarkMode]\n}\n\nexport function usePathDismissed(path) {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\n  function dismiss() {\n    let newPaths = state?.[DISMISSED_PATHS]\n    newPaths[path] = true\n    updateKey(DISMISSED_PATHS, newPaths)\n  }\n\n  return [pathDismissed, dismiss]\n}\n\nexport function useSavedAccounts() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\n\n  const addAccount = useCallback(\n    (account) => {\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\n    },\n    [savedAccounts, updateKey]\n  )\n\n  const removeAccount = useCallback(\n    (account) => {\n      let index = savedAccounts?.indexOf(account) ?? -1\n      if (index > -1) {\n        updateKey(SAVED_ACCOUNTS, [\n          ...savedAccounts.slice(0, index),\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\n        ])\n      }\n    },\n    [savedAccounts, updateKey]\n  )\n\n  return [savedAccounts, addAccount, removeAccount]\n}\n\nexport function useSavedPairs() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedPairs = state?.[SAVED_PAIRS]\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol,\n    }\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  function removePair(address) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = null\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  return [savedPairs, addPair, removePair]\n}\n\nexport function useSavedTokens() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedTokens = state?.[SAVED_TOKENS]\n\n  function addToken(address, symbol) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = {\n      symbol,\n    }\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  function removeToken(address) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = null\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  return [savedTokens, addToken, removeToken]\n}\n"]},"metadata":{},"sourceType":"module"}