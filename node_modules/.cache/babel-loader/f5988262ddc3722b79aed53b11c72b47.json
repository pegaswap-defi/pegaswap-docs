{"ast":null,"code":"import _regeneratorRuntime from\"/Users/macbook/Desktop/juiceswap/juiceswap-docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/macbook/Desktop/juiceswap/juiceswap-docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/macbook/Desktop/juiceswap/juiceswap-docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/macbook/Desktop/juiceswap/juiceswap-docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/macbook/Desktop/juiceswap/juiceswap-docs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{createContext,useContext,useReducer,useMemo,useCallback,useEffect,useState}from'react';import{client}from'../apollo/client';import dayjs from'dayjs';import utc from'dayjs/plugin/utc';import{useTimeframe}from'./Application';import{getPercentChange,getBlockFromTimestamp,getBlocksFromTimestamps,get2DayPercentChange,getTimeframe}from'../utils';import{GLOBAL_DATA,GLOBAL_TXNS,GLOBAL_CHART,ETH_PRICE,ALL_PAIRS,ALL_TOKENS,TOP_LPS_PER_PAIRS}from'../apollo/queries';import weekOfYear from'dayjs/plugin/weekOfYear';import{useAllPairData}from'./PairData';var UPDATE='UPDATE';var UPDATE_TXNS='UPDATE_TXNS';var UPDATE_CHART='UPDATE_CHART';var UPDATE_ETH_PRICE='UPDATE_ETH_PRICE';var ETH_PRICE_KEY='ETH_PRICE_KEY';var UPDATE_ALL_PAIRS_IN_UNISWAP='UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS';var UPDATE_ALL_TOKENS_IN_UNISWAP='UPDATE_ALL_TOKENS_IN_UNISWAP';var UPDATE_TOP_LPS='UPDATE_TOP_LPS';// format dayjs with the libraries that we need\ndayjs.extend(utc);dayjs.extend(weekOfYear);var GlobalDataContext=createContext();function useGlobalDataContext(){return useContext(GlobalDataContext);}function reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case UPDATE:{var data=payload.data;return _objectSpread(_objectSpread({},state),{},{globalData:data});}case UPDATE_TXNS:{var transactions=payload.transactions;return _objectSpread(_objectSpread({},state),{},{transactions:transactions});}case UPDATE_CHART:{var daily=payload.daily,weekly=payload.weekly;return _objectSpread(_objectSpread({},state),{},{chartData:{daily:daily,weekly:weekly}});}case UPDATE_ETH_PRICE:{var _ref2;var ethPrice=payload.ethPrice,oneDayPrice=payload.oneDayPrice,ethPriceChange=payload.ethPriceChange;return _ref2={},_defineProperty(_ref2,ETH_PRICE_KEY,ethPrice),_defineProperty(_ref2,\"oneDayPrice\",oneDayPrice),_defineProperty(_ref2,\"ethPriceChange\",ethPriceChange),_ref2;}case UPDATE_ALL_PAIRS_IN_UNISWAP:{var allPairs=payload.allPairs;return _objectSpread(_objectSpread({},state),{},{allPairs:allPairs});}case UPDATE_ALL_TOKENS_IN_UNISWAP:{var allTokens=payload.allTokens;return _objectSpread(_objectSpread({},state),{},{allTokens:allTokens});}case UPDATE_TOP_LPS:{var topLps=payload.topLps;return _objectSpread(_objectSpread({},state),{},{topLps:topLps});}default:{throw Error(\"Unexpected action type in DataContext reducer: '\".concat(type,\"'.\"));}}}export default function Provider(_ref3){var children=_ref3.children;var _useReducer=useReducer(reducer,{}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var update=useCallback(function(data){dispatch({type:UPDATE,payload:{data:data}});},[]);var updateTransactions=useCallback(function(transactions){dispatch({type:UPDATE_TXNS,payload:{transactions:transactions}});},[]);var updateChart=useCallback(function(daily,weekly){dispatch({type:UPDATE_CHART,payload:{daily:daily,weekly:weekly}});},[]);var updateEthPrice=useCallback(function(ethPrice,oneDayPrice,ethPriceChange){dispatch({type:UPDATE_ETH_PRICE,payload:{ethPrice:ethPrice,oneDayPrice:oneDayPrice,ethPriceChange:ethPriceChange}});},[]);var updateAllPairsInUniswap=useCallback(function(allPairs){dispatch({type:UPDATE_ALL_PAIRS_IN_UNISWAP,payload:{allPairs:allPairs}});},[]);var updateAllTokensInUniswap=useCallback(function(allTokens){dispatch({type:UPDATE_ALL_TOKENS_IN_UNISWAP,payload:{allTokens:allTokens}});},[]);var updateTopLps=useCallback(function(topLps){dispatch({type:UPDATE_TOP_LPS,payload:{topLps:topLps}});},[]);return/*#__PURE__*/React.createElement(GlobalDataContext.Provider,{value:useMemo(function(){return[state,{update:update,updateTransactions:updateTransactions,updateChart:updateChart,updateEthPrice:updateEthPrice,updateTopLps:updateTopLps,updateAllPairsInUniswap:updateAllPairsInUniswap,updateAllTokensInUniswap:updateAllTokensInUniswap}];},[state,update,updateTransactions,updateTopLps,updateChart,updateEthPrice,updateAllPairsInUniswap,updateAllTokensInUniswap])},children);}/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */function getGlobalData(_x,_x2){return _getGlobalData.apply(this,arguments);}/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */function _getGlobalData(){_getGlobalData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(ethPrice,oldEthPrice){var data,oneDayData,twoDayData,utcCurrentTime,utcOneDayBack,utcTwoDaysBack,utcOneWeekBack,utcTwoWeeksBack,_yield$getBlocksFromT,_yield$getBlocksFromT2,oneDayBlock,twoDayBlock,oneWeekBlock,twoWeekBlock,result,oneDayResult,twoDayResult,oneWeekResult,oneWeekData,twoWeekResult,twoWeekData,_get2DayPercentChange,_get2DayPercentChange2,oneDayVolumeUSD,volumeChangeUSD,_get2DayPercentChange3,_get2DayPercentChange4,oneWeekVolume,weeklyVolumeChange,_get2DayPercentChange5,_get2DayPercentChange6,oneDayTxns,txnChange,liquidityChangeUSD;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:// data for each day , historic data used for % changes\ndata={};oneDayData={};twoDayData={};_context10.prev=3;// get timestamps for the days\nutcCurrentTime=dayjs();utcOneDayBack=utcCurrentTime.subtract(1,'day').unix();utcTwoDaysBack=utcCurrentTime.subtract(2,'day').unix();utcOneWeekBack=utcCurrentTime.subtract(1,'week').unix();utcTwoWeeksBack=utcCurrentTime.subtract(2,'week').unix();// get the blocks needed for time travel queries\n_context10.next=11;return getBlocksFromTimestamps([utcOneDayBack,utcTwoDaysBack,utcOneWeekBack,utcTwoWeeksBack]);case 11:_yield$getBlocksFromT=_context10.sent;_yield$getBlocksFromT2=_slicedToArray(_yield$getBlocksFromT,4);oneDayBlock=_yield$getBlocksFromT2[0];twoDayBlock=_yield$getBlocksFromT2[1];oneWeekBlock=_yield$getBlocksFromT2[2];twoWeekBlock=_yield$getBlocksFromT2[3];_context10.next=19;return client.query({query:GLOBAL_DATA(),fetchPolicy:'cache-first'});case 19:result=_context10.sent;data=result.data.uniswapFactories[0];// fetch the historical data\n_context10.next=23;return client.query({query:GLOBAL_DATA(oneDayBlock===null||oneDayBlock===void 0?void 0:oneDayBlock.number),fetchPolicy:'cache-first'});case 23:oneDayResult=_context10.sent;oneDayData=oneDayResult.data.uniswapFactories[0];_context10.next=27;return client.query({query:GLOBAL_DATA(twoDayBlock===null||twoDayBlock===void 0?void 0:twoDayBlock.number),fetchPolicy:'cache-first'});case 27:twoDayResult=_context10.sent;twoDayData=twoDayResult.data.uniswapFactories[0];_context10.next=31;return client.query({query:GLOBAL_DATA(oneWeekBlock===null||oneWeekBlock===void 0?void 0:oneWeekBlock.number),fetchPolicy:'cache-first'});case 31:oneWeekResult=_context10.sent;oneWeekData=oneWeekResult.data.uniswapFactories[0];_context10.next=35;return client.query({query:GLOBAL_DATA(twoWeekBlock===null||twoWeekBlock===void 0?void 0:twoWeekBlock.number),fetchPolicy:'cache-first'});case 35:twoWeekResult=_context10.sent;twoWeekData=twoWeekResult.data.uniswapFactories[0];if(data&&oneDayData&&twoDayData&&twoWeekData){_get2DayPercentChange=get2DayPercentChange(data.totalVolumeUSD,oneDayData.totalVolumeUSD?oneDayData.totalVolumeUSD:0,twoDayData.totalVolumeUSD?twoDayData.totalVolumeUSD:0),_get2DayPercentChange2=_slicedToArray(_get2DayPercentChange,2),oneDayVolumeUSD=_get2DayPercentChange2[0],volumeChangeUSD=_get2DayPercentChange2[1];_get2DayPercentChange3=get2DayPercentChange(data.totalVolumeUSD,oneWeekData.totalVolumeUSD,twoWeekData.totalVolumeUSD),_get2DayPercentChange4=_slicedToArray(_get2DayPercentChange3,2),oneWeekVolume=_get2DayPercentChange4[0],weeklyVolumeChange=_get2DayPercentChange4[1];_get2DayPercentChange5=get2DayPercentChange(data.txCount,oneDayData.txCount?oneDayData.txCount:0,twoDayData.txCount?twoDayData.txCount:0),_get2DayPercentChange6=_slicedToArray(_get2DayPercentChange5,2),oneDayTxns=_get2DayPercentChange6[0],txnChange=_get2DayPercentChange6[1];// format the total liquidity in USD\ndata.totalLiquidityUSD=data.totalLiquidityETH*ethPrice;liquidityChangeUSD=getPercentChange(data.totalLiquidityETH*ethPrice,oneDayData.totalLiquidityETH*oldEthPrice);// add relevant fields with the calculated amounts\ndata.oneDayVolumeUSD=oneDayVolumeUSD;data.oneWeekVolume=oneWeekVolume;data.weeklyVolumeChange=weeklyVolumeChange;data.volumeChangeUSD=volumeChangeUSD;data.liquidityChangeUSD=liquidityChangeUSD;data.oneDayTxns=oneDayTxns;data.txnChange=txnChange;}_context10.next=43;break;case 40:_context10.prev=40;_context10.t0=_context10[\"catch\"](3);console.log(_context10.t0);case 43:return _context10.abrupt(\"return\",data);case 44:case\"end\":return _context10.stop();}}},_callee10,null,[[3,40]]);}));return _getGlobalData.apply(this,arguments);}var getChartData=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(oldestDateToFetch){var data,weeklyData,utcEndTime,skip,allFound,result,dayIndexSet,dayIndexArray,oneDay,timestamp,latestLiquidityUSD,latestDayDats,index,nextDay,currentDayIndex,startIndexWeekly,currentWeek;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data=[];weeklyData=[];utcEndTime=dayjs.utc();skip=0;allFound=false;_context.prev=5;case 6:if(allFound){_context.next=15;break;}_context.next=9;return client.query({query:GLOBAL_CHART,variables:{startTime:oldestDateToFetch,skip:skip},fetchPolicy:'cache-first'});case 9:result=_context.sent;skip+=1000;data=data.concat(result.data.uniswapDayDatas);if(result.data.uniswapDayDatas.length<1000){allFound=true;}_context.next=6;break;case 15:if(data){dayIndexSet=new Set();dayIndexArray=[];oneDay=24*60*60;// for each day, parse the daily volume and format for chart array\ndata.forEach(function(dayData,i){// add the day index to the set of days\ndayIndexSet.add((data[i].date/oneDay).toFixed(0));dayIndexArray.push(data[i]);dayData.dailyVolumeUSD=parseFloat(dayData.dailyVolumeUSD);});// fill in empty days ( there will be no day datas if no trades made that day )\ntimestamp=data[0].date?data[0].date:oldestDateToFetch;latestLiquidityUSD=data[0].totalLiquidityUSD;latestDayDats=data[0].mostLiquidTokens;index=1;while(timestamp<utcEndTime.unix()-oneDay){nextDay=timestamp+oneDay;currentDayIndex=(nextDay/oneDay).toFixed(0);if(!dayIndexSet.has(currentDayIndex)){data.push({date:nextDay,dailyVolumeUSD:0,totalLiquidityUSD:latestLiquidityUSD,mostLiquidTokens:latestDayDats});}else{latestLiquidityUSD=dayIndexArray[index].totalLiquidityUSD;latestDayDats=dayIndexArray[index].mostLiquidTokens;index=index+1;}timestamp=nextDay;}}// format weekly data for weekly sized chunks\ndata=data.sort(function(a,b){return parseInt(a.date)>parseInt(b.date)?1:-1;});startIndexWeekly=-1;currentWeek=-1;data.forEach(function(entry,i){var _weeklyData$startInde;var week=dayjs.utc(dayjs.unix(data[i].date)).week();if(week!==currentWeek){currentWeek=week;startIndexWeekly++;}weeklyData[startIndexWeekly]=weeklyData[startIndexWeekly]||{};weeklyData[startIndexWeekly].date=data[i].date;weeklyData[startIndexWeekly].weeklyVolumeUSD=((_weeklyData$startInde=weeklyData[startIndexWeekly].weeklyVolumeUSD)!==null&&_weeklyData$startInde!==void 0?_weeklyData$startInde:0)+data[i].dailyVolumeUSD;});_context.next=25;break;case 22:_context.prev=22;_context.t0=_context[\"catch\"](5);console.log(_context.t0);case 25:return _context.abrupt(\"return\",[data,weeklyData]);case 26:case\"end\":return _context.stop();}}},_callee,null,[[5,22]]);}));return function getChartData(_x3){return _ref4.apply(this,arguments);};}();/**\n * Get and format transactions for global page\n */var getGlobalTransactions=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var transactions,_result$data,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:transactions={};_context2.prev=1;_context2.next=4;return client.query({query:GLOBAL_TXNS,fetchPolicy:'cache-first'});case 4:result=_context2.sent;transactions.mints=[];transactions.burns=[];transactions.swaps=[];(result===null||result===void 0?void 0:(_result$data=result.data)===null||_result$data===void 0?void 0:_result$data.transactions)&&result.data.transactions.map(function(transaction){if(transaction.mints.length>0){transaction.mints.map(function(mint){return transactions.mints.push(mint);});}if(transaction.burns.length>0){transaction.burns.map(function(burn){return transactions.burns.push(burn);});}if(transaction.swaps.length>0){transaction.swaps.map(function(swap){return transactions.swaps.push(swap);});}return true;});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);console.log(_context2.t0);case 14:return _context2.abrupt(\"return\",transactions);case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function getGlobalTransactions(){return _ref5.apply(this,arguments);};}();/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */var getEthPrice=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var utcCurrentTime,utcOneDayBack,ethPrice,ethPriceOneDay,priceChangeETH,_result$data2,_result$data2$bundles,_resultOneDay$data,_resultOneDay$data$bu,oneDayBlock,result,resultOneDay,currentPrice,oneDayBackPrice;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:utcCurrentTime=dayjs();utcOneDayBack=utcCurrentTime.subtract(1,'day').startOf('minute').unix();ethPrice=0;ethPriceOneDay=0;priceChangeETH=0;_context3.prev=5;_context3.next=8;return getBlockFromTimestamp(utcOneDayBack);case 8:oneDayBlock=_context3.sent;_context3.next=11;return client.query({query:ETH_PRICE(),fetchPolicy:'cache-first'});case 11:result=_context3.sent;_context3.next=14;return client.query({query:ETH_PRICE(oneDayBlock),fetchPolicy:'cache-first'});case 14:resultOneDay=_context3.sent;currentPrice=result===null||result===void 0?void 0:(_result$data2=result.data)===null||_result$data2===void 0?void 0:(_result$data2$bundles=_result$data2.bundles[0])===null||_result$data2$bundles===void 0?void 0:_result$data2$bundles.ethPrice;oneDayBackPrice=resultOneDay===null||resultOneDay===void 0?void 0:(_resultOneDay$data=resultOneDay.data)===null||_resultOneDay$data===void 0?void 0:(_resultOneDay$data$bu=_resultOneDay$data.bundles[0])===null||_resultOneDay$data$bu===void 0?void 0:_resultOneDay$data$bu.ethPrice;priceChangeETH=getPercentChange(currentPrice,oneDayBackPrice);ethPrice=currentPrice;ethPriceOneDay=oneDayBackPrice;_context3.next=25;break;case 22:_context3.prev=22;_context3.t0=_context3[\"catch\"](5);console.log(_context3.t0);case 25:return _context3.abrupt(\"return\",[ethPrice,ethPriceOneDay,priceChangeETH]);case 26:case\"end\":return _context3.stop();}}},_callee3,null,[[5,22]]);}));return function getEthPrice(){return _ref6.apply(this,arguments);};}();var PAIRS_TO_FETCH=500;var TOKENS_TO_FETCH=500;/**\n * Loop through every pair on uniswap, used for search\n */function getAllPairsOnUniswap(){return _getAllPairsOnUniswap.apply(this,arguments);}/**\n * Loop through every token on uniswap, used for search\n */function _getAllPairsOnUniswap(){_getAllPairsOnUniswap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var allFound,pairs,skipCount,_result$data3,_result$data4,result;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.prev=0;allFound=false;pairs=[];skipCount=0;case 4:if(allFound){_context11.next=13;break;}_context11.next=7;return client.query({query:ALL_PAIRS,variables:{skip:skipCount},fetchPolicy:'cache-first'});case 7:result=_context11.sent;skipCount=skipCount+PAIRS_TO_FETCH;pairs=pairs.concat(result===null||result===void 0?void 0:(_result$data3=result.data)===null||_result$data3===void 0?void 0:_result$data3.pairs);if((result===null||result===void 0?void 0:(_result$data4=result.data)===null||_result$data4===void 0?void 0:_result$data4.pairs.length)<PAIRS_TO_FETCH||pairs.length>PAIRS_TO_FETCH){allFound=true;}_context11.next=4;break;case 13:return _context11.abrupt(\"return\",pairs);case 16:_context11.prev=16;_context11.t0=_context11[\"catch\"](0);console.log(_context11.t0);case 19:case\"end\":return _context11.stop();}}},_callee11,null,[[0,16]]);}));return _getAllPairsOnUniswap.apply(this,arguments);}function getAllTokensOnUniswap(){return _getAllTokensOnUniswap.apply(this,arguments);}/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */function _getAllTokensOnUniswap(){_getAllTokensOnUniswap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){var allFound,skipCount,tokens,_result$data5,_result$data6,_result$data6$tokens,result;return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:_context12.prev=0;allFound=false;skipCount=0;tokens=[];case 4:if(allFound){_context12.next=13;break;}_context12.next=7;return client.query({query:ALL_TOKENS,variables:{skip:skipCount},fetchPolicy:'cache-first'});case 7:result=_context12.sent;tokens=tokens.concat(result===null||result===void 0?void 0:(_result$data5=result.data)===null||_result$data5===void 0?void 0:_result$data5.tokens);if((result===null||result===void 0?void 0:(_result$data6=result.data)===null||_result$data6===void 0?void 0:(_result$data6$tokens=_result$data6.tokens)===null||_result$data6$tokens===void 0?void 0:_result$data6$tokens.length)<TOKENS_TO_FETCH||tokens.length>TOKENS_TO_FETCH){allFound=true;}skipCount=skipCount+=TOKENS_TO_FETCH;_context12.next=4;break;case 13:return _context12.abrupt(\"return\",tokens);case 16:_context12.prev=16;_context12.t0=_context12[\"catch\"](0);console.log(_context12.t0);case 19:case\"end\":return _context12.stop();}}},_callee12,null,[[0,16]]);}));return _getAllTokensOnUniswap.apply(this,arguments);}export function useGlobalData(){var _useGlobalDataContext=useGlobalDataContext(),_useGlobalDataContext2=_slicedToArray(_useGlobalDataContext,2),state=_useGlobalDataContext2[0],_useGlobalDataContext3=_useGlobalDataContext2[1],update=_useGlobalDataContext3.update,updateAllPairsInUniswap=_useGlobalDataContext3.updateAllPairsInUniswap,updateAllTokensInUniswap=_useGlobalDataContext3.updateAllTokensInUniswap;var _useEthPrice=useEthPrice(),_useEthPrice2=_slicedToArray(_useEthPrice,2),ethPrice=_useEthPrice2[0],oldEthPrice=_useEthPrice2[1];var data=state===null||state===void 0?void 0:state.globalData;useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var globalData,allPairs,allTokens;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return getGlobalData(ethPrice,oldEthPrice);case 2:globalData=_context4.sent;globalData&&update(globalData);_context4.next=6;return getAllPairsOnUniswap();case 6:allPairs=_context4.sent;updateAllPairsInUniswap(allPairs);_context4.next=10;return getAllTokensOnUniswap();case 10:allTokens=_context4.sent;updateAllTokensInUniswap(allTokens);case 12:case\"end\":return _context4.stop();}}},_callee4);}));return _fetchData.apply(this,arguments);}if(!data&&ethPrice&&oldEthPrice){fetchData();}},[ethPrice,oldEthPrice,update,data,updateAllPairsInUniswap,updateAllTokensInUniswap]);return data||{};}export function useGlobalChartData(){var _state$chartData,_state$chartData2;var _useGlobalDataContext4=useGlobalDataContext(),_useGlobalDataContext5=_slicedToArray(_useGlobalDataContext4,2),state=_useGlobalDataContext5[0],updateChart=_useGlobalDataContext5[1].updateChart;var _useState=useState(),_useState2=_slicedToArray(_useState,2),oldestDateFetch=_useState2[0],setOldestDateFetched=_useState2[1];var _useTimeframe=useTimeframe(),_useTimeframe2=_slicedToArray(_useTimeframe,1),activeWindow=_useTimeframe2[0];var chartDataDaily=state===null||state===void 0?void 0:(_state$chartData=state.chartData)===null||_state$chartData===void 0?void 0:_state$chartData.daily;var chartDataWeekly=state===null||state===void 0?void 0:(_state$chartData2=state.chartData)===null||_state$chartData2===void 0?void 0:_state$chartData2.weekly;/**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */useEffect(function(){// based on window, get starttime\nvar startTime=getTimeframe(activeWindow);if(activeWindow&&startTime<oldestDateFetch||!oldestDateFetch){setOldestDateFetched(startTime);}},[activeWindow,oldestDateFetch]);/**\n   * Fetch data if none fetched or older data is needed\n   */useEffect(function(){function fetchData(){return _fetchData2.apply(this,arguments);}function _fetchData2(){_fetchData2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var _yield$getChartData,_yield$getChartData2,newChartData,newWeeklyData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return getChartData(oldestDateFetch);case 2:_yield$getChartData=_context5.sent;_yield$getChartData2=_slicedToArray(_yield$getChartData,2);newChartData=_yield$getChartData2[0];newWeeklyData=_yield$getChartData2[1];updateChart(newChartData,newWeeklyData);case 7:case\"end\":return _context5.stop();}}},_callee5);}));return _fetchData2.apply(this,arguments);}if(oldestDateFetch&&!(chartDataDaily&&chartDataWeekly)){fetchData();}},[chartDataDaily,chartDataWeekly,oldestDateFetch,updateChart]);return[chartDataDaily,chartDataWeekly];}export function useGlobalTransactions(){var _useGlobalDataContext6=useGlobalDataContext(),_useGlobalDataContext7=_slicedToArray(_useGlobalDataContext6,2),state=_useGlobalDataContext7[0],updateTransactions=_useGlobalDataContext7[1].updateTransactions;var transactions=state===null||state===void 0?void 0:state.transactions;useEffect(function(){function fetchData(){return _fetchData3.apply(this,arguments);}function _fetchData3(){_fetchData3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var txns;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(transactions){_context6.next=5;break;}_context6.next=3;return getGlobalTransactions();case 3:txns=_context6.sent;updateTransactions(txns);case 5:case\"end\":return _context6.stop();}}},_callee6);}));return _fetchData3.apply(this,arguments);}fetchData();},[updateTransactions,transactions]);return transactions;}export function useEthPrice(){var _useGlobalDataContext8=useGlobalDataContext(),_useGlobalDataContext9=_slicedToArray(_useGlobalDataContext8,2),state=_useGlobalDataContext9[0],updateEthPrice=_useGlobalDataContext9[1].updateEthPrice;var ethPrice=state===null||state===void 0?void 0:state[ETH_PRICE_KEY];var ethPriceOld=state===null||state===void 0?void 0:state['oneDayPrice'];useEffect(function(){function checkForEthPrice(){return _checkForEthPrice.apply(this,arguments);}function _checkForEthPrice(){_checkForEthPrice=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(){var _yield$getEthPrice,_yield$getEthPrice2,newPrice,oneDayPrice,priceChange;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:if(ethPrice){_context7.next=9;break;}_context7.next=3;return getEthPrice();case 3:_yield$getEthPrice=_context7.sent;_yield$getEthPrice2=_slicedToArray(_yield$getEthPrice,3);newPrice=_yield$getEthPrice2[0];oneDayPrice=_yield$getEthPrice2[1];priceChange=_yield$getEthPrice2[2];updateEthPrice(newPrice,oneDayPrice,priceChange);case 9:case\"end\":return _context7.stop();}}},_callee7);}));return _checkForEthPrice.apply(this,arguments);}checkForEthPrice();},[ethPrice,updateEthPrice]);return[ethPrice,ethPriceOld];}export function useAllPairsInUniswap(){var _useGlobalDataContext10=useGlobalDataContext(),_useGlobalDataContext11=_slicedToArray(_useGlobalDataContext10,1),state=_useGlobalDataContext11[0];var allPairs=state===null||state===void 0?void 0:state.allPairs;return allPairs||[];}export function useAllTokensInUniswap(){var _useGlobalDataContext12=useGlobalDataContext(),_useGlobalDataContext13=_slicedToArray(_useGlobalDataContext12,1),state=_useGlobalDataContext13[0];var allTokens=state===null||state===void 0?void 0:state.allTokens;return allTokens||[];}/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */export function useTopLps(){var _useGlobalDataContext14=useGlobalDataContext(),_useGlobalDataContext15=_slicedToArray(_useGlobalDataContext14,2),state=_useGlobalDataContext15[0],updateTopLps=_useGlobalDataContext15[1].updateTopLps;var topLps=state===null||state===void 0?void 0:state.topLps;var allPairs=useAllPairData();useEffect(function(){function fetchData(){return _fetchData4.apply(this,arguments);}function _fetchData4(){_fetchData4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(){var _Object$keys,_Object$keys$sort;var topPairs,topLpLists,topLps,sorted,shorter;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:// get top 20 by reserves\ntopPairs=(_Object$keys=Object.keys(allPairs))===null||_Object$keys===void 0?void 0:(_Object$keys$sort=_Object$keys.sort(function(a,b){return parseFloat(allPairs[a].reserveUSD>allPairs[b].reserveUSD?-1:1);}))===null||_Object$keys$sort===void 0?void 0:_Object$keys$sort.slice(0,99).map(function(pair){return pair;});_context9.next=3;return Promise.all(topPairs.map(/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(pair){var _yield$client$query,results;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.prev=0;_context8.next=3;return client.query({query:TOP_LPS_PER_PAIRS,variables:{pair:pair.toString()},fetchPolicy:'cache-first'});case 3:_yield$client$query=_context8.sent;results=_yield$client$query.data;if(!results){_context8.next=7;break;}return _context8.abrupt(\"return\",results.liquidityPositions);case 7:_context8.next=11;break;case 9:_context8.prev=9;_context8.t0=_context8[\"catch\"](0);case 11:case\"end\":return _context8.stop();}}},_callee8,null,[[0,9]]);}));return function(_x4){return _ref7.apply(this,arguments);};}()));case 3:topLpLists=_context9.sent;// get the top lps from the results formatted\ntopLps=[];topLpLists.filter(function(i){return!!i;})// check for ones not fetched correctly\n.map(function(list){return list.map(function(entry){var pairData=allPairs[entry.pair.id];return topLps.push({user:entry.user,pairName:pairData.token0.symbol+'-'+pairData.token1.symbol,pairAddress:entry.pair.id,token0:pairData.token0.id,token1:pairData.token1.id,usd:parseFloat(entry.liquidityTokenBalance)/parseFloat(pairData.totalSupply)*parseFloat(pairData.reserveUSD)});});});sorted=topLps.sort(function(a,b){return a.usd>b.usd?-1:1;});shorter=sorted.splice(0,100);updateTopLps(shorter);case 9:case\"end\":return _context9.stop();}}},_callee9);}));return _fetchData4.apply(this,arguments);}if(!topLps&&allPairs&&Object.keys(allPairs).length>0){fetchData();}});return topLps;}","map":{"version":3,"sources":["/Users/macbook/Desktop/juiceswap/juiceswap-docs/src/contexts/GlobalData.js"],"names":["React","createContext","useContext","useReducer","useMemo","useCallback","useEffect","useState","client","dayjs","utc","useTimeframe","getPercentChange","getBlockFromTimestamp","getBlocksFromTimestamps","get2DayPercentChange","getTimeframe","GLOBAL_DATA","GLOBAL_TXNS","GLOBAL_CHART","ETH_PRICE","ALL_PAIRS","ALL_TOKENS","TOP_LPS_PER_PAIRS","weekOfYear","useAllPairData","UPDATE","UPDATE_TXNS","UPDATE_CHART","UPDATE_ETH_PRICE","ETH_PRICE_KEY","UPDATE_ALL_PAIRS_IN_UNISWAP","UPDATE_ALL_TOKENS_IN_UNISWAP","UPDATE_TOP_LPS","extend","GlobalDataContext","useGlobalDataContext","reducer","state","type","payload","data","globalData","transactions","daily","weekly","chartData","ethPrice","oneDayPrice","ethPriceChange","allPairs","allTokens","topLps","Error","Provider","children","dispatch","update","updateTransactions","updateChart","updateEthPrice","updateAllPairsInUniswap","updateAllTokensInUniswap","updateTopLps","getGlobalData","oldEthPrice","oneDayData","twoDayData","utcCurrentTime","utcOneDayBack","subtract","unix","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","oneDayBlock","twoDayBlock","oneWeekBlock","twoWeekBlock","query","fetchPolicy","result","uniswapFactories","number","oneDayResult","twoDayResult","oneWeekResult","oneWeekData","twoWeekResult","twoWeekData","totalVolumeUSD","oneDayVolumeUSD","volumeChangeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","liquidityChangeUSD","console","log","getChartData","oldestDateToFetch","weeklyData","utcEndTime","skip","allFound","variables","startTime","concat","uniswapDayDatas","length","dayIndexSet","Set","dayIndexArray","oneDay","forEach","dayData","i","add","date","toFixed","push","dailyVolumeUSD","parseFloat","timestamp","latestLiquidityUSD","latestDayDats","mostLiquidTokens","index","nextDay","currentDayIndex","has","sort","a","b","parseInt","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","mints","burns","swaps","map","transaction","mint","burn","swap","getEthPrice","startOf","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","PAIRS_TO_FETCH","TOKENS_TO_FETCH","getAllPairsOnUniswap","pairs","skipCount","getAllTokensOnUniswap","tokens","useGlobalData","useEthPrice","fetchData","useGlobalChartData","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","newChartData","newWeeklyData","useGlobalTransactions","txns","ethPriceOld","checkForEthPrice","newPrice","priceChange","useAllPairsInUniswap","useAllTokensInUniswap","useTopLps","topPairs","Object","keys","reserveUSD","slice","pair","Promise","all","toString","results","liquidityPositions","topLpLists","filter","list","pairData","id","user","pairName","token0","symbol","token1","pairAddress","usd","liquidityTokenBalance","totalSupply","sorted","shorter","splice"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useTimeframe } from './Application'\nimport {\n  getPercentChange,\n  getBlockFromTimestamp,\n  getBlocksFromTimestamps,\n  get2DayPercentChange,\n  getTimeframe,\n} from '../utils'\nimport {\n  GLOBAL_DATA,\n  GLOBAL_TXNS,\n  GLOBAL_CHART,\n  ETH_PRICE,\n  ALL_PAIRS,\n  ALL_TOKENS,\n  TOP_LPS_PER_PAIRS,\n} from '../apollo/queries'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport { useAllPairData } from './PairData'\nconst UPDATE = 'UPDATE'\nconst UPDATE_TXNS = 'UPDATE_TXNS'\nconst UPDATE_CHART = 'UPDATE_CHART'\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\nconst UPDATE_ALL_PAIRS_IN_UNISWAP = 'UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS'\nconst UPDATE_ALL_TOKENS_IN_UNISWAP = 'UPDATE_ALL_TOKENS_IN_UNISWAP'\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nconst GlobalDataContext = createContext()\n\nfunction useGlobalDataContext() {\n  return useContext(GlobalDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { data } = payload\n      return {\n        ...state,\n        globalData: data,\n      }\n    }\n    case UPDATE_TXNS: {\n      const { transactions } = payload\n      return {\n        ...state,\n        transactions,\n      }\n    }\n    case UPDATE_CHART: {\n      const { daily, weekly } = payload\n      return {\n        ...state,\n        chartData: {\n          daily,\n          weekly,\n        },\n      }\n    }\n    case UPDATE_ETH_PRICE: {\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\n      return {\n        [ETH_PRICE_KEY]: ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      }\n    }\n\n    case UPDATE_ALL_PAIRS_IN_UNISWAP: {\n      const { allPairs } = payload\n      return {\n        ...state,\n        allPairs,\n      }\n    }\n\n    case UPDATE_ALL_TOKENS_IN_UNISWAP: {\n      const { allTokens } = payload\n      return {\n        ...state,\n        allTokens,\n      }\n    }\n\n    case UPDATE_TOP_LPS: {\n      const { topLps } = payload\n      return {\n        ...state,\n        topLps,\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        data,\n      },\n    })\n  }, [])\n\n  const updateTransactions = useCallback((transactions) => {\n    dispatch({\n      type: UPDATE_TXNS,\n      payload: {\n        transactions,\n      },\n    })\n  }, [])\n\n  const updateChart = useCallback((daily, weekly) => {\n    dispatch({\n      type: UPDATE_CHART,\n      payload: {\n        daily,\n        weekly,\n      },\n    })\n  }, [])\n\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\n    dispatch({\n      type: UPDATE_ETH_PRICE,\n      payload: {\n        ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      },\n    })\n  }, [])\n\n  const updateAllPairsInUniswap = useCallback((allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS_IN_UNISWAP,\n      payload: {\n        allPairs,\n      },\n    })\n  }, [])\n\n  const updateAllTokensInUniswap = useCallback((allTokens) => {\n    dispatch({\n      type: UPDATE_ALL_TOKENS_IN_UNISWAP,\n      payload: {\n        allTokens,\n      },\n    })\n  }, [])\n\n  const updateTopLps = useCallback((topLps) => {\n    dispatch({\n      type: UPDATE_TOP_LPS,\n      payload: {\n        topLps,\n      },\n    })\n  }, [])\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTransactions,\n            updateChart,\n            updateEthPrice,\n            updateTopLps,\n            updateAllPairsInUniswap,\n            updateAllTokensInUniswap,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTransactions,\n          updateTopLps,\n          updateChart,\n          updateEthPrice,\n          updateAllPairsInUniswap,\n          updateAllTokensInUniswap,\n        ]\n      )}\n    >\n      {children}\n    </GlobalDataContext.Provider>\n  )\n}\n\n/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */\nasync function getGlobalData(ethPrice, oldEthPrice) {\n  // data for each day , historic data used for % changes\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // get timestamps for the days\n    const utcCurrentTime = dayjs()\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\n\n    // get the blocks needed for time travel queries\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\n      utcOneDayBack,\n      utcTwoDaysBack,\n      utcOneWeekBack,\n      utcTwoWeeksBack,\n    ])\n\n    // fetch the global data\n    let result = await client.query({\n      query: GLOBAL_DATA(),\n      fetchPolicy: 'cache-first',\n    })\n    data = result.data.uniswapFactories[0]\n\n    // fetch the historical data\n    let oneDayResult = await client.query({\n      query: GLOBAL_DATA(oneDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.uniswapFactories[0]\n\n    let twoDayResult = await client.query({\n      query: GLOBAL_DATA(twoDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.uniswapFactories[0]\n\n    let oneWeekResult = await client.query({\n      query: GLOBAL_DATA(oneWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const oneWeekData = oneWeekResult.data.uniswapFactories[0]\n\n    let twoWeekResult = await client.query({\n      query: GLOBAL_DATA(twoWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const twoWeekData = twoWeekResult.data.uniswapFactories[0]\n\n    if (data && oneDayData && twoDayData && twoWeekData) {\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneDayData.totalVolumeUSD ? oneDayData.totalVolumeUSD : 0,\n        twoDayData.totalVolumeUSD ? twoDayData.totalVolumeUSD : 0\n      )\n\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneWeekData.totalVolumeUSD,\n        twoWeekData.totalVolumeUSD\n      )\n\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\n        data.txCount,\n        oneDayData.txCount ? oneDayData.txCount : 0,\n        twoDayData.txCount ? twoDayData.txCount : 0\n      )\n\n      // format the total liquidity in USD\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\n      const liquidityChangeUSD = getPercentChange(\n        data.totalLiquidityETH * ethPrice,\n        oneDayData.totalLiquidityETH * oldEthPrice\n      )\n\n      // add relevant fields with the calculated amounts\n      data.oneDayVolumeUSD = oneDayVolumeUSD\n      data.oneWeekVolume = oneWeekVolume\n      data.weeklyVolumeChange = weeklyVolumeChange\n      data.volumeChangeUSD = volumeChangeUSD\n      data.liquidityChangeUSD = liquidityChangeUSD\n      data.oneDayTxns = oneDayTxns\n      data.txnChange = txnChange\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\n/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */\nconst getChartData = async (oldestDateToFetch) => {\n  let data = []\n  let weeklyData = []\n  const utcEndTime = dayjs.utc()\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      let result = await client.query({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: oldestDateToFetch,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.uniswapDayDatas)\n      if (result.data.uniswapDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    if (data) {\n      let dayIndexSet = new Set()\n      let dayIndexArray = []\n      const oneDay = 24 * 60 * 60\n\n      // for each day, parse the daily volume and format for chart array\n      data.forEach((dayData, i) => {\n        // add the day index to the set of days\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n        dayIndexArray.push(data[i])\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      })\n\n      // fill in empty days ( there will be no day datas if no trades made that day )\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\n      let latestDayDats = data[0].mostLiquidTokens\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dailyVolumeUSD: 0,\n            totalLiquidityUSD: latestLiquidityUSD,\n            mostLiquidTokens: latestDayDats,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    // format weekly data for weekly sized chunks\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n    let startIndexWeekly = -1\n    let currentWeek = -1\n    data.forEach((entry, i) => {\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\n      if (week !== currentWeek) {\n        currentWeek = week\n        startIndexWeekly++\n      }\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\n      weeklyData[startIndexWeekly].date = data[i].date\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  return [data, weeklyData]\n}\n\n/**\n * Get and format transactions for global page\n */\nconst getGlobalTransactions = async () => {\n  let transactions = {}\n\n  try {\n    let result = await client.query({\n      query: GLOBAL_TXNS,\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = []\n    transactions.burns = []\n    transactions.swaps = []\n    result?.data?.transactions &&\n      result.data.transactions.map((transaction) => {\n        if (transaction.mints.length > 0) {\n          transaction.mints.map((mint) => {\n            return transactions.mints.push(mint)\n          })\n        }\n        if (transaction.burns.length > 0) {\n          transaction.burns.map((burn) => {\n            return transactions.burns.push(burn)\n          })\n        }\n        if (transaction.swaps.length > 0) {\n          transaction.swaps.map((swap) => {\n            return transactions.swaps.push(swap)\n          })\n        }\n        return true\n      })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\n/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */\nconst getEthPrice = async () => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n\n  let ethPrice = 0\n  let ethPriceOneDay = 0\n  let priceChangeETH = 0\n\n  try {\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n    let result = await client.query({\n      query: ETH_PRICE(),\n      fetchPolicy: 'cache-first',\n    })\n    let resultOneDay = await client.query({\n      query: ETH_PRICE(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\n    ethPrice = currentPrice\n    ethPriceOneDay = oneDayBackPrice\n  } catch (e) {\n    console.log(e)\n  }\n\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\n}\n\nconst PAIRS_TO_FETCH = 500\nconst TOKENS_TO_FETCH = 500\n\n/**\n * Loop through every pair on uniswap, used for search\n */\nasync function getAllPairsOnUniswap() {\n  try {\n    let allFound = false\n    let pairs = []\n    let skipCount = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_PAIRS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skipCount = skipCount + PAIRS_TO_FETCH\n      pairs = pairs.concat(result?.data?.pairs)\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\n        allFound = true\n      }\n    }\n    return pairs\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Loop through every token on uniswap, used for search\n */\nasync function getAllTokensOnUniswap() {\n  try {\n    let allFound = false\n    let skipCount = 0\n    let tokens = []\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_TOKENS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      tokens = tokens.concat(result?.data?.tokens)\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\n        allFound = true\n      }\n      skipCount = skipCount += TOKENS_TO_FETCH\n    }\n    return tokens\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */\nexport function useGlobalData() {\n  const [state, { update, updateAllPairsInUniswap, updateAllTokensInUniswap }] = useGlobalDataContext()\n  const [ethPrice, oldEthPrice] = useEthPrice()\n\n  const data = state?.globalData\n\n  useEffect(() => {\n    async function fetchData() {\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\n      globalData && update(globalData)\n\n      let allPairs = await getAllPairsOnUniswap()\n      updateAllPairsInUniswap(allPairs)\n\n      let allTokens = await getAllTokensOnUniswap()\n      updateAllTokensInUniswap(allTokens)\n    }\n    if (!data && ethPrice && oldEthPrice) {\n      fetchData()\n    }\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInUniswap, updateAllTokensInUniswap])\n\n  return data || {}\n}\n\nexport function useGlobalChartData() {\n  const [state, { updateChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n\n  const chartDataDaily = state?.chartData?.daily\n  const chartDataWeekly = state?.chartData?.weekly\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    // based on window, get starttime\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  /**\n   * Fetch data if none fetched or older data is needed\n   */\n  useEffect(() => {\n    async function fetchData() {\n      // historical stuff for chart\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch)\n      updateChart(newChartData, newWeeklyData)\n    }\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly)) {\n      fetchData()\n    }\n  }, [chartDataDaily, chartDataWeekly, oldestDateFetch, updateChart])\n\n  return [chartDataDaily, chartDataWeekly]\n}\n\nexport function useGlobalTransactions() {\n  const [state, { updateTransactions }] = useGlobalDataContext()\n  const transactions = state?.transactions\n  useEffect(() => {\n    async function fetchData() {\n      if (!transactions) {\n        let txns = await getGlobalTransactions()\n        updateTransactions(txns)\n      }\n    }\n    fetchData()\n  }, [updateTransactions, transactions])\n  return transactions\n}\n\nexport function useEthPrice() {\n  const [state, { updateEthPrice }] = useGlobalDataContext()\n  const ethPrice = state?.[ETH_PRICE_KEY]\n  const ethPriceOld = state?.['oneDayPrice']\n  useEffect(() => {\n    async function checkForEthPrice() {\n      if (!ethPrice) {\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\n      }\n    }\n    checkForEthPrice()\n  }, [ethPrice, updateEthPrice])\n\n  return [ethPrice, ethPriceOld]\n}\n\nexport function useAllPairsInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allPairs = state?.allPairs\n\n  return allPairs || []\n}\n\nexport function useAllTokensInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allTokens = state?.allTokens\n\n  return allTokens || []\n}\n\n/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */\nexport function useTopLps() {\n  const [state, { updateTopLps }] = useGlobalDataContext()\n  let topLps = state?.topLps\n\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    async function fetchData() {\n      // get top 20 by reserves\n      let topPairs = Object.keys(allPairs)\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\n        ?.slice(0, 99)\n        .map((pair) => pair)\n\n      let topLpLists = await Promise.all(\n        topPairs.map(async (pair) => {\n          // for each one, fetch top LPs\n          try {\n            const { data: results } = await client.query({\n              query: TOP_LPS_PER_PAIRS,\n              variables: {\n                pair: pair.toString(),\n              },\n              fetchPolicy: 'cache-first',\n            })\n            if (results) {\n              return results.liquidityPositions\n            }\n          } catch (e) {}\n        })\n      )\n\n      // get the top lps from the results formatted\n      const topLps = []\n      topLpLists\n        .filter((i) => !!i) // check for ones not fetched correctly\n        .map((list) => {\n          return list.map((entry) => {\n            const pairData = allPairs[entry.pair.id]\n            return topLps.push({\n              user: entry.user,\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\n              pairAddress: entry.pair.id,\n              token0: pairData.token0.id,\n              token1: pairData.token1.id,\n              usd:\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\n                parseFloat(pairData.reserveUSD),\n            })\n          })\n        })\n\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\n      const shorter = sorted.splice(0, 100)\n      updateTopLps(shorter)\n    }\n\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\n      fetchData()\n    }\n  })\n\n  return topLps\n}\n"]},"metadata":{},"sourceType":"module"}