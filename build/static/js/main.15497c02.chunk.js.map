{"version":3,"sources":["contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","contexts/User.js","components/Header/components/Logo.jsx","components/Header/components/ListIcon.jsx","components/Header/components/Search.jsx","components/SideBar/components/Nav.jsx","components/ButtonMenu/ButtonMenu.jsx","components/Header/Header.jsx","components/SideBar/SideBar.jsx","components/Title/Title.jsx","views/Home/Home.jsx","components/Pagination/Pagination.jsx","views/Migrating/Migrating.jsx","views/Faq/Faq.jsx","views/Builds/Builds.jsx","views/Voting/Voting.jsx","views/Presskit/Presskit.jsx","views/Official/Official.jsx","views/Governance/Governance.jsx","views/Lending/Lending.jsx","views/Nfts/Nfts.jsx","views/Basics/Basics.jsx","views/Amm/Amm.jsx","views/Yield/Yield.jsx","components/TitleChild/TitleChild.jsx","views/Amm/PageChild/Swapping/Swapping.jsx","views/Amm/PageChild/Impermanent.jsx","views/Amm/PageChild/Liquidity/Liquidity.jsx","components/Menu/Menu.jsx","views/Amm/PageChild/Swapping/PageChild/JUSswap.jsx","views/Amm/PageChild/Swapping/PageChild/Classic.jsx","views/Amm/PageChild/Swapping/PageChild/Lite.jsx","views/Amm/PageChild/Liquidity/PageChild/JUSswap.jsx","views/Amm/PageChild/Liquidity/PageChild/Classic.jsx","views/Amm/PageChild/Liquidity/PageChild/Lite.jsx","views/Yield/PageChild/TheJuiceBar/PageChild/JUSswap.jsx","views/Yield/PageChild/TheJuiceBar/PageChild/Classic.jsx","views/Yield/PageChild/TheJuiceBar/PageChild/Lite.jsx","views/Yield/PageChild/TheJuiceMenu/PageChild/JUSswap.jsx","views/Yield/PageChild/TheJuiceMenu/PageChild/Classic.jsx","views/Yield/PageChild/MenuWeek/PageChild/JUSswap.jsx","views/Yield/PageChild/MenuWeek/PageChild/Classic.jsx","views/Yield/PageChild/MenuWeek/MenuWeek.jsx","views/Yield/PageChild/TheJuiceBar/TheJuiceBar.jsx","views/Yield/PageChild/TheJuiceMenu/TheJuiceMenu.jsx","views/Staking/Staking.jsx","views/Pools/Pools.jsx","views/TokenExchange/TokenExchange.jsx","views/TokenFarm/TokenFarm.jsx","views/TokenStak/TokenStak.jsx","views/Reclamation/Reclamation.jsx","components/ButtonTotop/ButtonTotop.jsx","App.js","index.js"],"names":["UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","ThemeProvider","isDarkMode","toggleDarkMode","useDarkModeManager","darkMode","theme","color","customColor","textColor","panelColor","backgroundColor","uniswapPink","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","blue","background","GlobalStyle","styled","Text","div","a","attrs","target","rel","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","blockClient","timeframeOptions","WEEK","MONTH","ALL_TIME","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","ETH_PRICE","block","PairFields","PAIRS_CURRENT","PAIR_DATA","pairAddress","PAIRS_BULK","PAIRS_HISTORICAL_BULK","pairs","pairsString","pair","TokenFields","TOKENS_CURRENT","TOKENS_DYNAMIC","TOKEN_DATA","tokenAddress","Ajv","allErrors","compile","schema","dayjs","extend","utc","ApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","toFormat","_Decimal","BigNumber","set","EXPONENTIAL_AT","getTimestampsForChanges","utcCurrentTime","subtract","startOf","unix","splitQuery","query","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","length","sliced","slice","fetchPolicy","result","data","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","blocks","number","getBlocksFromTimestamps","t","push","split","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","parseFloat","previousChange","adjustedPercentChange","isNaN","isFinite","getPercentChange","TOKEN_OVERRIDES","name","symbol","updateNameData","token0","id","includes","token1","safeAccess","object","path","reduce","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","address","transactions","txns","chartData","hourlyData","timeWindow","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","ethPrice","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","Promise","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","i","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","console","log","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","reserveUSD","createdAtBlockNumber","useEthPrice","formattedPairs","getData","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","oneDayPrice","ethPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateAllPairsInUniswap","updateAllTokensInUniswap","updateTopLps","getEthPrice","utcOneDayBack","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","ethPriceOld","newPrice","priceChange","checkForEthPrice","TokenDataContext","useTokenDataContext","topTokens","token","interval","updateTopTokens","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","utcTwoDaysBack","twoDayBlock","tokens","tradeVolumeUSD","txCount","oneDayTxns","txnChange","currentLiquidityUSD","totalLiquidity","derivedETH","oldLiquidityUSD","priceChangeUSD","priceUSD","totalLiquidityUSD","oneDayVolumeETH","tradeVolume","aaveData","bulkResults","UserContext","account","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","nav","StyledLink","NavLink","Logo","className","to","src","alt","BoxIcon","ListIcon","href","class","GroupNav","SearchPage","Search","method","action","required","maxLength","BoxSidebar","TitleSide","h3","Nav","addEventListener","scrollY","document","body","classList","add","remove","useState","isActive","setActive","isActives","setActives","exact","activeClassName","onClick","StyledMainNav","StyledBlock","StyledHover","StyledBg","StyledCard","ButtonMenu","status","onClose","viewBox","width","xmlns","d","StyledButtonMenu","StyleHeader","header","HeaderItem","HeaderTop","section","Header","Status","setStatus","preserveAspectRatio","height","fill","stroke-width","stroke-linecap","stroke-linejoin","stroke","x1","y1","x2","y2","StyledSideBar","SideBar","ContentTitle","Title","title","image","Box_home","Home","props","size","BoxPagination","BoxButton","Pagination","prev","next","linkprev","linknext","Migrating","Faq","Builds","Classic","Official","Governance","Nfts","ThumPage","p","ListMenu","ul","Amm","Yield","thumbnail","TitleChild","Swapping","Impermanent","Liquidity","JUSswap","Lite","MenuWeek","TheJuiceBar","TheJuiceMenu","Staking","Pools","TokenExchange","TokenFarm","TokenStak","Reclamation","style","textDecoration","ToTop","ButtonTotop","isVisible","setIsVisible","toggleVisibility","pageYOffset","scrollTo","top","behavior","StyledScreen","Layout","BoxContent","App","Lending","Basics","Voting","Presskit","GOOGLE_ANALYTICS_ID","process","REACT_APP_GOOGLE_ANALYTICS_ID","ContextProviders","Updaters","ReactGA","initialize","customBrowserType","isMobile","testMode","debug","ReactDOM","render","getElementById"],"mappings":"6NAcMA,EAAiB,CAFL,YALM,kBACD,iBAEH,cADC,gBASfC,EAAsBC,0BAE5B,SAASC,IACP,OAAOC,qBAAWH,GAGpB,SAASI,EAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IAVe,aAUG,IACRE,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MACb,GAAKV,EAAeW,MAAK,SAACC,GAAD,OAAOA,IAAMH,KAGpC,OAAO,2BACFH,GADL,kBAEGG,EAAMC,IAJT,MAAMG,MAAM,mDAAD,OAAoDJ,EAApD,OAQf,QACE,MAAMI,MAAM,2DAAD,OAA4DN,EAA5D,QAKjB,SAASO,IAAQ,IAAD,EACRC,GAAmB,mBAxCX,UACQ,GAuCG,cAhCT,aAkCD,GAFU,cArCH,kBAwCD,IAHI,cApCJ,iBAwCD,IAJK,cAnCN,eAwCD,IALO,cAlCP,cAwCD,IANQ,GASzB,IACE,IAAMC,EAASC,KAAKC,MAAMC,OAAOC,aAAaC,QApDlC,YAqDZ,OAlDoB,IAkDhBL,EAAM,QAEDD,EAEA,2BAAKA,GAAwBC,GAEtC,SACA,OAAOD,GAII,SAASO,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,OAASoB,EAAWX,GADZ,mBACtCR,EADsC,KAC/BoB,EAD+B,KAGvCC,EAAYC,uBAAY,SAACnB,EAAKC,GAClCgB,EAAS,CAAEnB,KAtDI,aAsDcC,QAAS,CAAEC,MAAKC,aAC5C,IAEH,OACE,kBAACT,EAAoBqB,SAArB,CAA8BZ,MAAOmB,mBAAQ,iBAAM,CAACvB,EAAO,CAAEqB,gBAAc,CAACrB,EAAOqB,KAChFJ,GAKA,SAASO,IAAW,IAAD,EACR3B,IAATG,EADiB,oBAOxB,OAJAyB,qBAAU,WACRZ,OAAOC,aAAaY,QAlFR,UAkFyBf,KAAKgB,UAAL,2BAAoB3B,GAApB,kBA9EtB,aA8E+D4B,KAAKC,MAAMC,KAAKC,MAAQ,YAGjG,K,0hFCjFM,SAASC,EAAT,GAAsC,IAAbf,EAAY,EAAZA,SAAY,EDoF7C,WAA+B,IAAD,EACJpB,IADI,mBAC5BG,EAD4B,KACnBqB,EADmB,KACnBA,UACZY,EAAajC,EAAK,UAChBkC,EAAiBZ,uBACrB,SAAClB,GACCiB,EAnFY,aAmFmB,IAAVjB,IAA6B,IAAVA,EAAiBA,GAAS6B,KAEpE,CAACZ,EAAWY,IAEd,MAAO,CAACA,EAAYC,GC5FDC,GAAZC,EAD2C,oBAGlD,OAAO,kBAAC,IAAD,CAA+BC,MAAOA,EAAMD,IAAYnB,GAGjE,IAAMoB,EAAQ,SAACD,EAAUE,GAAX,MAAsB,CAClCC,YAAaD,EACbE,UAAWJ,EAAWE,EAAQ,QAE9BG,WAAuB,yBACvBC,gBAAiBN,EAAW,UAAY,UAExCO,YAAaP,EAAW,UAAY,QAEpCQ,aAAcR,EAAW,UAAY,UACrCS,gBAAiBT,EAAW,UAAY,UACxCU,YAAaV,EAAW,OAAS,UACjCW,YAAaX,EAAW,UAAY,UAEpCY,MAAOZ,EAAW,UAAY,UAC9Ba,MAAOb,EAAW,UAAY,UAC9Bc,MAAOd,EAAW,UAAY,UAC9Be,MAAOf,EAAW,UAAY,UAC9BgB,MAAOhB,EAAW,UAAY,UAG9BiB,MAAO,UAGPC,IAAKlB,EAAW,UAAY,UAC5BmB,IAAKnB,EAAW,UAAY,UAC5BoB,IAAKpB,EAAW,UAAY,UAC5BqB,IAAKrB,EAAW,UAAY,UAC5BsB,IAAKtB,EAAW,UAAY,UAC5BuB,IAAKvB,EAAW,OAAS,UAGzBwB,QAASxB,EAAW,mBAAqB,kBACzCyB,WAAYzB,EAAW,kBAAoB,wBAC3C0B,UAAW1B,EAAW,UAAY,cAClC2B,QAAS3B,EAAW,0BAA4B,0BAGhD4B,SAAU5B,EAAW,UAAY,UACjC6B,SAAU7B,EAAW,UAAY,UACjC8B,SAAU9B,EAAW,UAAY,UACjC+B,SAAU/B,EAAW,YAAc,UACnCgC,SAAUhC,EAAW,YAAc,UAGnCiC,aAAcjC,EAAW,UAAY,UAGrCkC,WAAYlC,EAAW,UAAY,UACnCmC,WAAYnC,EAAW,YAAc,UACrCoC,WAAYpC,EAAW,YAAc,UAErCqC,QAASrC,EAAW,OAAS,UAG7BsC,KAAM,UACNC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,KAAM,UACNC,KAAM,SAENC,WAAY5C,EAAW,QAAH,+DAkFT6C,GA/EOC,YAAOC,IAAPD,CAAH,KACN,gBAAG5C,EAAH,EAAGA,MAAH,SAAUD,MAAkBC,MAiClB4C,IAAOE,IAAV,KAMEF,IAAOG,EAAEC,MAAM,CACjCC,OAAQ,SACRC,IAAK,uBAFaN,CAAH,KAMN,qBAAG7C,MAAkB2B,YAcAkB,IAAOE,IAAV,KASb,gBAAG1C,EAAH,EAAGA,gBAAH,oDAC2BA,EAD3B,wCAUW+C,YAAH,IAclB,K,+CCtKOC,EAAS,IAAIC,IAAa,CACrCb,KAAM,IAAIc,IAAS,CACjBC,IAAK,+DAEPC,MAAO,IAAIC,IACXC,aAAa,IA2BFC,GAxBe,IAAIN,IAAa,CAC3Cb,KAAM,IAAIc,IAAS,CACjBC,IAAK,gDAEPC,MAAO,IAAIC,IACXC,aAAa,IAGS,IAAIL,IAAa,CACvCb,KAAM,IAAIc,IAAS,CACjBC,IAAK,8DAEPC,MAAO,IAAIC,IACXC,aAAa,IAGc,IAAIL,IAAa,CAC5Cb,KAAM,IAAIc,IAAS,CACjBC,IAAK,8DAEPC,MAAO,IAAIC,IACXC,aAAa,IAGY,IAAIL,IAAa,CAC1Cb,KAAM,IAAIc,IAAS,CACjBC,IAAK,wEAEPC,MAAO,IAAIC,O,iBCpCAG,EAAmB,CAC9BC,KAAM,SACNC,MAAO,UAGPC,SAAU,Y,ilXCNmBC,IAAH,MAiBCA,IAAH,MAjBnB,IA6CMC,GAAYD,IAAH,MAeTE,GAAa,SAACC,GACzB,IAAIC,EAAc,iBASlB,OARAA,GAAeD,EAAWE,KAAI,SAACC,GAC7B,MAAM,IAAN,OAAWA,EAAX,8FAA0GA,EAA1G,2BACEA,EAAY,IADd,iCAMFF,GAAe,IACRJ,IAAII,IAuGAG,IA5DoBP,IAAH,MA4DL,SAACQ,GACxB,IAAMJ,EAAcI,EAAK,4DD/KF,IC+KE,8BAGiCA,EAHjC,iHD/KF,IC+KE,2DAgBzB,OAAOR,IAAII,KA2aPK,IA7ZmCT,IAAH,MAiCRA,IAAH,MAQCA,IAAH,MA2BKA,IAAH,MAyBMA,IAAH,MAuEJA,IAAH,MAaMA,IAAH,KAqCEA,IAAH,KAgCEA,IAAH,KAuEEA,IAAH,KAWKA,IAAH,KAuBEA,IAAH,KA4CCA,IAAH,KAkBN,wcAgCHU,GAAgBV,IAAH,KAQbW,GAAY,SAACC,EAAaJ,GACrC,IAAMJ,EAAW,gBACbK,GADa,4CAGLD,EAAK,0BAAsBA,EAAtB,QAHA,0BAGqDI,EAHrD,iDAOjB,OAAOZ,IAAII,IA2BAS,GAAab,IAAH,IACnBS,IAQSK,GAAwB,SAACN,EAAOO,GAC3C,IAAIC,EAAW,IACfD,EAAMV,KAAI,SAACY,GACT,OAAQD,GAAW,WAAQC,EAAR,QAGrB,IAAIb,EAAW,kEADfY,GAAe,IACA,8BAEuDR,EAFvD,0KAWf,OAAOR,IAAII,IA8BPc,IA3BqBlB,IAAH,KA2BP,0LAcJmB,GAAiBnB,IAAH,IACvBkB,IAQSE,GAAiB,SAACZ,GAC7B,IAAMJ,EAAW,gBACbc,GADa,8DAGYV,EAHZ,8GAQjB,OAAOR,IAAII,IAGAiB,GAAa,SAACC,EAAcd,GACvC,IAAMJ,EAAW,gBACbc,GADa,8CAGJV,EAAK,2BAAuBA,EAAvB,QAHD,wBAGqDc,EAHrD,wFAMoBA,EANpB,iIASoBA,EATpB,8FAcjB,OAAOtB,IAAII,I,IAGwBJ,IAAH,K,wDC1wBP,I,QAAIuB,GAAI,CAAEC,WAAW,IAAQC,QAAQC,ICnBhEC,KAAMC,OAAOC,MAEb,IAcMC,GAAqBxI,0BAM3B,SAASG,GAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IAtBW,SAsBG,IACJoI,EAAanI,EAAbmI,SACR,OAAO,2BACFrI,GADL,kBAfW,WAiBGqI,IAGhB,IA5BqB,mBA4BG,IACdC,EAAiBpI,EAAjBoI,aACR,OAAO,2BACFtI,GADL,kBAvBW,WAyBGsI,IAGhB,IAlCyB,uBAkCG,IAClB1B,EAAc1G,EAAd0G,UACR,OAAO,2BACF5G,GADL,kBA5BgB,gBA8BG4G,IAIrB,IAxCwB,sBAwCG,IACjBE,EAAU5G,EAAV4G,MACR,OAAO,2BACF9G,GADL,kBAnCe,eAqCG8G,IAIpB,IA/CsB,oBA+CG,IACfA,EAAU5G,EAAV4G,MACR,OAAO,2BACF9G,GADL,kBA1Ca,aA4CG8G,IAIlB,IAzD6B,2BAyDG,IACtByB,EAAoBrI,EAApBqI,gBACR,OAAO,2BACFvI,GADL,kBAvDmB,mBAyDGuI,IAIxB,QACE,MAAMhI,MAAM,mDAAD,OAAoDN,EAApD,QAKjB,IAAMuI,GAAgB,CACpBC,SAAU,MACVC,SAAUxC,EAAiBG,UAGd,SAASrF,GAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,GAASyI,IADD,mBACtCxI,EADsC,KAC/BoB,EAD+B,KAEvCuH,EAASrH,uBAAY,SAAC+G,GAC1BjH,EAAS,CACPnB,KAnFS,SAoFTC,QAAS,CACPmI,gBAGH,IAGGO,EAAkBtH,uBAAY,SAACgH,GACnClH,EAAS,CACPnB,KA5FmB,mBA6FnBC,QAAS,CACPoI,oBAGH,IAGGO,EAAqBvH,uBAAY,SAACsF,GACtCxF,EAAS,CACPnB,KArGuB,uBAsGvBC,QAAS,CACP0G,iBAGH,IAEGkC,EAAwBxH,uBAAY,SAACiH,GACzCnH,EAAS,CACPnB,KA7G2B,2BA8G3BC,QAAS,CACPqI,uBAGH,IAEGQ,EAAoBzH,uBAAY,SAACwF,GACrC1F,EAAS,CACPnB,KArHsB,sBAsHtBC,QAAS,CACP4G,aAGH,IAEGkC,EAAkB1H,uBAAY,SAACwF,GACnC1F,EAAS,CACPnB,KA7HoB,oBA8HpBC,QAAS,CACP4G,aAGH,IAEH,OACE,kBAACsB,GAAmBpH,SAApB,CACEZ,MAAOmB,mBACL,iBAAM,CACJvB,EACA,CACE2I,SACAE,qBACAD,kBACAE,wBACAC,oBACAC,sBAGJ,CAAChJ,EAAO2I,EAAQC,EAAiBC,EAAoBC,EAAuBC,EAAmBC,KAGhG/H,G,mECrJSgI,KAASC,MACzBC,aAAUC,IAAI,CAAEC,eAAgB,KAChCpB,KAAMC,OAAOC,MAmFN,SAASmB,KACd,IAAMC,EAAiBtB,OAIvB,MAAO,CAHIsB,EAAeC,SAAS,EAAG,OAAOC,QAAQ,UAAUC,OACpDH,EAAeC,SAAS,EAAG,OAAOC,QAAQ,UAAUC,OACjDH,EAAeC,SAAS,EAAG,QAAQC,QAAQ,UAAUC,QAI9D,SAAeC,GAAtB,yC,8CAAO,WAA0BC,EAAOC,EAAaC,EAAMC,GAApD,uCAAA1E,EAAA,sDAA0D2E,EAA1D,+BAAsE,IACvEC,EAAc,GACdC,GAAW,EACXC,EAAO,EAHN,UAKGD,EALH,wBAMCE,EAAML,EAAKM,OACXF,EAAOH,EAAYD,EAAKM,SAC1BD,EAAMD,EAAOH,GAEXM,EAASP,EAAKQ,MAAMJ,EAAMC,GAV3B,UAWgBP,EAAYD,MAAM,CACnCA,MAAOA,EAAK,WAAL,cAASE,GAAT,QAAeQ,KACtBE,YAAa,gBAbZ,QAWCC,EAXD,OAeHR,EAAW,2BACNA,GACAQ,EAAOC,MAERC,OAAOC,KAAKH,EAAOC,MAAML,OAASL,GAAaG,EAAOH,EAAYD,EAAKM,OACzEH,GAAW,EAEXC,GAAQH,EAtBP,gDA0BEC,GA1BF,6C,sBAkCA,SAAeY,GAAtB,mC,8CAAO,WAAqCjE,GAArC,qBAAAvB,EAAA,sEACcY,EAAY2D,MAAM,CACnCA,MAAOrD,GACPuE,UAAW,CACTC,cAAenE,EACfoE,YAAapE,EAAY,KAE3B4D,YAAa,gBAPV,cACDC,EADC,gCASEA,QATF,IASEA,GATF,UASEA,EAAQC,YATV,iBASE,EAAcO,cAThB,iBASE,EAAuB,UATzB,aASE,EAA2BC,QAT7B,4C,sBAmBA,SAAeC,GAAtB,mC,8CAAO,WAAuC1E,GAAvC,iCAAApB,EAAA,yDAAmD2E,EAAnD,+BAA+D,IACzC,KAAb,OAAVvD,QAAU,IAAVA,OAAA,EAAAA,EAAY4D,QADX,yCAEI,IAFJ,uBAKmBV,GAAWnD,GAAYP,EAAa,GAAIQ,EAAYuD,GALvE,OAQL,GAHIC,EALC,OAODgB,EAAS,GACThB,EACF,IAASmB,KAAKnB,EACRA,EAAYmB,GAAGf,OAAS,GAC1BY,EAAOI,KAAK,CACVzE,UAAWwE,EAAEE,MAAM,KAAK,GACxBJ,OAAQjB,EAAYmB,GAAG,GAAf,SAbX,yBAkBEH,GAlBF,4C,sBAiRA,IAAMM,GAAuB,SAACC,EAAUC,EAAiBC,GAE9D,IAAIC,EAAgBC,WAAWJ,GAAYI,WAAWH,GAClDI,EAAiBD,WAAWH,GAAmBG,WAAWF,GAExDI,EAAyBF,WAAWD,EAAgBE,GAAkBD,WAAWC,GAAmB,IAE1G,OAAIE,MAAMD,KAA2BE,SAASF,GACrC,CAACH,EAAe,GAElB,CAACA,EAAeG,IAQZG,GAAmB,SAACT,EAAUC,GACzC,IAAMK,GACFF,WAAWJ,GAAYI,WAAWH,IAAoBG,WAAWH,GAAoB,IACzF,OAAIM,MAAMD,KAA2BE,SAASF,GACrC,EAEFA,G,wBCzbHI,GAA2E,CAC/E,6CAA8C,CAC5CC,KAAM,kBACNC,OAAQ,OAEV,6CAA8C,CAC5CD,KAAM,SACNC,OAAQ,SAKL,SAASC,GAAe3B,GAAyC,IAAD,IAWrE,OAVQ,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM4B,cAAN,eAAcC,KAAM5B,OAAOC,KAAKsB,IAAiBM,SAAS9B,EAAK4B,OAAOC,MACxE7B,EAAK4B,OAAOH,KAAOD,GAAgBxB,EAAK4B,OAAOC,IAAIJ,KACnDzB,EAAK4B,OAAOF,OAASF,GAAgBxB,EAAK4B,OAAOC,IAAIH,SAG/C,OAAJ1B,QAAI,IAAJA,GAAA,UAAAA,EAAM+B,cAAN,eAAcF,KAAM5B,OAAOC,KAAKsB,IAAiBM,SAAS9B,EAAK+B,OAAOF,MACxE7B,EAAK+B,OAAON,KAAOD,GAAgBxB,EAAK+B,OAAOF,IAAIJ,KACnDzB,EAAK+B,OAAOL,OAASF,GAAgBxB,EAAK+B,OAAOF,IAAIH,QAGhD1B,ECDF,SAASgC,GAAWC,EAAQC,GACjC,OAAOD,EACHC,EAAKC,QACH,SAACC,EAAaC,GAAd,OAAgCD,GAAeA,EAAYC,GAAgBD,EAAYC,GAAgB,OACvGJ,GAEF,KARN1E,KAAMC,OAAOC,MAWb,IAAM6E,GAAkBpN,0BAExB,SAASqN,KACP,OAAOnN,qBAAWkN,IAGpB,SAASjN,GAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IAzBW,SAyBG,IACJiH,EAAsBhH,EAAtBgH,YAAawD,EAASxK,EAATwK,KACrB,OAAO,2BACF1K,GADL,kBAEGkH,EAFH,kCAGOlH,QAHP,IAGOA,OAHP,EAGOA,EAAQkH,IACRwD,KAKT,IAjCqB,mBAiCG,IACdwC,EAAahN,EAAbgN,SACJC,EAAQ,GAIZ,OAHAD,EAASvG,KAAI,SAACY,GACZ,OAAQ4F,EAAM5F,EAAKgF,IAAMhF,KAEpB,2BACFvH,GACAmN,GAIP,IA/CqB,mBA+CG,IACdC,EAA0BlN,EAA1BkN,QAASC,EAAiBnN,EAAjBmN,aACjB,OAAO,2BACFrN,GADL,kBAEGoN,EAFH,2BAGQV,GAAW1M,EAAO,CAACoN,KAAa,IAHxC,IAIIE,KAAMD,MAIZ,IAxDsB,oBAwDG,IACfD,EAAuBlN,EAAvBkN,QAASG,EAAcrN,EAAdqN,UACjB,OAAO,2BACFvN,GADL,kBAEGoN,EAFH,2BAGQV,GAAW1M,EAAO,CAACoN,KAAa,IAHxC,IAIIG,gBAKN,IAjEuB,qBAiEG,IAAD,EACfH,EAAoClN,EAApCkN,QAASI,EAA2BtN,EAA3BsN,WAAYC,EAAevN,EAAfuN,WAC7B,OAAO,2BACFzN,GADL,kBAEGoN,EAFH,kCAGOpN,QAHP,IAGOA,OAHP,EAGOA,EAAQoN,IAHf,IAIII,WAAW,2BAAD,OACLxN,QADK,IACLA,GADK,UACLA,EAAQoN,UADH,aACL,EAAkBI,YADb,kBAEPC,EAAaD,QAMtB,QACE,MAAMjN,MAAM,mDAAD,OAAoDN,EAApD,QAKF,SAASe,GAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,GAAS,IADD,mBACtCC,EADsC,KAC/BoB,EAD+B,KAIvCuH,EAASrH,uBAAY,SAAC4F,EAAawD,GACvCtJ,EAAS,CACPnB,KA/FS,SAgGTC,QAAS,CACPgH,cACAwD,YAGH,IAEGgD,EAAiBpM,uBAAY,SAAC4L,GAClC9L,EAAS,CACPnB,KAtGmB,mBAuGnBC,QAAS,CACPgN,gBAGH,IAEGS,EAAiBrM,uBAAY,SAAC8L,EAASC,GAC3CjM,EAAS,CACPnB,KAjHmB,mBAkHnBC,QAAS,CAAEkN,UAASC,oBAErB,IAEGO,EAAkBtM,uBAAY,SAAC8L,EAASG,GAC5CnM,EAAS,CACPnB,KAvHoB,oBAwHpBC,QAAS,CAAEkN,UAASG,iBAErB,IAEGM,EAAmBvM,uBAAY,SAAC8L,EAASI,EAAYC,GACzDrM,EAAS,CACPnB,KA5HqB,qBA6HrBC,QAAS,CAAEkN,UAASI,aAAYC,kBAEjC,IAEH,OACE,kBAACT,GAAgBhM,SAAjB,CACEZ,MAAOmB,mBACL,iBAAM,CACJvB,EACA,CACE2I,SACAgF,iBACAC,kBACAF,iBACAG,uBAGJ,CAAC7N,EAAO2I,EAAQgF,EAAgBC,EAAiBF,EAAgBG,KAGlE5M,G,SAKQ6M,G,mFAAf,WAA+BC,EAAUC,GAAzC,2DAAA3I,EAAA,+DAC0BiE,KAD1B,mBACS2E,EADT,KACaC,EADb,KACiBC,EADjB,cAEkEhD,GAAwB,CAAC8C,EAAIC,EAAIC,IAFnG,0CAEiBC,EAFjB,KAESlD,OAAwBmD,EAFjC,KAEyBnD,OAAwBoD,EAFjD,KAEyCpD,OAFzC,mBAKwBxF,EAAOkE,MAAM,CAC/BA,MAAOzC,GACP2D,UAAW,CACTyD,SAAUR,GAEZvD,YAAa,gBAVnB,eAKQgE,EALR,iBAa4DC,QAAQC,IAC9D,CAACN,EAAIC,EAAIC,GAAO3H,IAAhB,uCAAoB,WAAOG,GAAP,eAAAzB,EAAA,6DACdoF,EAAS/E,EAAOkE,MAAM,CACxBA,MAAOxC,GAAsBN,EAAOiH,GACpCvD,YAAa,gBAHG,kBAKXC,GALW,2CAApB,wDAdN,2CAaSkE,EAbT,KAauBC,EAbvB,KAaqCC,EAbrC,KAuBQC,EAvBR,OAuBqBH,QAvBrB,IAuBqBA,GAvBrB,UAuBqBA,EAAcjE,YAvBnC,aAuBqB,EAAoBrD,MAAMwF,QAAO,SAACkC,EAAKC,EAAKC,GAC3D,OAAO,2BAAKF,GAAZ,kBAAkBC,EAAIzC,GAAKyC,MAC1B,IAECE,EA3BR,OA2BqBN,QA3BrB,IA2BqBA,GA3BrB,UA2BqBA,EAAclE,YA3BnC,aA2BqB,EAAoBrD,MAAMwF,QAAO,SAACkC,EAAKC,EAAKC,GAC3D,OAAO,2BAAKF,GAAZ,kBAAkBC,EAAIzC,GAAKyC,MAC1B,IAECG,EA/BR,OA+BsBN,QA/BtB,IA+BsBA,GA/BtB,UA+BsBA,EAAenE,YA/BrC,aA+BsB,EAAqBrD,MAAMwF,QAAO,SAACkC,EAAKC,EAAKC,GAC7D,OAAO,2BAAKF,GAAZ,kBAAkBC,EAAIzC,GAAKyC,MAC1B,IAjCP,UAmCyBP,QAAQC,IAC3BF,GACEA,EAAQ9D,KAAKrD,MAAMV,IAAnB,uCAAuB,WAAOY,GAAP,2BAAAlC,EAAA,yDACjBqF,EAAOnD,EACP6H,EAFiB,OAEDN,QAFC,IAEDA,OAFC,EAEDA,EAAavH,EAAKgF,IAFjB,gCAIC7G,EAAOkE,MAAM,CAC/BA,MAAO3C,GAAUM,EAAKgF,GAAI6B,GAC1B5D,YAAa,gBANI,OAIf6E,EAJe,OAQnBD,EAAgBC,EAAQ3E,KAAKrD,MAAM,GARhB,UAUjBiI,EAViB,OAUDJ,QAVC,IAUDA,OAVC,EAUDA,EAAa3H,EAAKgF,IAVjB,kCAYC7G,EAAOkE,MAAM,CAC/BA,MAAO3C,GAAUM,EAAKgF,GAAI8B,GAC1B7D,YAAa,gBAdI,QAYf6E,EAZe,OAgBnBC,EAAgBD,EAAQ3E,KAAKrD,MAAM,GAhBhB,WAkBjBkI,EAlBiB,OAkBAJ,QAlBA,IAkBAA,OAlBA,EAkBAA,EAAc5H,EAAKgF,IAlBnB,kCAoBC7G,EAAOkE,MAAM,CAC/BA,MAAO3C,GAAUM,EAAKgF,GAAI+B,GAC1B9D,YAAa,gBAtBI,QAoBf6E,EApBe,OAwBnBE,EAAiBF,EAAQ3E,KAAKrD,MAAM,GAxBjB,eA0BrBqD,EAAO8E,GAAU9E,EAAM0E,EAAeE,EAAeC,EAAgBvB,EAAUI,GA1B1D,kBA2Bd1D,GA3Bc,4CAAvB,wDArCR,eAmCQ+E,EAnCR,yBAmEWA,GAnEX,kCAqEIC,QAAQC,IAAR,MArEJ,2D,sBAyEA,SAASH,GAAU9E,EAAMoE,EAAYI,EAAYC,EAAanB,EAAU4B,GAAa,MAExCrE,GAAoB,OAC7Db,QAD6D,IAC7DA,OAD6D,EAC7DA,EAAMmF,WACI,OAAVf,QAAU,IAAVA,OAAA,EAAAA,EAAYe,WAAYf,EAAWe,UAAY,GACrC,OAAVX,QAAU,IAAVA,OAAA,EAAAA,EAAYW,WAAYX,EAAWW,UAAY,GALkC,mBAE5EC,EAF4E,KAE3DC,EAF2D,OAO5BxE,GAAoB,OACzEb,QADyE,IACzEA,OADyE,EACzEA,EAAMsF,oBACI,OAAVlB,QAAU,IAAVA,OAAA,EAAAA,EAAYkB,oBAAqBpE,WAAU,OAACkD,QAAD,IAACA,OAAD,EAACA,EAAYkB,oBAAsB,GACpE,OAAVd,QAAU,IAAVA,OAAA,EAAAA,EAAYc,oBAAZ,OAAiCd,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAYc,mBAAqB,GAVe,mBAO5EC,EAP4E,KAOrDC,EAPqD,KAY7EC,EAAmBvE,WAAWuD,GAAkB,OAAJzE,QAAI,IAAJA,OAAA,EAAAA,EAAMmF,YAAN,OAAkBV,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAaU,WAAYnF,EAAKmF,WA2BlG,OAxBAnF,EAAKoF,gBAAkBlE,WAAWkE,GAClCpF,EAAKyF,iBAAmBA,EACxBzF,EAAKqF,gBAAkBA,EACvBrF,EAAKuF,sBAAwBA,EAC7BvF,EAAKwF,sBAAwBA,EAG7BxF,EAAK0F,kBAAoB1F,EAAK2F,kBAAoBrC,EAClDtD,EAAK4F,mBAAqBrE,GAAiBvB,EAAK6F,WAAN,OAAkBzB,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAYyB,aAGnEzB,GAAcpE,GAAQA,EAAK8F,qBAAuBZ,IACrDlF,EAAKoF,gBAAkBlE,WAAWlB,EAAKmF,aAEpCf,GAAcpE,IACjBA,EAAKoF,gBAAkBlE,WAAWlB,EAAKmF,aAEpCV,GAAezE,IAClBA,EAAKyF,iBAAmBvE,WAAWlB,EAAKmF,YAI1CxD,GAAe3B,GAERA,EAmKF,SAASlJ,KAAW,IAAD,EACOyL,KAApBS,EADa,oBACbA,eADa,EAEL+C,KAAZzC,EAFiB,oBAwBxB,OArBAvM,qBAAU,WAAM,4CACd,kCAAA4D,EAAA,sEAIYK,EAAOkE,MAAM,CACrBA,MAAO5C,GACPwD,YAAa,gBANjB,uBAGYnD,EAHZ,EAGIqD,KAAQrD,MAOJqJ,EAAiBrJ,EAAMV,KAAI,SAACY,GAChC,OAAOA,EAAKgF,MAXhB,SAeuBuB,GAAgB4C,EAAgB1C,GAfvD,QAeMd,EAfN,SAgBcQ,EAAeR,GAhB7B,4CADc,sBAmBdc,GAnBe,WAAD,wBAmBF2C,KACX,CAAC3C,EAAUN,IACP,KClcTzF,KAAMC,OAAOC,MACbF,KAAMC,OAAO0I,MAEb,IAAMC,GAAoBjR,0BAE1B,SAASkR,KACP,OAAOhR,qBAAW+Q,IAGpB,SAAS9Q,GAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IArBW,SAqBG,IACJyK,EAASxK,EAATwK,KACR,OAAO,2BACF1K,GADL,IAEE+Q,WAAYrG,IAGhB,IA3BgB,cA2BG,IACT2C,EAAiBnN,EAAjBmN,aACR,OAAO,2BACFrN,GADL,IAEEqN,iBAGJ,IAjCiB,eAiCG,IACV2D,EAAkB9Q,EAAlB8Q,MAAOC,EAAW/Q,EAAX+Q,OACf,OAAO,2BACFjR,GADL,IAEEuN,UAAW,CACTyD,QACAC,YAIN,IA1CqB,mBA0CG,IAAD,EACbjD,EAA0C9N,EAA1C8N,SAAUkD,EAAgChR,EAAhCgR,YAAaC,EAAmBjR,EAAnBiR,eAC/B,OAAO,EAAP,iBA3CgB,gBA4CGnD,GADnB,4BAEEkD,GAFF,+BAGEC,GAHF,EAOF,IAjDgC,8CAiDG,IACzB5C,EAAarO,EAAbqO,SACR,OAAO,2BACFvO,GADL,IAEEuO,aAIJ,IAxDiC,+BAwDG,IAC1B6C,EAAclR,EAAdkR,UACR,OAAO,2BACFpR,GADL,IAEEoR,cAIJ,IA/DmB,iBA+DG,IACZC,EAAWnR,EAAXmR,OACR,OAAO,2BACFrR,GADL,IAEEqR,WAGJ,QACE,MAAM9Q,MAAM,mDAAD,OAAoDN,EAApD,QAKF,SAASe,GAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,GAAS,IADD,mBACtCC,EADsC,KAC/BoB,EAD+B,KAEvCuH,EAASrH,uBAAY,SAACoJ,GAC1BtJ,EAAS,CACPnB,KAvFS,SAwFTC,QAAS,CACPwK,YAGH,IAEG4G,EAAqBhQ,uBAAY,SAAC+L,GACtCjM,EAAS,CACPnB,KA/Fc,cAgGdC,QAAS,CACPmN,oBAGH,IAEGkE,EAAcjQ,uBAAY,SAAC0P,EAAOC,GACtC7P,EAAS,CACPnB,KAvGe,eAwGfC,QAAS,CACP8Q,QACAC,cAGH,IAEGO,EAAiBlQ,uBAAY,SAAC0M,EAAUkD,EAAaC,GACzD/P,EAAS,CACPnB,KAhHmB,mBAiHnBC,QAAS,CACP8N,WACAkD,cACAC,sBAGH,IAEGM,EAA0BnQ,uBAAY,SAACiN,GAC3CnN,EAAS,CACPnB,KAzH8B,8CA0H9BC,QAAS,CACPqO,gBAGH,IAEGmD,EAA2BpQ,uBAAY,SAAC8P,GAC5ChQ,EAAS,CACPnB,KAjI+B,+BAkI/BC,QAAS,CACPkR,iBAGH,IAEGO,EAAerQ,uBAAY,SAAC+P,GAChCjQ,EAAS,CACPnB,KAzIiB,iBA0IjBC,QAAS,CACPmR,cAGH,IACH,OACE,kBAACR,GAAkB7P,SAAnB,CACEZ,MAAOmB,mBACL,iBAAM,CACJvB,EACA,CACE2I,SACA2I,qBACAC,cACAC,iBACAG,eACAF,0BACAC,+BAGJ,CACE1R,EACA2I,EACA2I,EACAK,EACAJ,EACAC,EACAC,EACAC,KAIHzQ,GAiHP,IA6HM2Q,GAAW,uCAAG,sDAAAvM,EAAA,6DACZkE,EAAiBtB,OACjB4J,EAAgBtI,EAAeC,SAAS,EAAG,OAAOC,QAAQ,UAAUC,OAEtEsE,EAAW,EACX8D,EAAiB,EACjBC,EAAiB,EANH,kBASQlH,GAAsBgH,GAT9B,cASZjC,EATY,iBAUGlK,EAAOkE,MAAM,CAC9BA,MAAO/C,KACP2D,YAAa,gBAZC,eAUZC,EAVY,iBAcS/E,EAAOkE,MAAM,CACpCA,MAAO/C,GAAU+I,GACjBpF,YAAa,gBAhBC,QAcZwH,EAdY,OAkBVC,EAlBU,OAkBKxH,QAlBL,IAkBKA,GAlBL,UAkBKA,EAAQC,YAlBb,iBAkBK,EAAcwH,QAAQ,UAlB3B,aAkBK,EAA0BlE,SACzCmE,EAnBU,OAmBQH,QAnBR,IAmBQA,GAnBR,UAmBQA,EAActH,YAnBtB,iBAmBQ,EAAoBwH,QAAQ,UAnBpC,aAmBQ,EAAgClE,SACxD+D,EAAiB9F,GAAiBgG,EAAcE,GAChDnE,EAAWiE,EACXH,EAAiBK,EAtBD,kDAwBhBzC,QAAQC,IAAR,MAxBgB,iCA2BX,CAAC3B,EAAU8D,EAAgBC,IA3BhB,0DAAH,qDA2KV,SAAStB,KAAe,IAAD,EACQK,KADR,mBACrB9Q,EADqB,KACZwR,EADY,KACZA,eACVxD,EAAQ,OAAGhO,QAAH,IAAGA,OAAH,EAAGA,EAAK,cAChBoS,EAAW,OAAGpS,QAAH,IAAGA,OAAH,EAAGA,EAAK,YAWzB,OAVAyB,qBAAU,WAAM,4CACd,oCAAA4D,EAAA,yDACO2I,EADP,gCAEqD4D,KAFrD,mCAESS,EAFT,KAEmBnB,EAFnB,KAEgCoB,EAFhC,KAGId,EAAea,EAAUnB,EAAaoB,GAH1C,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACvE,EAAUwD,IAEP,CAACxD,EAAUoE,GCxkBpBnK,KAAMC,OAAOC,MAEb,IAAMqK,GAAmB5S,0BAEzB,SAAS6S,KACP,OAAO3S,qBAAW0S,IAGpB,SAASzS,GAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IAnBW,SAmBG,IACJ2H,EAAuB1H,EAAvB0H,aAAc8C,EAASxK,EAATwK,KACtB,OAAO,2BACF1K,GADL,kBAEG4H,EAFH,kCAGO5H,QAHP,IAGOA,OAHP,EAGOA,EAAQ4H,IACR8C,KAIT,IAzBsB,qBAyBG,IACfgI,EAAcxS,EAAdwS,UACJvF,EAAQ,GAKZ,OAJAuF,GACEA,EAAU/L,KAAI,SAACgM,GACb,OAAQxF,EAAMwF,EAAMpG,IAAMoG,KAEvB,2BACF3S,GACAmN,GAIP,IAzCsB,oBAyCG,IACfC,EAA0BlN,EAA1BkN,QAASC,EAAiBnN,EAAjBmN,aACjB,OAAO,2BACFrN,GADL,kBAEGoN,EAFH,kCAGOpN,QAHP,IAGOA,OAHP,EAGOA,EAAQoN,IAHf,IAIIE,KAAMD,MAIZ,IAlDsB,oBAkDG,IACfD,EAAuBlN,EAAvBkN,QAASG,EAAcrN,EAAdqN,UACjB,OAAO,2BACFvN,GADL,kBAEGoN,EAFH,kCAGOpN,QAHP,IAGOA,OAHP,EAGOA,EAAQoN,IAHf,IAIIG,gBAKN,IA5DsB,oBA4DG,IAAD,EACdH,EAAwClN,EAAxCkN,QAAS1C,EAA+BxK,EAA/BwK,KAAM+C,EAAyBvN,EAAzBuN,WAAYmF,EAAa1S,EAAb0S,SACnC,OAAO,2BACF5S,GADL,kBAEGoN,EAFH,kCAGOpN,QAHP,IAGOA,OAHP,EAGOA,EAAQoN,IAHf,kBAIKK,EAJL,kCAKSzN,QALT,IAKSA,GALT,UAKSA,EAAQoN,UALjB,aAKS,EAAmBK,IAL5B,kBAMOmF,EAAWlI,QAMpB,IAxEqB,mBAwEG,IACd0C,EAAsBlN,EAAtBkN,QAASmB,EAAarO,EAAbqO,SACjB,OAAO,2BACFvO,GADL,kBAEGoN,EAFH,kCAGOpN,QAHP,IAGOA,OAHP,EAGOA,EAAQoN,IAHf,kBAxEkB,kBA4EKmB,MAIzB,QACE,MAAMhO,MAAM,mDAAD,OAAoDN,EAApD,QAKF,SAASe,GAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,GAAS,IADD,mBACtCC,EADsC,KAC/BoB,EAD+B,KAEvCuH,EAASrH,uBAAY,SAACsG,EAAc8C,GACxCtJ,EAAS,CACPnB,KAjGS,SAkGTC,QAAS,CACP0H,eACA8C,YAGH,IAEGmI,EAAkBvR,uBAAY,SAACoR,GACnCtR,EAAS,CACPnB,KAvGoB,qBAwGpBC,QAAS,CACPwS,iBAGH,IAEGI,EAAkBxR,uBAAY,SAAC8L,EAASC,GAC5CjM,EAAS,CACPnB,KAnHoB,oBAoHpBC,QAAS,CAAEkN,UAASC,oBAErB,IAEGO,EAAkBtM,uBAAY,SAAC8L,EAASG,GAC5CnM,EAAS,CACPnB,KAzHoB,oBA0HpBC,QAAS,CAAEkN,UAASG,iBAErB,IAEGwF,EAAiBzR,uBAAY,SAAC8L,EAASmB,GAC3CnN,EAAS,CACPnB,KA7HmB,mBA8HnBC,QAAS,CAAEkN,UAASmB,gBAErB,IAEGyE,EAAkB1R,uBAAY,SAAC8L,EAAS1C,EAAM+C,EAAYmF,GAC9DxR,EAAS,CACPnB,KAtIoB,oBAuIpBC,QAAS,CAAEkN,UAAS1C,OAAM+C,aAAYmF,gBAEvC,IAEH,OACE,kBAACJ,GAAiBxR,SAAlB,CACEZ,MAAOmB,mBACL,iBAAM,CACJvB,EACA,CACE2I,SACAmK,kBACAlF,kBACAiF,kBACAE,iBACAC,sBAGJ,CAAChT,EAAO2I,EAAQmK,EAAiBlF,EAAiBiF,EAAiBE,EAAgBC,KAGpF/R,GAKP,IAAMgS,GAAY,uCAAG,WAAOjF,EAAUoE,GAAjB,yCAAA/M,EAAA,6DACbkE,EAAiBtB,OACjB4J,EAAgBtI,EAAeC,SAAS,EAAG,OAAOE,OAClDwJ,EAAiB3J,EAAeC,SAAS,EAAG,OAAOE,OAHtC,SAIKmB,GAAsBgH,GAJ3B,cAIfjC,EAJe,gBAKK/E,GAAsBqI,GAL3B,cAKfC,EALe,0BAQGzN,EAAOkE,MAAM,CAC/BA,MAAOnC,GACP+C,YAAa,gBAVE,eAQbgE,EARa,iBAaQ9I,EAAOkE,MAAM,CACpCA,MAAOlC,GAAekI,GACtBpF,YAAa,gBAfE,eAabmE,EAba,iBAkBQjJ,EAAOkE,MAAM,CACpCA,MAAOlC,GAAeyL,GACtB3I,YAAa,gBApBE,eAkBboE,EAlBa,OAuBbE,EAvBa,OAuBAH,QAvBA,IAuBAA,GAvBA,UAuBAA,EAAcjE,YAvBd,aAuBA,EAAoB0I,OAAOvG,QAAO,SAACkC,EAAKC,EAAKC,GAC5D,OAAO,2BAAKF,GAAZ,kBAAkBC,EAAIzC,GAAKyC,MAC1B,IAECE,EA3Ba,OA2BAN,QA3BA,IA2BAA,GA3BA,UA2BAA,EAAclE,YA3Bd,aA2BA,EAAoB0I,OAAOvG,QAAO,SAACkC,EAAKC,EAAKC,GAC5D,OAAO,2BAAKF,GAAZ,kBAAkBC,EAAIzC,GAAKyC,MAC1B,IA7Bc,UA+BOP,QAAQC,IAC9BF,GACEM,GACAI,IAFF,OAGEV,QAHF,IAGEA,GAHF,UAGEA,EAAS9D,YAHX,aAGE,EAAe0I,OAAOzM,IAAtB,uCAA0B,WAAOgM,GAAP,yEAAAtN,EAAA,yDACpBqF,EAAOiI,EAGPvD,EAJoB,OAIJN,QAJI,IAIJA,OAJI,EAIJA,EAAa6D,EAAMpG,IACnC+C,EALoB,OAKJJ,QALI,IAKJA,OALI,EAKJA,EAAayD,EAAMpG,IAGlC6C,EARmB,gCASG1J,EAAOkE,MAAM,CACpCA,MAAOjC,GAAWgL,EAAMpG,GAAIqD,GAC5BpF,YAAa,gBAXO,OASlBmE,EATkB,OAatBS,EAAgBT,EAAajE,KAAK0I,OAAO,GAbnB,UAenB9D,EAfmB,kCAgBG5J,EAAOkE,MAAM,CACpCA,MAAOjC,GAAWgL,EAAMpG,GAAI4G,GAC5B3I,YAAa,gBAlBO,QAgBlBoE,EAhBkB,OAoBtBU,EAAgBV,EAAalE,KAAK0I,OAAO,GApBnB,aAwBmB7H,GACzCb,EAAK2I,eADwD,oBAE7DjE,SAF6D,aAE7D,EAAeiE,sBAF8C,QAE5B,EAF4B,oBAG7D/D,SAH6D,aAG7D,EAAe+D,sBAH8C,QAG5B,GA3BX,mBAwBjBvD,EAxBiB,KAwBAC,EAxBA,OA6BQxE,GAC9Bb,EAAK4I,QAD6C,oBAElDlE,SAFkD,aAElD,EAAekE,eAFmC,QAExB,EAFwB,oBAGlDhE,SAHkD,aAGlD,EAAegE,eAHmC,QAGxB,GAhCJ,mBA6BjBC,EA7BiB,KA6BLC,EA7BK,KAmClBC,GAA0B,OAAJ/I,QAAI,IAAJA,OAAA,EAAAA,EAAMgJ,gBAAiB1F,GAAvB,OAAkCtD,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMiJ,YAC9DC,GAA+B,QAAb,EAAAxE,SAAA,eAAesE,gBAAiBtB,GAAhC,UAA8ChD,SAA9C,aAA8C,EAAeuE,YAG/EE,EAAiB5H,IACjB,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAMiJ,YAAa3F,GACN,QAAb,EAAAoB,SAAA,eAAeuE,aAA0B,QAAb,EAAAvE,SAAA,eAAeuE,YAAavB,EAAc,GAIxE1H,EAAKoJ,UAAe,OAAJpJ,QAAI,IAAJA,OAAA,EAAAA,EAAMiJ,YAAa3F,EACnCtD,EAAKqJ,kBAAoBN,EACzB/I,EAAKoF,gBAAkBlE,WAAWkE,GAClCpF,EAAKqF,gBAAkBA,EACvBrF,EAAKmJ,eAAiBA,EACtBnJ,EAAK4F,mBAAqBrE,GAAgB,OAACwH,QAAD,IAACA,IAAuB,EAAxB,OAA2BG,QAA3B,IAA2BA,IAAmB,GACxFlJ,EAAK6I,WAAaA,EAClB7I,EAAK8I,UAAYA,GAGZpE,GAAiB1E,IACpBA,EAAKoF,gBAAkBpF,EAAK2I,eAC5B3I,EAAKsJ,gBAAkBtJ,EAAKuJ,YAAcvJ,EAAKiJ,WAC/CjJ,EAAK6I,WAAa7I,EAAK4I,SAIzBjH,GAAe,CACbC,OAAQ5B,IAIM,+CAAZA,EAAK6B,GAnEe,kCAoEC7G,EAAOkE,MAAM,CAClCA,MAAO3C,GAAU,8CACjBuD,YAAa,gBAtEO,QAoEhB0J,EApEgB,OAwEhBzJ,EAASyJ,EAASxJ,KAAKrD,MAAM,GACnCqD,EAAKqJ,kBAAoBnI,WAAWnB,EAAO8F,YAAc,EACzD7F,EAAK4F,mBAAqB,EAC1B5F,EAAKmJ,eAAiB,EA3EA,iCA8EjBnJ,GA9EiB,4CAA1B,yDAnCa,eA+BbyJ,EA/Ba,yBAqHVA,GArHU,kCAyHjBzE,QAAQC,IAAR,MAzHiB,0DAAH,wDAuaX,SAASnO,KAAW,IAAD,EACQiR,KAArBI,EADa,oBACbA,gBADa,EAEQpC,KAFR,mBAEjBzC,EAFiB,KAEPoE,EAFO,KAWxB,OARA3Q,qBAAU,WAAM,4CACd,4BAAA4D,EAAA,sEAEwB4N,GAAajF,EAAUoE,GAF/C,QAEMM,EAFN,SAGeG,EAAgBH,GAH/B,4CADc,sBAMd1E,GAAYoE,GANG,WAAD,wBAMazB,KAC1B,CAAC3C,EAAUoE,EAAaS,IACpB,K,MCnmBT5K,KAAMC,OAAOC,MAEb,IAYMiM,GAAcxU,0BAMpB,SAASG,GAAQC,EAAjB,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC9B,OAAQD,GACN,IApBwB,sBAoBG,IACjBoU,EAA0BnU,EAA1BmU,QAAShH,EAAiBnN,EAAjBmN,aACjB,OAAO,2BACFrN,GADL,kBAEGqU,EAFH,kCAGOrU,QAHP,IAGOA,OAHP,EAGOA,EAAQqU,IAHf,kBAhBmB,mBAoBKhH,MAI1B,IA7BqB,oBA6BG,IACdgH,EAAuBnU,EAAvBmU,QAASC,EAAcpU,EAAdoU,UACjB,OAAO,2BACFtU,GADL,kBAEGqU,EAFH,kCAEkBrU,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAQqU,IAF1B,kBAzBgB,gBA2BqCC,MAGvD,IAnC4B,0BAmCG,IACrBD,EAA6BnU,EAA7BmU,QAASE,EAAoBrU,EAApBqU,gBACjB,OAAO,2BACFvU,GADL,kBAEGqU,EAFH,kCAEkBrU,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAQqU,IAF1B,kBA/BuB,uBAiCqCE,MAG9D,IAzCiC,+BAyCG,IAC1BF,EAAyBnU,EAAzBmU,QAASG,EAAgBtU,EAAhBsU,YACjB,OAAO,2BACFxU,GADL,kBAEGqU,EAFH,kCAEkBrU,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAQqU,IAF1B,kBArCiB,iBAuCqCG,MAIxD,IAhD6B,2BAgDG,IAAD,EACrBH,EAA+BnU,EAA/BmU,QAASnN,EAAsBhH,EAAtBgH,YAAawD,EAASxK,EAATwK,KAC9B,OAAO,2BACF1K,GADL,kBAEGqU,EAFH,kCAGOrU,QAHP,IAGOA,OAHP,EAGOA,EAAQqU,IAHf,kBA5CwB,wBA4CxB,kCAKSrU,QALT,IAKSA,GALT,UAKSA,EAAQqU,UALjB,aAKS,yBALT,kBAMOnN,EAAcwD,QAMvB,QACE,MAAMnK,MAAM,mDAAD,OAAoDN,EAApD,QAKjB,IAAMuI,GAAgB,GAEP,SAASxH,GAAT,GAAiC,IAAbC,EAAY,EAAZA,SAAY,EACnBC,qBAAWnB,GAASyI,IADD,mBACtCxI,EADsC,KAC/BoB,EAD+B,KAGvCkQ,EAAqBhQ,uBAAY,SAAC+S,EAAShH,GAC/CjM,EAAS,CACPnB,KA/EsB,sBAgFtBC,QAAS,CACPmU,UACAhH,oBAGH,IAEGoH,EAAkBnT,uBAAY,SAAC+S,EAASC,GAC5ClT,EAAS,CACPnB,KAxFmB,oBAyFnBC,QAAS,CACPmU,UACAC,iBAGH,IAEGI,EAAwBpT,uBAAY,SAAC+S,EAASE,GAClDnT,EAAS,CACPnB,KAjG0B,0BAkG1BC,QAAS,CACPmU,UACAE,uBAGH,IAEGI,EAAsBrT,uBAAY,SAAC+S,EAASG,GAChDpT,EAAS,CACPnB,KA1G+B,+BA2G/BC,QAAS,CACPmU,UACAG,mBAGH,IAEGI,EAAwBtT,uBAAY,SAAC+S,EAASnN,EAAawD,GAC/DtJ,EAAS,CACPnB,KAnH2B,2BAoH3BC,QAAS,CACPmU,UACAnN,cACAwD,YAGH,IAEH,OACE,kBAAC0J,GAAYpT,SAAb,CACEZ,MAAOmB,mBACL,iBAAM,CACJvB,EACA,CAAEsR,qBAAoBmD,kBAAiBC,wBAAuBC,sBAAqBC,4BAErF,CAAC5U,EAAOsR,EAAoBmD,EAAiBC,EAAuBC,EAAqBC,KAG1F3T,G,6oDCjJWiE,IAAO2P,IAAV,MARf,IAqDMC,GAAa5P,YAAO6P,KAAP7P,CAAH,MA6CD8P,IAlBY9P,IAAOG,EAAV,MAhFX,WACT,OACE,yBAAK4P,UAAU,2BACb,kBAACH,GAAD,CAAYI,GAAG,KAAI,yBAAKC,IAAI,WAAWC,IAAI,iB,yYCHnD,IAYMC,GAAUnQ,IAAOE,IAAV,MA8BEkQ,GA1CE,WACb,OACE,kBAACD,GAAD,CAASJ,UAAU,WACjB,uBAAG1P,OAAO,SAASgQ,KAAK,8BAA6B,uBAAGC,MAAM,gBAC9D,uBAAGjQ,OAAO,UAAU,uBAAGiQ,MAAM,mBAC7B,uBAAGjQ,OAAO,UAAS,uBAAGiQ,MAAM,oB,izDCLpC,IAeMC,GAAWvQ,IAAOE,IAAV,MASRsQ,GAAaxQ,IAAOE,IAAV,MAuFDuQ,IAzDGzQ,IAAOG,EAAV,MAoBIH,YAAO6P,KAAP7P,CAAH,MAmBWA,IAAOG,EAAV,MA7FT,WACX,OACE,kBAACoQ,GAAD,KACA,kBAACC,GAAD,KACM,0BAAMT,UAAU,YAAYW,OAAO,MAAMC,OAAO,IAC9C,4BAAQ5V,KAAK,UACX,0BAAMgV,UAAU,kBAElB,2BAAOa,UAAQ,EAACvJ,GAAG,SAAStM,KAAK,OAAOkM,KAAK,IAAK8I,UAAU,aAAac,UAAW,W,6vECPlG,IAmUMC,GAAa9Q,IAAOE,IAAV,MAoCV6Q,IArBY/Q,IAAOG,EAAV,MAqBGH,IAAOgR,GAAV,OA2BTpB,IAnBY5P,IAAOG,EAAV,MAmBIH,YAAO6P,KAAP7P,CAAH,OAuEDiR,GAzcH,WAEV1U,qBAAU,WACRZ,OAAOuV,iBAAiB,UAAU,WACzBvV,OAAOwV,QAAU,GACtBC,SAASC,KAAKC,UAAUC,IAAI,OAG5BH,SAASC,KAAKC,UAAUE,OAAO,YAGhC,IAXW,MAagBC,oBAAS,GAbzB,mBAaPC,EAbO,KAaGC,EAbH,OAckBF,oBAAS,GAd3B,mBAcPG,EAdO,KAcIC,EAdJ,OAgBoBJ,oBAAS,GAhB7B,gCAiBoBA,oBAAS,IAjB7B,gCAmBoBA,oBAAS,IAnB7B,gCAoBoBA,oBAAS,IApB7B,gCAqBoBA,oBAAS,IArB7B,6BAoCd,OACE,kBAACX,GAAD,KACE,wBAAIf,UAAU,eACZ,kBAAC,GAAD,CACEA,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,KAEH,yBAAKD,UAAU,WAAWE,IAAI,SAASC,IAAI,cAN7C,wBAoBA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,QAEH,yBAAKD,UAAU,WAAWE,IAAI,UAAUC,IAAI,cAN9C,QASF,wBAAIH,UAAU,kBACZ,kBAACgB,GAAD,iBACA,kBAAC,GAAD,CACEhB,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,iBAEH,yBAAKD,UAAU,iBACb,0BAAMA,UAAU,YAAYiC,QAAS,kBAAML,GAAU,KACrD,yBAAK5B,UAAU,WAAWE,IAAI,UAAUC,IAAI,cAD5C,kBAGA,0BACEH,UAAW2B,EAAW,UAAY,WAClCM,QAAS,kBAAML,GAAWD,KAE1B,uBAAGpB,MAAM,wBAGb,yBAAKP,UAAS,UAAK2B,EAAW,gBAAkB,iBAC9C,+BAoFJ,kBAAC,GAAD,CACE3B,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,kBAEH,yBAAKD,UAAU,WAAWE,IAAI,cAAcC,IAAI,cANlD,mBAQA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,kBAEH,yBAAKD,UAAU,iBACb,0BAAMA,UAAU,YAAYiC,QAAS,kBAAMH,GAAW,KACtD,yBAAK9B,UAAU,WAAWE,IAAI,SAASC,IAAI,cAD3C,iBAGA,0BACEH,UAAW6B,EAAY,UAAY,WACnCI,QAAS,kBAAMH,GAAYD,KAE3B,uBAAGtB,MAAM,yBAaf,kBAAC,GAAD,CACEP,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,oBAEH,yBAAKD,UAAU,WAAWE,IAAI,iBAAiBC,IAAI,cANrD,qBAQA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,gBAEH,yBAAKD,UAAU,WAAWE,IAAI,aAAaC,IAAI,cANjD,eAQA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,eAEH,yBAAKD,UAAU,WAAWE,IAAI,UAAUC,IAAI,cAN9C,SASF,wBAAIH,UAAU,kBACZ,kBAACgB,GAAD,wBACA,kBAAC,GAAD,CACEhB,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,eAEH,yBAAKD,UAAU,WAAWE,IAAI,UAAUC,IAAI,cAN9C,eASF,wBAAIH,UAAU,kBACZ,kBAACgB,GAAD,eACA,kBAAC,GAAD,CACEhB,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,4CAED,yBAAKD,UAAU,WAAWE,IAAI,cAAcC,IAAI,cANpD,4CAQA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,sCAED,yBAAKD,UAAU,WAAWE,IAAI,aAAaC,IAAI,cANnD,uCAiBF,wBAAIH,UAAU,kBACZ,kBAACgB,GAAD,mBACA,kBAAC,GAAD,CACEhB,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,6BAEH,yBAAKD,UAAU,WAAWE,IAAI,UAAUC,IAAI,cAN9C,4BAQA,kBAAC,GAAD,CACEH,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,yBAEH,yBAAKD,UAAU,WAAWE,IAAI,YAAYC,IAAI,cANhD,wBASF,wBAAIH,UAAU,kBACZ,kBAACgB,GAAD,kBACA,kBAAC,GAAD,CACEhB,UAAU,YACV+B,OAAK,EACLC,gBAAgB,SAChB/B,GAAG,iCAEH,yBAAKD,UAAU,WAAWE,IAAI,SAASC,IAAI,cAN7C,+B,67GCjSV,IA2BM+B,GAAgBjS,IAAOE,IAAV,MAuCbgS,GAAclS,IAAOE,IAAV,MAEXiS,GAAcnS,IAAOE,IAAV,MAkDXkS,GAAWpS,IAAOE,IAAV,MAiBRmS,GAAarS,IAAOE,IAAV,MA+DDoS,GAtMI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAE5B,OACE,kBAACN,GAAD,KACE,kBAACG,GAAD,CAAYtC,UAAS,UAAKwC,EAAS,SAAW,KAC5C,kBAACJ,GAAD,CAAapC,UAAU,WAAWiC,QAASQ,GACzC,yBACEC,QAAQ,YACRrV,MAAM,OACNsV,MAAM,OACNC,MAAM,6BACNrC,MAAM,oBAEN,0BAAMsC,EAAE,ybAGZ,kBAACX,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QAGJ,kBAACG,GAAD,CAAUJ,QAASQ,EAASzC,UAAS,UAAKwC,EAAS,UAAY,Q,osCCjBrE,IA4CMM,GAAmB7S,IAAOE,IAAV,MAQhB4S,GAAc9S,IAAO+S,OAAV,MAsBXC,GAAahT,IAAOE,IAAV,MAQV+S,GAAYjT,IAAOkT,QAAV,MAmBAC,GArGA,WAAO,IAAD,EACS1B,oBAAS,GADlB,mBACZ2B,EADY,KACJC,EADI,KAGjB,OACE,kBAACP,GAAD,KACE,kBAACG,GAAD,KACE,yBACEjB,QAAS,kBAAMqB,GAAU,IACzBC,oBAAoB,gBACpBC,OAAO,MACPb,MAAM,MACNc,KAAK,OACLb,MAAM,6BACNF,QAAQ,YACRgB,eAAa,IACbC,iBAAe,QACfC,kBAAgB,QAChBC,OAAO,eACPtD,MAAM,+CAEN,2BACE,0BAAMuD,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAChC,0BAAMH,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAC/B,0BAAMH,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,SAGpC,yBAAKjE,UAAU,mBACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,MACA,yBAAKA,UAAU,4BACb,kBAACiD,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,WAMV,kBAACH,GAAD,CAAkB9C,UAAS,UAAKqD,EAAS,SAAW,KAClD,kBAAC,GAAD,CAAYZ,QAAS,kBAAMa,GAAU,IAAQd,OAAQa,O,sVC7C/D,IAUMa,GAAgBjU,IAAOkT,QAAV,MAmBJgB,GA7BC,WAGZ,OACE,kBAACD,GAAD,KACE,kBAAC,GAAD,Q,4YCPR,IAOME,GAAenU,IAAOgR,GAAV,MAkBHoD,GAzBD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAQC,EAAW,EAAXA,MAEvB,OAAO,kBAACH,GAAD,CAAcpE,UAAU,SAC/B,yBAAKA,UAAU,WAAWE,IAAKqE,EAASpE,IAAI,aADrC,IACoDmE,I,64DCE7D,IAgDME,GAAWvU,IAAOkT,QAAV,MAqGCsB,IA1FOxU,IAAOE,IAAV,MAQDF,IAAOE,IAAV,MAmDIF,YAAO6P,KAAP7P,CAAH,MAqBEA,IAAOgR,GAAV,MACD,SAACyD,GAAD,OAAWA,EAAM/B,SAEjB,SAAC+B,GAAD,OAAWA,EAAMC,QA9IlB,WACX,OACE,kBAACH,GAAD,KACQ,kBAAC,GAAD,CAAOD,MAAM,SAAUD,MAAM,yBAC7B,oOACA,yVACA,8SACA,sFACA,wBAAItE,UAAU,YACZ,4BAAI,uBAAG1P,OAAO,SAASgQ,KAAK,6CAAxB,oCACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,gDAAxB,2CACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,yCAAxB,uCACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,mCAAxB,uCACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,qCAAxB,oCACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,mCAAxB,iCAEN,2BAAG,gCAAQ,yBAAKqC,MAAM,KAAKzC,IAAI,WAAWC,IAAI,KAA3C,wBACH,4BACE,wCAAa,uBAAG7P,OAAO,SAASgQ,KAAK,8BAAxB,+BACb,wCAAa,uBAAGhQ,OAAO,SAASgQ,KAAK,kCAAxB,kCAAb,KACA,sDAA2B,uBAAGhQ,OAAO,SAASgQ,KAAK,mCAAxB,oCAC3B,oDAAyB,uBAAGhQ,OAAO,SAASgQ,KAAK,kCAAxB,mCACzB,uCAAY,uBAAGhQ,OAAO,SAASgQ,KAAK,iCAAxB,kCACZ,wCAAa,uBAAGhQ,OAAO,SAASgQ,KAAK,uDAAxB,yDAIf,2BAAG,6DACH,4BACE,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,qCAAxB,sCACJ,4BAAI,uBAAGhQ,OAAO,SAASgQ,KAAK,wCAAxB,6C,uzDC/BlB,IA0BMsE,GAAgB3U,IAAOE,IAAV,MAab0U,GAAY5U,IAAOE,IAAV,MAkET0P,GAAa5P,YAAO6P,KAAP7P,CAAH,MAuBD6U,GAhII,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAEvC,OACE,kBAAC,GAAD,CAAelF,UAAU,OACvB,kBAAC,GAAD,CAAWA,UAAU,wBACnB,2BACE,uBAAGO,MAAM,sBAEX,kBAAC,GAAD,CAAYN,GAAIgF,GACd,sCACEF,IAGN,kBAAC,GAAD,CAAW/E,UAAU,wBACnB,kBAAC,GAAD,CAAYC,GAAIiF,GACd,sCACEF,GAEJ,2BACE,uBAAGzE,MAAM,0B,swCCjBrB,IAiBMiE,GAAWvU,IAAOkT,QAAV,MA6DCgC,IAxDOlV,IAAOE,IAAV,MASDF,IAAOE,IAAV,MA2BIF,YAAO6P,KAAP7P,CAAH,MA1DE,WAChB,OACE,kBAAC,GAAD,KACM,kBAAC,GAAD,CAAOsU,MAAM,SAAUD,MAAM,sCAC7B,sJACA,0JACA,iIACA,kBAAC,GAAD,CACES,KAAK,uBACLE,SAAS,IACTD,KAAK,MACLE,SAAS,Y,qHCZrB,IA6DMV,GAAWvU,IAAOkT,QAAV,MAOCiC,GApEH,WACV,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOb,MAAM,UAAWD,MAAM,QAC9B,2BAAG,kDACH,oLACA,2BAAG,0DACH,8RACA,2BAAG,8DACH,4RACA,2BAAG,yDACH,8RACA,2BAAG,sEACH,kFACA,4JAAiI,uBAAGhU,OAAO,SAASgQ,KAAK,6CAAxB,6CAAjI,gBACA,2BAAG,8DACH,iIACA,2BAAG,gEAAqC,uBAAGhQ,OAAO,SAASgQ,KAAK,6CAAxB,6CAArC,qBAAH,KACA,2BAAG,uBAAGhQ,OAAO,SAASgQ,KAAK,6CAAxB,6CAAH,KAAsH,uBAAGhQ,OAAO,SAASgQ,KAAK,qCAAxB,qCAAtH,wCACA,qRACA,2BAAG,wDACH,kMACA,2BAAG,qEACH,sGACA,yIACA,6TACA,qGACA,gMACA,2BAAG,gEACH,qKACA,wK,4eCjCN,IA+BMkE,GAAWvU,IAAOkT,QAAV,MAiCCkC,GAhEA,WACb,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOd,MAAM,UAAWD,MAAM,uBAC9B,qOAKA,gLAGY,KAEZ,0DAC+B,IAC7B,uBAAGhE,KAAK,IAAIN,UAAU,QAAtB,6BAEK,IAJP,4EAOA,kBAAC,GAAD,CACE+E,KAAK,2BACLC,KAAK,6BACLE,SAAS,gCACTD,SAAS,oC,4eCtBjB,IAyEMT,GAAWvU,IAAOkT,QAAV,MAgCCsB,GAzGF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOF,MAAM,YAAaD,MAAM,uBAChC,8FACmE,IACjE,0BAAMtE,UAAU,QAAhB,UAFF,sKAKA,8IAIA,sLAGY,0BAAMA,UAAU,QAAhB,cAHZ,0BAIW,KAEX,0EAC+C,IAC7C,uBAAGA,UAAU,OAAOM,KAAK,KAAzB,iCAEK,IAJP,wEAKwE,IACtE,uBAAGN,UAAU,OAAOM,KAAK,KACtB,IADH,uCAKF,2BACG,IACD,0BAAMN,UAAU,QAAhB,cAFF,qDAKA,uBAAGA,UAAU,eAAb,sDACsD,IACpD,0BAAMA,UAAU,QAAhB,gBACA,uBAAGA,UAAU,eAAb,4CAC4C,IAC1C,0BAAMA,UAAU,QAAhB,iBAEF,uBAAGA,UAAU,IAAb,0CAC0C,IACxC,0BAAMA,UAAU,QAAhB,kBAGJ,iHAEY,0BAAMA,UAAU,QAAhB,eAGZ,2BACG,IACD,0BAAMA,UAAU,QAAhB,gBAFF,2EAIE,0BAAMA,UAAU,QAAhB,gBAJF,yCAKU,IACR,0BAAMA,UAAU,QAAhB,sCANF,sKAWA,kBAAC,GAAD,CACE+E,KAAK,2BACLC,KAAK,2BACLE,SAAS,gCACTD,SAAS,gC,qHCnEjB,IAeMT,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOf,MAAM,SAAUD,MAAM,+BAC7B,kBAAC,GAAD,CACES,KAAK,qBACLE,SAAS,2CACTD,KAAK,uBACLE,SAAS,Q,+bCTjB,IAsKMV,GAAWvU,IAAOkT,QAAV,MA6BCoC,GAnME,WACf,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOhB,MAAM,SAAUD,MAAM,6BAC7B,yEAEE,uBAAGhE,KAAK,IAAIN,UAAU,QACnB,IADH,0BAKF,mFAEE,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,kCAKF,4CAEE,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,+BAKF,uBAAGA,UAAU,oBAAb,yHAGE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,wCAKF,uBAAGA,UAAU,QAAb,wBAEE,6BACA,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,iCAIA,uBAAGA,UAAU,SAAb,mCACmC,IACjC,uBAAGM,KAAK,IAAIN,UAAU,QAAtB,sCAEK,IAJP,MAQF,uBAAGA,UAAU,oBAAb,qFAGE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,gDAKF,uBAAGA,UAAU,oBAAb,6DAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,+BAIA,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,0CAKF,uBAAGA,UAAU,oBAAb,mBAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,oCAKF,uBAAGA,UAAU,oBAAb,kDAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,qEAEqE,KAErE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,oFAKF,uBAAGA,UAAU,oBAAb,oEAEE,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,iCAEiC,KAEjC,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,oCAKF,uBAAGA,UAAU,oBAAb,eAEE,6BAFF,IAES,uBAAGA,UAAU,SAAb,oBAA0C,IACjD,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,+BAIA,6BAPF,IAOS,uBAAGA,UAAU,SAAb,qBAA2C,IAClD,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,0CAKF,uBAAGA,UAAU,oBAAb,gEAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,qBAEqB,KAErB,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,uBAIA,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,sBAEsB,KAEtB,uBAAGA,UAAU,SAAb,gDAEF,uBAAGA,UAAU,oBAAb,mBAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,8BAE8B,KAE9B,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,4BAKF,uBAAGA,UAAU,oBAAb,oDAEE,6BAAO,IACP,uBAAGM,KAAK,IAAIN,UAAU,QACnB,IADH,yBAEyB,MAG3B,kBAAC,GAAD,CACE+E,KAAK,qBACLC,KAAK,qBACLE,SAAS,4BACTD,SAAS,4B,gfChKjB,IAiDMT,GAAWvU,IAAOkT,QAAV,MA8BCqC,GA/EI,WACjB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOjB,MAAM,UAAWD,MAAM,6BAC9B,2JAGE,uBAAGhE,KAAK,IAAIN,UAAU,QAAtB,uBAHF,kIAOA,+QAMA,2BAAG,uBAAGM,KAAK,IAAIN,UAAU,QAAtB,0EAGH,8EACmD,IACjD,0BAAMA,UAAU,QAAhB,YAFF,wMAOA,kCACM,0BAAMA,UAAU,QAAhB,YADN,kEAGE,6BAHF,4IAOA,0LAA+J,0BAAMA,UAAU,QAAhB,uBAA/J,gCACA,kCAAO,0BAAMA,UAAU,QAAhB,gBAAP,qFAEA,uSACA,oKAAyI,uBAAGM,KAAK,IAAIN,UAAU,QAAtB,UAAzI,0CAAuN,uBAAGM,KAAK,IAAIN,UAAU,QAAtB,WAAvN,YACA,kBAAC,GAAD,CACE+E,KAAK,aACLC,KAAK,qBACLE,SAAS,wBACTD,SAAS,kB,qHC3CjB,IA0BMT,GAAWvU,IAAOkT,QAAV,MAKCsB,GA/BF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOF,MAAM,UAAWD,MAAM,uBAC9B,iOAIE,uBAAGhE,KAAK,KAAR,gFAIF,qJAEoD,KAEpD,kBAAC,GAAD,CACEyE,KAAK,uBACLE,SAAS,uDACTD,KAAK,eACLE,SAAS,oB,uHCpBjB,IAqBMV,GAAWvU,IAAOkT,QAAV,MAQCsC,GA7BF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOlB,MAAM,UAAWD,MAAM,eAC9B,0LACA,2BAAG,0CAAH,mGACA,2BAAG,mDAAH,yLACA,2BAAG,+CAAH,uHACA,2BAAG,mEACH,4f,qHCVN,IAeME,GAAWvU,IAAOkT,QAAV,MAOCsB,GAtBF,WACX,OACE,kBAAC,GAAD,KACQ,kBAAC,GAAD,CAAOF,MAAM,UAAWD,MAAM,eAC9B,yFACA,kBAAC,GAAD,CACJS,KAAK,eACLE,SAAS,gBACTD,KAAK,2BACLE,SAAS,gC,q5ECuCKjV,IAAOE,IAAV,MAQDF,IAAOE,IAAV,MArDf,IA4EMqU,GAAWvU,IAAOkT,QAAV,MAKRuC,GAAWzV,IAAO0V,EAAV,MAqBR9F,GAAa5P,YAAO6P,KAAP7P,CAAH,MAqBV2V,GAAW3V,IAAO4V,GAAV,MAwCCC,IAVG7V,IAAOgR,GAAV,MACD,SAACyD,GAAD,OAAWA,EAAM/B,SAEjB,SAAC+B,GAAD,OAAWA,EAAMC,QA5JnB,WACV,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOJ,MAAM,UAAWD,MAAM,mBAC9B,qEACA,mDACA,wJACA,kBAACoB,GAAD,KAAU,yBAAKxF,IAAI,iBAAiBC,IAAI,MACxC,sPACA,kGACA,yDACA,8JACA,iJACA,6JACA,4HACA,wEACA,+GACA,yNACA,gOACA,kBAACyF,GAAD,KACE,4BACE,kBAAC,GAAD,CAAY3F,GAAG,0BAAf,aAEF,4BACE,kBAAC,GAAD,CAAYA,GAAG,iCAAf,oBAIF,4BACE,kBAAC,GAAD,CAAYA,GAAG,kCAAf,sBAKJ,kBAAC,GAAD,CACE8E,KAAK,MACLE,SAAS,OACTD,KAAK,WACLE,SAAS,8B,w9DCpCjB,IAuDMV,GAAWvU,IAAOkT,QAAV,MA6CRtD,GAAa5P,YAAO6P,KAAP7P,CAAH,MAqBV2V,GAAW3V,IAAO4V,GAAV,MAuCCE,IAVG9V,IAAOgR,GAAV,MACD,SAACyD,GAAD,OAAWA,EAAM/B,SAEjB,SAAC+B,GAAD,OAAWA,EAAMC,QAzJjB,WACZ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOJ,MAAM,SAAUD,MAAM,kBAC7B,2EACA,4BACE,4BAAI,uBAAGhU,OAAO,SAASgQ,KAAK,mCAAxB,qCAEN,8LACA,mJACA,kBAAC,KAAD,CACI0F,UAAU,WACVzB,MAAM,aACV,6BACA,0EACA,oUAEA,+GACA,qQACA,2BAAG,wGAA4E,uBAAGjU,OAAO,SAASgQ,KAAK,6CAAxB,6CAA5E,MACH,2CAAgB,uBAAGhQ,OAAO,SAASgQ,KAAK,6CAAxB,6CAAhB,gDACA,oJACA,8IAEA,kBAAC,GAAD,KACE,4BACE,kBAAC,GAAD,CAAYL,GAAG,0BAAf,aAEF,4BACE,kBAAC,GAAD,CAAYA,GAAG,iCAAf,oBAIF,4BACE,kBAAC,GAAD,CAAYA,GAAG,kCAAf,sBAMJ,kBAAC,GAAD,CACE8E,KAAK,mBACLE,SAAS,iCACTD,KAAK,eACLE,SAAS,mC,4YCrDjB,IAIMd,GAAenU,IAAOgR,GAAV,MAkBHgF,GAtBI,SAAC,GAAc,IAAZ3B,EAAW,EAAXA,MACpB,OAAO,kBAAC,GAAD,CAActE,UAAU,SAASsE,I,o1DCsBpBrU,IAAOE,IAAV,MAQDF,IAAOE,IAAV,MAvBf,IA8CMqU,GAAWvU,IAAOkT,QAAV,MAwDC+C,IAlDIjW,YAAO6P,KAAP7P,CAAH,MAqBCA,IAAO4V,GAAV,MAzEG,WACf,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYvB,MAAM,aAClB,kBAAC,GAAD,CACES,KAAK,iBACLE,SAAS,gBACTD,KAAK,YACLE,SAAS,wC,qHCRjB,IAgBMV,GAAWvU,IAAOkT,QAAV,MAOCgD,GAvBK,WAClB,OACE,kBAAC,GAAD,KACM,kBAAC,GAAD,CAAY7B,MAAM,qBAClB,kBAAC,GAAD,CACES,KAAK,uBACLE,SAAS,qDACTD,KAAK,gBACLE,SAAS,qB,qHCRrB,IAiBMV,GAAWvU,IAAOkT,QAAV,MAKCiD,GAtBG,WAChB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY9B,MAAM,oBAClB,kBAAC,GAAD,CACES,KAAK,sBACLE,SAAS,4CACTD,KAAK,YACLE,SAAS,8C,wwBCDNjV,IAAOE,IAAV,MAoBWF,IAAOkT,QAAV,M,qHC9BhB,IAeMqB,GAAWvU,IAAOkT,QAAV,MAMCkD,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY/B,MAAM,cAClB,kBAAC,GAAD,CACES,KAAK,WACLE,SAAS,yBACTD,KAAK,iBACLE,SAAS,4C,qHCRjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhB,MAAM,yBAClB,kBAAC,GAAD,CACES,KAAK,iBACLE,SAAS,wCACTD,KAAK,kBACLE,SAAS,oC,qHCTjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmD,GArBF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhC,MAAM,mBAClB,kBAAC,GAAD,CACES,KAAK,YACLE,SAAS,mCACTD,KAAK,uBACLE,SAAS,gD,qHCPjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCkD,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY/B,MAAM,cAClB,kBAAC,GAAD,CACES,KAAK,kBACLE,SAAS,gCACTD,KAAK,iBACLE,SAAS,mD,qHCTjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhB,MAAM,yBAClB,kBAAC,GAAD,CACES,KAAK,iBACLE,SAAS,+CACTD,KAAK,mBACLE,SAAS,qC,qHCRjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmD,GArBF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhC,MAAM,sBAClB,kBAAC,GAAD,CACES,KAAK,YACLE,SAAS,0CACTD,KAAK,uBACLE,SAAS,yD,qHCPjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCkD,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY/B,MAAM,cAClB,kBAAC,GAAD,CACES,KAAK,eACLE,SAAS,8BACTD,KAAK,iBACLE,SAAS,iD,qHCTjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhB,MAAM,yBAClB,kBAAC,GAAD,CACES,KAAK,iBACLE,SAAS,6CACTD,KAAK,iBACLE,SAAS,oC,qHCRjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmD,GArBF,WACX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhC,MAAM,mBAClB,kBAAC,GAAD,CACES,KAAK,YACLE,SAAS,wCACTD,KAAK,uBACLE,SAAS,uD,qHCPjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCkD,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY/B,MAAM,cAClB,kBAAC,GAAD,CACES,KAAK,iBACLE,SAAS,gCACTD,KAAK,uBACLE,SAAS,yD,qHCTjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhB,MAAM,yBAClB,kBAAC,GAAD,CACES,KAAK,YACLE,SAAS,0CACTD,KAAK,mBACLE,SAAS,sC,qHCPjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCkD,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAY/B,MAAM,cAClB,kBAAC,GAAD,CACES,KAAK,mBACLE,SAAS,kCACTD,KAAK,uBACLE,SAAS,2D,qHCTjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCmC,GArBC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYhB,MAAM,yBAClB,kBAAC,GAAD,CACES,KAAK,YACLE,SAAS,4CACTD,KAAK,kCACLE,SAAS,wB,qHCHjB,IAgBMV,GAAWvU,IAAOkT,QAAV,MAOCoD,GAvBE,WACf,OACE,kBAAC,GAAD,KACM,kBAAC,GAAD,CAAYjC,MAAM,qBAClB,kBAAC,GAAD,CACES,KAAK,wBACLE,SAAS,qDACTD,KAAK,YACLE,SAAS,gD,qHCTrB,IAiBMV,GAAWvU,IAAOkT,QAAV,MAKCqD,GAtBK,WAClB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYlC,MAAM,iBAClB,kBAAC,GAAD,CACES,KAAK,gBACLE,SAAS,iBACTD,KAAK,YACLE,SAAS,4C,uHCZjB,IAeMV,GAAWvU,IAAOkT,QAAV,MAMCsD,GArBM,WACnB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYnC,MAAM,mBAClB,kBAAC,GAAD,CACES,KAAK,uBACLE,SAAS,mDACTD,KAAK,YACLE,SAAS,8C,koBCFjB,IAyBMV,GAAWvU,IAAOkT,QAAV,MA8CCuD,GAvEC,WACd,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAYpC,MAAM,sBAClB,uDAA4B,uBAAGhE,KAAK,qCAAR,qCAA5B,sHACA,kBAAC,KAAD,CACI0F,UAAU,cACVzB,MAAM,gBACV,6BACA,sGACA,+HACA,6TACA,qGACA,qM,4nBChBN,IAoCMC,GAAWvU,IAAOkT,QAAV,MA6CCwD,GAjFD,WACZ,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAarC,MAAM,oBACnB,gHACA,8NACA,qJACA,kBAAC,KAAD,CACI0B,UAAU,aACVzB,MAAM,eACV,6BACA,8IACA,0GACA,gKACA,mJACA,mKACA,8HACA,yGACA,4BACE,4BAAI,uBAAGjE,KAAK,mCAAR,qCAEN,4JACA,qNACA,4SAGA,kBAAC,GAAD,CACEyE,KAAK,iCACLE,SAAS,aACTD,KAAK,iBACLE,SAAS,oB,4nBC9BjB,IAwDMV,GAAWvU,IAAOkT,QAAV,MA6CCyD,GArGO,WACpB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAatC,MAAM,gDACnB,2BAAG,4CACH,oCAAS,uBAAGhU,OAAO,SAASgQ,KAAK,6CAAxB,8CACT,qEACA,kBAAC,KAAD,CACI0F,UAAU,aACVzB,MAAM,eACV,6BACA,2BAAG,4CACH,qFACA,kBAAC,KAAD,CACIyB,UAAU,eACVzB,MAAM,iBACV,2BAAG,4CACH,0FACA,kIACA,mFACA,uBAAGvE,UAAU,aACX,yBAAKE,IAAI,GAAGC,IAAI,MAElB,+LACA,2BAAG,4CACH,2PACA,sDAA2B,uBAAG7P,OAAO,SAASgQ,KAAK,6CAAxB,6CAA3B,iCACA,uBAAGN,UAAU,aAAb,IAA0B,yBAAKE,IAAI,GAAGC,IAAI,KAA1C,KACA,2BAAG,4CACH,kLACA,uBAAGH,UAAU,aAAb,IAA0B,yBAAKE,IAAI,GAAGC,IAAI,KAA1C,KACA,iOACA,2BAAG,wEACH,oKACA,uJACA,+KACA,kIACA,+BAAI,mFAAJ,KACA,iL,4nBCtCN,IAqDMqE,GAAWvU,IAAOkT,QAAV,MA6CC0D,GAlGG,WAChB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAavC,MAAM,0CAkCnB,2BAAG,yFACH,kBAAC,KAAD,CACI0B,UAAU,WACVzB,MAAM,aACV,+B,4nBCzCN,IA8CMC,GAAWvU,IAAOkT,QAAV,MA6CC2D,GA3FG,WAChB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAaxC,MAAM,0CACnB,2BAAG,4CACH,oCAAS,uBAAGhU,OAAO,SAASgQ,KAAK,qCAAxB,qCAAT,8BACA,2BAAG,4CACH,8NACA,kBAAC,KAAD,CACI0F,UAAU,cACVzB,MAAM,gBACV,6BACA,2BAAG,4CACH,mNACA,2BAAG,4CACH,2IACA,kBAAC,KAAD,CACIyB,UAAU,cACVzB,MAAM,gBACV,6BACA,2BAAG,4CACH,qLACA,kBAAC,KAAD,CACIyB,UAAU,cACVzB,MAAM,gBACV,6BACA,2BAAG,4CACH,2FACA,kBAAC,KAAD,CACIyB,UAAU,cACVzB,MAAM,gBACV,6BACA,4IACA,4QACA,qKACA,mJACA,kBAAC,GAAD,CACEQ,KAAK,iCACLE,SAAS,aACTD,KAAK,iBACLE,SAAS,oB,kxBCrCjB,IAqDMV,GAAWvU,IAAOkT,QAAV,MAyDC4D,GA9GK,WAClB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAOxC,MAAM,aAAcD,MAAM,gBACjC,wBAAItE,UAAU,aAAd,+DACA,2BAAG,kDACH,iDACA,mGAA8D,uBAAIgH,MAAO,CAACC,eAAgB,aAAc3W,OAAO,SAASgQ,KAAK,oFAA/D,UAC9D,4BACA,mDACA,qGAAgE,uBAAI0G,MAAO,CAACC,eAAgB,aAAc3W,OAAO,SAASgQ,KAAK,gEAA/D,UAChE,4BACA,kDACA,uBAAGN,UAAU,QAAO,0DACpB,yHACA,uBAAGA,UAAU,QAAO,mGAAwC,uBAAG1P,OAAO,SAASgQ,KAAK,kCAAxB,mCAC5D,qHAA0F,0EAA1F,mEACA,kBAAC,KAAD,CACI0F,UAAU,YACVzB,MAAM,cACV,6BACA,yCAAc,uDAAd,uCACA,kBAAC,KAAD,CACIyB,UAAU,aACVzB,MAAM,eACV,6BACA,uBAAGvE,UAAU,QAAO,yIACpB,kBAAC,KAAD,CACIgG,UAAU,YACVzB,MAAM,cACV,6BACA,uBAAGvE,UAAU,QAAO,yFACpB,oPACA,kBAAC,KAAD,CACIgG,UAAU,YACVzB,MAAM,cACV,6BACA,kBAAC,KAAD,CACIyB,UAAU,aACVzB,MAAM,eACV,6BACA,uBAAGvE,UAAU,QAAO,wEACpB,yMAA8K,2D,ocCnDpL,IAmCMkH,GAAQjX,IAAOE,IAAV,MA6BIgX,GAhEK,WAAO,IAAD,EAEUzF,oBAAS,GAFnB,mBAEjB0F,EAFiB,KAENC,EAFM,KAIlBC,EAAmB,WACnB1b,OAAO2b,YAAc,IACvBF,GAAa,GAEbA,GAAa,IAejB,OAJA7a,qBAAU,WACRZ,OAAOuV,iBAAiB,SAAUmG,KACjC,IAGD,kBAACJ,GAAD,KACCE,GACC,yBAAKpH,UAAU,UAAUiC,QAdT,WAClBrW,OAAO4b,SAAS,CACdC,IAAK,EACLC,SAAU,aAWV,kB,+9BCiCN,IA4IMC,GAAe1X,IAAOE,IAAV,MAIZyX,GAAS3X,IAAOE,IAAV,MAMN4Q,GAAa9Q,IAAOkT,QAAV,MA2BV0E,GAAa5X,IAAOkT,QAAV,MAqBD2E,GAtMH,WAGV,OACE,kBAACH,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,GAAD,MACA,yBAAK3H,UAAU,QACb,kBAAC4H,GAAD,KAEI,kBAAC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACC,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOlQ,KAAK,IAAIoK,OAAK,GACnB,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,aAAaoK,OAAK,GAC5B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,OAAOoK,OAAK,GACtB,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,gBAAgBoK,OAAK,GAC/B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,yBAAyBoK,OAAK,GACxC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,mCAAmCoK,OAAK,GAClD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,wCAAwCoK,OAAK,GACvD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,4CAA4CoK,OAAK,GAC3D,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,gCAAgCoK,OAAK,GAC/C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,0CAA0CoK,OAAK,GACzD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,+CAA+CoK,OAAK,GAC9D,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,qDAAqDoK,OAAK,GACpE,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,iCAAiCoK,OAAK,GAChD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,iBAAiBoK,OAAK,GAChC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,iBAAiBoK,OAAK,GAChC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,8BAA8BoK,OAAK,GAC7C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,wCAAwCoK,OAAK,GACvD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,6CAA6CoK,OAAK,GAC5D,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,mDAAmDoK,OAAK,GAClE,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,gCAAgCoK,OAAK,GAC/C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,0CAA0CoK,OAAK,GACzD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,qDAAqDoK,OAAK,GACpE,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,kCAAkCoK,OAAK,GACjD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,4CAA4CoK,OAAK,GAC3D,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,uDAAuDoK,OAAK,GACtE,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,oBAAoBoK,OAAK,GACnC,kBAACgG,GAAD,OAEF,kBAAC,KAAD,CAAOpQ,KAAK,mBAAmBoK,OAAK,GAClC,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,eAAeoK,OAAK,GAC9B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,cAAcoK,OAAK,GAC7B,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,cAAcoK,OAAK,GAC7B,kBAACiG,GAAD,OAEF,kBAAC,KAAD,CAAOrQ,KAAK,2CAA2CoK,OAAK,GAC1D,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,qCAAqCoK,OAAK,GACpD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,yCAAyCoK,OAAK,GACxD,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,4BAA4BoK,OAAK,GAC3C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,wBAAwBoK,OAAK,GACvC,kBAACkG,GAAD,OAEF,kBAAC,KAAD,CAAOtQ,KAAK,gCAAgCoK,OAAK,GAC/C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,4BAA4BoK,OAAK,GAC3C,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOpK,KAAK,gCAAgCoK,OAAK,GAC/C,kBAACmG,GAAD,YAQd,kBAAC,GAAD,QCvLAC,I,cAAsBC,mHAAYC,+BAcxC,SAASC,GAAT,GAAyC,IAAbtc,EAAY,EAAZA,SAC1B,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KAAsBA,QASpC,SAASuc,KACP,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAlC6B,kBAAxBJ,IACTK,IAAQC,WAAWN,IACnBK,IAAQrU,IAAI,CACVuU,kBAAoBC,WAEhB,SAAU/c,QAAU,aAAcA,OAClC,aACA,gBAHA,aAMN4c,IAAQC,WAAW,OAAQ,CAAEG,UAAU,EAAMC,OAAO,IA6BtDC,IAASC,OACP,kBAACT,GAAD,KACE,kBAACC,GAAD,MACA,kBAACxb,EAAD,KACE,oCACE,kBAACiD,EAAD,MACA,kBAAC,GAAD,SAINqR,SAAS2H,eAAe,U","file":"static/js/main.15497c02.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nconst UNISWAP = 'UNISWAP'\n\nconst VERSION = 'VERSION'\nconst CURRENT_VERSION = 0\nconst LAST_SAVED = 'LAST_SAVED'\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\nconst SAVED_TOKENS = 'SAVED_TOKENS'\nconst SAVED_PAIRS = 'SAVED_PAIRS'\n\nconst DARK_MODE = 'DARK_MODE'\n\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\n\nconst UPDATE_KEY = 'UPDATE_KEY'\n\nconst LocalStorageContext = createContext()\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_KEY: {\n      const { key, value } = payload\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\n      } else {\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\n    }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {},\n  }\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP))\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage\n    } else {\n      return { ...defaultLocalStorage, ...parsed }\n    }\n  } catch {\n    return defaultLocalStorage\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, undefined, init)\n\n  const updateKey = useCallback((key, value) => {\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\n  }, [])\n\n  return (\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\n      {children}\n    </LocalStorageContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const [state] = useLocalStorageContext()\n\n  useEffect(() => {\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\n  })\n\n  return null\n}\n\nexport function useDarkModeManager() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  let isDarkMode = state[DARK_MODE]\n  const toggleDarkMode = useCallback(\n    (value) => {\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\n    },\n    [updateKey, isDarkMode]\n  )\n  return [isDarkMode, toggleDarkMode]\n}\n\nexport function usePathDismissed(path) {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\n  function dismiss() {\n    let newPaths = state?.[DISMISSED_PATHS]\n    newPaths[path] = true\n    updateKey(DISMISSED_PATHS, newPaths)\n  }\n\n  return [pathDismissed, dismiss]\n}\n\nexport function useSavedAccounts() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\n\n  const addAccount = useCallback(\n    (account) => {\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\n    },\n    [savedAccounts, updateKey]\n  )\n\n  const removeAccount = useCallback(\n    (account) => {\n      let index = savedAccounts?.indexOf(account) ?? -1\n      if (index > -1) {\n        updateKey(SAVED_ACCOUNTS, [\n          ...savedAccounts.slice(0, index),\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\n        ])\n      }\n    },\n    [savedAccounts, updateKey]\n  )\n\n  return [savedAccounts, addAccount, removeAccount]\n}\n\nexport function useSavedPairs() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedPairs = state?.[SAVED_PAIRS]\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol,\n    }\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  function removePair(address) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = null\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  return [savedPairs, addPair, removePair]\n}\n\nexport function useSavedTokens() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedTokens = state?.[SAVED_TOKENS]\n\n  function addToken(address, symbol) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = {\n      symbol,\n    }\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  function removeToken(address) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = null\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  return [savedTokens, addToken, removeToken]\n}\n","import React from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode] = useDarkModeManager()\n\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\n}\n\nconst theme = (darkMode, color) => ({\n  customColor: color,\n  textColor: darkMode ? color : 'black',\n\n  panelColor: darkMode ? 'rgba(255, 255, 255, 0)' : 'rgba(255, 255, 255, 0)',\n  backgroundColor: darkMode ? '#212429' : '#F7F8FA',\n\n  uniswapPink: darkMode ? '#ff007a' : 'black',\n\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  inputBackground: darkMode ? '#1F1F1F' : '#FAFAFA',\n  shadowColor: darkMode ? '#000' : '#2F80ED',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n\n  text1: darkMode ? '#FAFAFA' : '#1F1F1F',\n  text2: darkMode ? '#C3C5CB' : '#565A69',\n  text3: darkMode ? '#6C7284' : '#888D9B',\n  text4: darkMode ? '#565A69' : '#C3C5CB',\n  text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n  // special case text types\n  white: '#FFFFFF',\n\n  // backgrounds / greys\n  bg1: darkMode ? '#212429' : '#FAFAFA',\n  bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n  bg3: darkMode ? '#40444F' : '#EDEEF2',\n  bg4: darkMode ? '#565A69' : '#CED0D9',\n  bg5: darkMode ? '#565A69' : '#888D9B',\n  bg6: darkMode ? '#000' : '#FFFFFF',\n\n  //specialty colors\n  modalBG: darkMode ? 'rgba(0,0,0,0.85)' : 'rgba(0,0,0,0.6)',\n  advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.4)',\n  onlyLight: darkMode ? '#22242a' : 'transparent',\n  divider: darkMode ? 'rgba(43, 43, 43, 0.435)' : 'rgba(43, 43, 43, 0.035)',\n\n  //primary colors\n  primary1: darkMode ? '#2172E5' : '#ff007a',\n  primary2: darkMode ? '#3680E7' : '#FF8CC3',\n  primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n  primary4: darkMode ? '#376bad70' : '#F6DDE8',\n  primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n  // color text\n  primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n  // secondary colors\n  secondary1: darkMode ? '#2172E5' : '#ff007a',\n  secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n  secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n  shadow1: darkMode ? '#000' : '#2F80ED',\n\n  // other\n  red1: '#FF6871',\n  green1: '#27AE60',\n  yellow1: '#FFE270',\n  yellow2: '#F3841E',\n  link: '#2172E5',\n  blue: '2f80ed',\n\n  background: darkMode ? 'black' : `radial-gradient(50% 50% at 50% 50%, #ff007a30 0%, #fff 0%)`,\n})\n\nconst TextWrapper = styled(Text)`\n  color: ${({ color, theme }) => theme[color]};\n`\n\nexport const TYPE = {\n  main(props) {\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\n  },\n\n  body(props) {\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\n  },\n\n  small(props) {\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\n  },\n\n  header(props) {\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\n  },\n\n  largeHeader(props) {\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\n  },\n\n  light(props) {\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\n  },\n\n  pink(props) {\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\n  },\n}\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Link = styled.a.attrs({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n})`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  :hover {\n    text-decoration: underline;\n  }\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const ThemedBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: 9999;\n\n  transform: translateY(-110vh);\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 14px;    \n    ${'' /* background-color: ${({ theme }) => theme.bg6}; */}\n    background:#fff;\n  }\n\n  .main{\n    height:100%;\n    margin-top:68px;\n  }\n  body.fix .side-bar{\n    position:fixed;\n    top:0;\n    z-index:99;\n    width:30%;\n\n    @media (max-width: 1025px){\n      width: inherit;\n    }\n    \n  }\n\n  a {\n    text-decoration: none;\n\n    :hover {\n      text-decoration: none\n    }\n  }\n\n  \n.three-line-legend {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: #20262E;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n@media screen and (max-width: 800px) {\n  .three-line-legend {\n    display: none !important;\n  }\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n  \n\n  & > * {\n    width: 100% !important;\n  }\n}\n\n\n  html {\n    font-size: 1rem;\n    font-variant: none;\n    color: 'black';\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    height: 100%;\n  }\n`\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const healthClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/index-node/graphql',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const v1Client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const stakingClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/way2rach/talisman',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const blockClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\n  }),\n  cache: new InMemoryCache(),\n})\n","export const FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\n\nexport const BUNDLE_ID = '1'\n\nexport const timeframeOptions = {\n  WEEK: '1 week',\n  MONTH: '1 month',\n  // THREE_MONTHS: '3 months',\n  // YEAR: '1 year',\n  ALL_TIME: 'All time',\n}\n\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\nexport const SUPPORTED_LIST_URLS__NO_ENS = [\n  'https://gateway.ipfs.io/ipns/tokens.uniswap.org',\n  'https://www.coingecko.com/tokens_list/uniswap/defi_100/v_0_0_0.json',\n]\n\n// hide from overview list\nexport const OVERVIEW_TOKEN_BLACKLIST = [\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n]\n\n// pair blacklist\nexport const PAIR_BLACKLIST = ['0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5']\n\n/**\n * For tokens that cause erros on fee calculations\n */\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\n\n\n\n\n// PAGINATION PAGE\nexport const pagi = [\n  '../../home',\n  '../../Migrating',\n  '../../faq',\n  '../../Amm',\n  '../../Impermanent',\n  '../../Amm/PageChild/Liquidity',\n  '../../Amm/PageChild/Swapping',\n  '../../Yield',\n  '../../Lending',\n  '../../Orders'\n]\n","import gql from 'graphql-tag'\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\n\nexport const SUBGRAPH_HEALTH = gql`\n  query health {\n    indexingStatusForCurrentVersion(subgraphName: \"uniswap/uniswap-v2\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }\n`\n\nexport const V1_DATA_QUERY = gql`\n  query uniswap($date: Int!, $date2: Int!) {\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }\n`\n\nexport const GET_BLOCK = gql`\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }\n`\n\nexport const GET_BLOCKS = (timestamps) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\n      timestamp + 600\n    } }) {\n      number\n    }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \n        liquidityTokenBalance\n        pair  {\n          id\n          totalSupply\n          reserveUSD\n        }\n      }\n    `\n  )\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const TOP_LPS_PER_PAIRS = gql`\n  query lps($pair: Bytes!) {\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        token0Price\n        token1Price\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const SHARE_VALUE = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        reserve0\n        reserve1\n        reserveUSD\n        totalSupply \n        token0{\n          derivedETH\n        }\n        token1{\n          derivedETH\n        }\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const ETH_PRICE = (block) => {\n  const queryString = block\n    ? `\n    query bundles {\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\n        id\n        ethPrice\n      }\n    }\n  `\n    : ` query bundles {\n      bundles(where: { id: ${BUNDLE_ID} }) {\n        id\n        ethPrice\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const USER = (block, account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\", block: {number: ${block}}) {\n        liquidityPositions\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\n  query events($user: Bytes!, $pair: Bytes!) {\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const FIRST_SNAPSHOT = gql`\n  query snapshots($user: Bytes!) {\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }\n`\n\nexport const USER_HISTORY = gql`\n  query snapshots($user: Bytes!, $skip: Int!) {\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const USER_POSITIONS = gql`\n  query liquidityPositions($user: Bytes!) {\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const USER_TRANSACTIONS = gql`\n  query transactions($user: Bytes!) {\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n\nexport const PAIR_CHART = gql`\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA = gql`\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  const queryString = `\n    query days {\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\n        id\n        pairAddress\n        date\n        dailyVolumeToken0\n        dailyVolumeToken1\n        dailyVolumeUSD\n        totalSupply\n        reserveUSD\n      }\n    } \n`\n  return gql(queryString)\n}\n\nexport const GLOBAL_CHART = gql`\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }\n`\n\nexport const GLOBAL_DATA = (block) => {\n  const queryString = ` query uniswapFactories {\n      uniswapFactories(\n       ${block ? `block: { number: ${block}}` : ``} \n       where: { id: \"${FACTORY_ADDRESS}\" }) {\n        id\n        totalVolumeUSD\n        totalVolumeETH\n        untrackedVolumeUSD\n        totalLiquidityUSD\n        totalLiquidityETH\n        txCount\n        pairCount\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const GLOBAL_TXNS = gql`\n  query transactions {\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }\n`\n\nexport const ALL_TOKENS = gql`\n  query tokens($skip: Int!) {\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }\n`\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }\n`\n\nexport const PAIR_SEARCH = gql`\n  query pairs($tokens: [Bytes]!, $id: String) {\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nexport const ALL_PAIRS = gql`\n  query pairs($skip: Int!) {\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nconst PairFields = `\n  fragment PairFields on Pair {\n    id\n    txCount\n    token0 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    token1 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    reserve0\n    reserve1\n    reserveUSD\n    totalSupply\n    trackedReserveETH\n    reserveETH\n    volumeUSD\n    untrackedVolumeUSD\n    token0Price\n    token1Price\n    createdAtTimestamp\n  }\n`\n\nexport const PAIRS_CURRENT = gql`\n  query pairs {\n    pairs(first: 200, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n    }\n  }\n`\n\nexport const PAIR_DATA = (pairAddress, block) => {\n  const queryString = `\n    ${PairFields}\n    query pairs {\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\n        ...PairFields\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const MINING_POSITIONS = (account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\") {\n        miningPosition {\n          id\n          user {\n            id\n          }\n          miningPool {\n              pair {\n                id\n                token0\n                token1\n              }\n          }\n          balance\n        }\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const PAIRS_BULK = gql`\n  ${PairFields}\n  query pairs($allPairs: [Bytes]!) {\n    pairs(where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\n      ...PairFields\n    }\n  }\n`\n\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  let queryString = `\n  query pairs {\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      reserveUSD\n      trackedReserveETH\n      volumeUSD\n      untrackedVolumeUSD\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_CHART = gql`\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        token0 {\n          id\n          derivedETH\n        }\n        token1 {\n          id\n          derivedETH\n        }\n      }\n    }\n  }\n`\n\nconst TokenFields = `\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    derivedETH\n    tradeVolume\n    tradeVolumeUSD\n    untrackedVolumeUSD\n    totalLiquidity\n    txCount\n  }\n`\n\nexport const TOKENS_CURRENT = gql`\n  ${TokenFields}\n  query tokens {\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      ...TokenFields\n    }\n  }\n`\n\nexport const TOKENS_DYNAMIC = (block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n        ...TokenFields\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_DATA = (tokenAddress, block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\n        ...TokenFields\n      }\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const FILTERED_TRANSACTIONS = gql`\n  query($allPairs: [Bytes]!) {\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\n\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nfunction uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return ['https' + uri.substr(4), uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n */\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\n  const urls = uriToHttp(listUrl)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.debug('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport getTokenList from '../utils/tokenLists'\nimport { healthClient } from '../apollo/client'\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\ndayjs.extend(utc)\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\n\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\nconst TIME_KEY = 'TIME_KEY'\nconst CURRENCY = 'CURRENCY'\nconst SESSION_START = 'SESSION_START'\nconst LATEST_BLOCK = 'LATEST_BLOCK'\nconst HEAD_BLOCK = 'HEAD_BLOCK'\n\nconst ApplicationContext = createContext()\n\nfunction useApplicationContext() {\n  return useContext(ApplicationContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { currency } = payload\n      return {\n        ...state,\n        [CURRENCY]: currency,\n      }\n    }\n    case UPDATE_TIMEFRAME: {\n      const { newTimeFrame } = payload\n      return {\n        ...state,\n        [TIME_KEY]: newTimeFrame,\n      }\n    }\n    case UPDATE_SESSION_START: {\n      const { timestamp } = payload\n      return {\n        ...state,\n        [SESSION_START]: timestamp,\n      }\n    }\n\n    case UPDATE_LATEST_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [LATEST_BLOCK]: block,\n      }\n    }\n\n    case UPDATE_HEAD_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [HEAD_BLOCK]: block,\n      }\n    }\n\n    case UPDATED_SUPPORTED_TOKENS: {\n      const { supportedTokens } = payload\n      return {\n        ...state,\n        [SUPPORTED_TOKENS]: supportedTokens,\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {\n  CURRENCY: 'USD',\n  TIME_KEY: timeframeOptions.ALL_TIME,\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  const update = useCallback((currency) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        currency,\n      },\n    })\n  }, [])\n\n  // global time window for charts - see timeframe options in constants\n  const updateTimeframe = useCallback((newTimeFrame) => {\n    dispatch({\n      type: UPDATE_TIMEFRAME,\n      payload: {\n        newTimeFrame,\n      },\n    })\n  }, [])\n\n  // used for refresh button\n  const updateSessionStart = useCallback((timestamp) => {\n    dispatch({\n      type: UPDATE_SESSION_START,\n      payload: {\n        timestamp,\n      },\n    })\n  }, [])\n\n  const updateSupportedTokens = useCallback((supportedTokens) => {\n    dispatch({\n      type: UPDATED_SUPPORTED_TOKENS,\n      payload: {\n        supportedTokens,\n      },\n    })\n  }, [])\n\n  const updateLatestBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_LATEST_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  const updateHeadBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_HEAD_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  return (\n    <ApplicationContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateSessionStart,\n            updateTimeframe,\n            updateSupportedTokens,\n            updateLatestBlock,\n            updateHeadBlock,\n          },\n        ],\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\n      )}\n    >\n      {children}\n    </ApplicationContext.Provider>\n  )\n}\n\nexport function useLatestBlocks() {\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\n\n  const latestBlock = state?.[LATEST_BLOCK]\n  const headBlock = state?.[HEAD_BLOCK]\n\n  useEffect(() => {\n    async function fetch() {\n      healthClient\n        .query({\n          query: SUBGRAPH_HEALTH,\n        })\n        .then((res) => {\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\n          if (syncedBlock && headBlock) {\n            updateLatestBlock(syncedBlock)\n            updateHeadBlock(headBlock)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!latestBlock) {\n      fetch()\n    }\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\n\n  return [latestBlock, headBlock]\n}\n\nexport function useCurrentCurrency() {\n  const [state, { update }] = useApplicationContext()\n  const toggleCurrency = useCallback(() => {\n    if (state.currency === 'ETH') {\n      update('USD')\n    } else {\n      update('ETH')\n    }\n  }, [state, update])\n  return [state[CURRENCY], toggleCurrency]\n}\n\nexport function useTimeframe() {\n  const [state, { updateTimeframe }] = useApplicationContext()\n  const activeTimeframe = state?.[TIME_KEY]\n  return [activeTimeframe, updateTimeframe]\n}\n\nexport function useStartTimestamp() {\n  const [activeWindow] = useTimeframe()\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    let startTime =\n      dayjs\n        .utc()\n        .subtract(\n          1,\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\n        )\n        .startOf('day')\n        .unix() - 1\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\n    setStartDateTimestamp(startTime)\n  }, [activeWindow, startDateTimestamp])\n\n  return startDateTimestamp\n}\n\n// keep track of session length for refresh ticker\nexport function useSessionStart() {\n  const [state, { updateSessionStart }] = useApplicationContext()\n  const sessionStart = state?.[SESSION_START]\n\n  useEffect(() => {\n    if (!sessionStart) {\n      updateSessionStart(Date.now())\n    }\n  })\n\n  const [seconds, setSeconds] = useState(0)\n\n  useEffect(() => {\n    let interval = null\n    interval = setInterval(() => {\n      setSeconds(Date.now() - sessionStart ?? Date.now())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [seconds, sessionStart])\n\n  return parseInt(seconds / 1000)\n}\n\nexport function useListedTokens() {\n  const [state, { updateSupportedTokens }] = useApplicationContext()\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\n\n  useEffect(() => {\n    async function fetchList() {\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\n        const tokensSoFar = await fetchedTokens\n        const newTokens = await getTokenList(url)\n        return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\n      }, Promise.resolve([]))\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\n      updateSupportedTokens(formatted)\n    }\n    if (!supportedTokens) {\n      fetchList()\n    }\n  }, [updateSupportedTokens, supportedTokens])\n\n  return supportedTokens\n}\n","import React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport dayjs from 'dayjs'\nimport { ethers } from 'ethers'\nimport utc from 'dayjs/plugin/utc'\nimport { client, blockClient } from '../apollo/client'\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\nimport { Text } from 'rebass'\nimport _Decimal from 'decimal.js-light'\nimport toFormat from 'toformat'\nimport { timeframeOptions } from '../constants'\nimport Numeral from 'numeral'\n\n// format libraries\nconst Decimal = toFormat(_Decimal)\nBigNumber.set({ EXPONENTIAL_AT: 50 })\ndayjs.extend(utc)\n\nexport function getTimeframe(timeWindow) {\n  const utcEndTime = dayjs.utc()\n  // based on window, get starttime\n  let utcStartTime\n  switch (timeWindow) {\n    case timeframeOptions.WEEK:\n      utcStartTime = utcEndTime.subtract(1, 'week').endOf('day').unix() - 1\n      break\n    case timeframeOptions.MONTH:\n      utcStartTime = utcEndTime.subtract(1, 'month').endOf('day').unix() - 1\n      break\n    case timeframeOptions.ALL_TIME:\n      utcStartTime = utcEndTime.subtract(1, 'year').endOf('day').unix() - 1\n      break\n    default:\n      utcStartTime = utcEndTime.subtract(1, 'year').startOf('year').unix() - 1\n      break\n  }\n  return utcStartTime\n}\n\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\n  if (!token1Address) {\n    return (\n      `https://uniswap.exchange/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address}/${'ETH'}`\n    )\n  } else {\n    return (\n      `https://uniswap.exchange/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address}/${\n        token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\n      }`\n    )\n  }\n}\n\nexport function getSwapLink(token0Address, token1Address = null) {\n  if (!token1Address) {\n    return `https://uniswap.exchange/swap?inputCurrency=${token0Address}`\n  } else {\n    return `https://uniswap.exchange/swap?inputCurrency=${\n      token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\n    }&outputCurrency=${token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address}`\n  }\n}\n\nexport function getMiningPoolLink(token0Address) {\n  return `https://app.uniswap.org/#/uni/ETH/${token0Address}`\n}\n\nexport function getUniswapAppLink(linkVariable) {\n  let baseUniswapUrl = 'https://app.uniswap.org/#/uni'\n  if (!linkVariable) {\n    return baseUniswapUrl\n  }\n\n  return `${baseUniswapUrl}/ETH/${linkVariable}`\n}\n\nexport function localNumber(val) {\n  return Numeral(val).format('0,0')\n}\n\nexport const toNiceDate = (date) => {\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\n  return x\n}\n\nexport const toWeeklyDate = (date) => {\n  const formatted = dayjs.utc(dayjs.unix(date))\n  date = new Date(formatted)\n  const day = new Date(formatted).getDay()\n  var lessDays = day === 6 ? 0 : day + 1\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\n}\n\nexport function getTimestampsForChanges() {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n\n  while (!allFound) {\n    let end = list.length\n    if (skip + skipCount < list.length) {\n      end = skip + skipCount\n    }\n    let sliced = list.slice(skip, end)\n    let result = await localClient.query({\n      query: query(...vars, sliced),\n      fetchPolicy: 'cache-first',\n    })\n    fetchedData = {\n      ...fetchedData,\n      ...result.data,\n    }\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n      allFound = true\n    } else {\n      skip += skipCount\n    }\n  }\n\n  return fetchedData\n}\n\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\nexport async function getBlockFromTimestamp(timestamp) {\n  let result = await blockClient.query({\n    query: GET_BLOCK,\n    variables: {\n      timestampFrom: timestamp,\n      timestampTo: timestamp + 600,\n    },\n    fetchPolicy: 'cache-first',\n  })\n  return result?.data?.blocks?.[0]?.number\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  let blocks = []\n  if (fetchedData) {\n    for (var t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n\nexport async function getLiquidityTokenBalanceOvertime(account, timestamps) {\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(timestamps)\n\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(account, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    if (timestamp) {\n      values.push({\n        timestamp,\n        balance: 0,\n      })\n    }\n  }\n}\n\n/**\n * @notice Example query using time travel queries\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\n * @param {String} pairAddress\n * @param {Array} timestamps\n */\nexport async function getShareValueOverTime(pairAddress, timestamps) {\n  if (!timestamps) {\n    const utcCurrentTime = dayjs()\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\n  }\n\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(timestamps)\n\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(pairAddress, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\n    if (timestamp) {\n      values.push({\n        timestamp,\n        sharePriceUsd,\n        totalSupply: result.data[row].totalSupply,\n        reserve0: result.data[row].reserve0,\n        reserve1: result.data[row].reserve1,\n        reserveUSD: result.data[row].reserveUSD,\n        token0DerivedETH: result.data[row].token0.derivedETH,\n        token1DerivedETH: result.data[row].token1.derivedETH,\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\n        ethPrice: 0,\n        token0PriceUSD: 0,\n        token1PriceUSD: 0,\n      })\n    }\n  }\n\n  // add eth prices\n  let index = 0\n  for (var brow in result?.data) {\n    let timestamp = brow.split('b')[1]\n    if (timestamp) {\n      values[index].ethPrice = result.data[brow].ethPrice\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\n      index += 1\n    }\n  }\n\n  return values\n}\n\n/**\n * @notice Creates an evenly-spaced array of timestamps\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\n * @param {Int} timestamp_from in seconds\n * @param {Int} period_length in seconds\n * @param {Int} periods\n */\nexport function getTimestampRange(timestamp_from, period_length, periods) {\n  let timestamps = []\n  for (let i = 0; i <= periods; i++) {\n    timestamps.push(timestamp_from + i * period_length)\n  }\n  return timestamps\n}\n\nexport const toNiceDateYear = (date) => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\n\nexport const isAddress = (value) => {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase())\n  } catch {\n    return false\n  }\n}\n\nexport const toK = (num) => {\n  return Numeral(num).format('0.[00]a')\n}\n\nexport const setThemeColor = (theme) => document.documentElement.style.setProperty('--c-token', theme || '#333333')\n\nexport const Big = (number) => new BigNumber(number)\n\nexport const urls = {\n  showTransaction: (tx) => `https://etherscan.io/tx/${tx}/`,\n  showAddress: (address) => `https://www.etherscan.io/address/${address}/`,\n  showToken: (address) => `https://www.etherscan.io/token/${address}/`,\n  showBlock: (block) => `https://etherscan.io/block/${block}/`,\n}\n\nexport const formatTime = (unix) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(unix)\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n\nexport const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num, digits) => {\n  const formatter = new Intl.NumberFormat([], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  })\n  return formatter.format(num)\n}\n\nexport const toSignificant = (number, significantDigits) => {\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\n}\n\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0' : 0\n  }\n  let num = parseFloat(number)\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarAmount(num, 4)\n    } else {\n      return formatDollarAmount(num, 2)\n    }\n  }\n\n  return Number(parseFloat(num).toFixed(5)).toLocaleString()\n}\n\nexport function rawPercent(percentRaw) {\n  let percent = parseFloat(percentRaw * 100)\n  if (!percent || percent === 0) {\n    return '0%'\n  }\n  if (percent < 1 && percent > 0) {\n    return '< 1%'\n  }\n  return percent.toFixed(0) + '%'\n}\n\nexport function formattedPercent(percent, useBrackets = false) {\n  percent = parseFloat(percent)\n  if (!percent || percent === 0) {\n    return <Text fontWeight={500}>0%</Text>\n  }\n\n  if (percent < 0.0001 && percent > 0) {\n    return (\n      <Text fontWeight={500} color=\"green\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  if (percent < 0 && percent > -0.0001) {\n    return (\n      <Text fontWeight={500} color=\"red\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  let fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  if (fixedPercent > 0) {\n    if (fixedPercent > 100) {\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\n    } else {\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\n    }\n  } else {\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\n  }\n}\n\n/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\n  // get volume info for both 24 hour periods\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0\n  }\n  return adjustedPercentChange\n}\n\nexport function isEquivalent(a, b) {\n  var aProps = Object.getOwnPropertyNames(a)\n  var bProps = Object.getOwnPropertyNames(b)\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i]\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n  return true\n}\n","interface BasicData {\n  token0?: {\n    id: string\n    name: string\n    symbol: string\n  }\n  token1?: {\n    id: string\n    name: string\n    symbol: string\n  }\n}\n\n// Override data return from graph - usually because proxy token has changed\n// names since entitiy was created in subgraph\n// keys are lowercase token addresses <--------\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\n    name: 'Ether (Wrapped)',\n    symbol: 'ETH',\n  },\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\n    name: 'Energi',\n    symbol: 'NRGE',\n  },\n}\n\n// override tokens with incorrect symbol or names\nexport function updateNameData(data: BasicData): BasicData | undefined {\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\n  }\n\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\n  }\n\n  return data\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  PAIR_DATA,\n  PAIR_CHART,\n  FILTERED_TRANSACTIONS,\n  PAIRS_CURRENT,\n  PAIRS_BULK,\n  PAIRS_HISTORICAL_BULK,\n  HOURLY_PAIR_RATES,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  getPercentChange,\n  get2DayPercentChange,\n  isAddress,\n  getBlocksFromTimestamps,\n  getTimestampsForChanges,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\n\ndayjs.extend(utc)\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\n        object\n      )\n    : null\n}\n\nconst PairDataContext = createContext()\n\nfunction usePairDataContext() {\n  return useContext(PairDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { pairAddress, data } = payload\n      return {\n        ...state,\n        [pairAddress]: {\n          ...state?.[pairAddress],\n          ...data,\n        },\n      }\n    }\n\n    case UPDATE_TOP_PAIRS: {\n      const { topPairs } = payload\n      let added = {}\n      topPairs.map((pair) => {\n        return (added[pair.id] = pair)\n      })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_PAIR_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_HOURLY_DATA: {\n      const { address, hourlyData, timeWindow } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          hourlyData: {\n            ...state?.[address]?.hourlyData,\n            [timeWindow]: hourlyData,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  // update pair specific data\n  const update = useCallback((pairAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopPairs = useCallback((topPairs) => {\n    dispatch({\n      type: UPDATE_TOP_PAIRS,\n      payload: {\n        topPairs,\n      },\n    })\n  }, [])\n\n  const updatePairTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_PAIR_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\n    dispatch({\n      type: UPDATE_HOURLY_DATA,\n      payload: { address, hourlyData, timeWindow },\n    })\n  }, [])\n\n  return (\n    <PairDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updatePairTxns,\n            updateChartData,\n            updateTopPairs,\n            updateHourlyData,\n          },\n        ],\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\n      )}\n    >\n      {children}\n    </PairDataContext.Provider>\n  )\n}\n\nasync function getBulkPairData(pairList, ethPrice) {\n  const [t1, t2, tWeek] = getTimestampsForChanges()\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\n\n  try {\n    let current = await client.query({\n      query: PAIRS_BULK,\n      variables: {\n        allPairs: pairList,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\n      [b1, b2, bWeek].map(async (block) => {\n        let result = client.query({\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\n          fetchPolicy: 'cache-first',\n        })\n        return result\n      })\n    )\n\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let pairData = await Promise.all(\n      current &&\n        current.data.pairs.map(async (pair) => {\n          let data = pair\n          let oneDayHistory = oneDayData?.[pair.id]\n          if (!oneDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b1),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = newData.data.pairs[0]\n          }\n          let twoDayHistory = twoDayData?.[pair.id]\n          if (!twoDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b2),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = newData.data.pairs[0]\n          }\n          let oneWeekHistory = oneWeekData?.[pair.id]\n          if (!oneWeekHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, bWeek),\n              fetchPolicy: 'cache-first',\n            })\n            oneWeekHistory = newData.data.pairs[0]\n          }\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\n          return data\n        })\n    )\n    return pairData\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\n  // get volume changes\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n    data?.volumeUSD,\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\n  )\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\n    data?.untrackedVolumeUSD,\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\n  )\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\n\n  // set volume properties\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\n  data.volumeChangeUSD = volumeChangeUSD\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\n  data.volumeChangeUntracked = volumeChangeUntracked\n\n  // set liquiditry properties\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\n\n  // format if pair hasnt existed for a day or a week\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneDayData && data) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneWeekData && data) {\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\n  }\n\n  // format incorrect names\n  updateNameData(data)\n\n  return data\n}\n\nconst getPairTransactions = async (pairAddress) => {\n  const transactions = {}\n\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: [pairAddress],\n      },\n      fetchPolicy: 'no-cache',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\nconst getPairChartData = async (pairAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\n  let startTime = utcStartTime.unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: PAIR_CHART,\n        variables: {\n          pairAddress: pairAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.pairDayDatas)\n      if (result.data.pairDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\n    })\n\n    if (data[0]) {\n      // fill in empty days\n      let timestamp = data[0].date ? data[0].date : startTime\n      let latestLiquidityUSD = data[0].reserveUSD\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dayString: nextDay,\n            dailyVolumeUSD: 0,\n            reserveUSD: latestLiquidityUSD,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\n  try {\n    const utcEndTime = dayjs.utc()\n    let time = startTime\n\n    // create an array of hour start times until we reach current hour\n    const timestamps = []\n    while (time <= utcEndTime.unix() - 3600) {\n      timestamps.push(time)\n      time += 3600\n    }\n\n    // backout if invalid timestamp format\n    if (timestamps.length === 0) {\n      return []\n    }\n\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n    let blocks\n\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks?.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      if (timestamp) {\n        values.push({\n          timestamp,\n          rate0: parseFloat(result[row]?.token0Price),\n          rate1: parseFloat(result[row]?.token1Price),\n        })\n      }\n    }\n\n    let formattedHistoryRate0 = []\n    let formattedHistoryRate1 = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistoryRate0.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate0),\n        close: parseFloat(values[i + 1].rate0),\n      })\n      formattedHistoryRate1.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate1),\n        close: parseFloat(values[i + 1].rate1),\n      })\n    }\n\n    return [formattedHistoryRate0, formattedHistoryRate1]\n  } catch (e) {\n    console.log(e)\n    return [[], []]\n  }\n}\n\nexport function Updater() {\n  const [, { updateTopPairs }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs by reserves\n      let {\n        data: { pairs },\n      } = await client.query({\n        query: PAIRS_CURRENT,\n        fetchPolicy: 'cache-first',\n      })\n\n      // format as array of addresses\n      const formattedPairs = pairs.map((pair) => {\n        return pair.id\n      })\n\n      // get data for every pair in list\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\n      topPairs && updateTopPairs(topPairs)\n    }\n    ethPrice && getData()\n  }, [ethPrice, updateTopPairs])\n  return null\n}\n\nexport function useHourlyRateData(pairAddress, timeWindow) {\n  const [state, { updateHourlyData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\n      updateHourlyData(pairAddress, data, timeWindow)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\n\n  return chartData\n}\n\n/**\n * @todo\n * store these updates to reduce future redundant calls\n */\nexport function useDataForList(pairList) {\n  const [state] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n\n  const [stale, setStale] = useState(false)\n  const [fetched, setFetched] = useState([])\n\n  // reset\n  useEffect(() => {\n    if (pairList) {\n      setStale(false)\n      setFetched()\n    }\n  }, [pairList])\n\n  useEffect(() => {\n    async function fetchNewPairData() {\n      let newFetched = []\n      let unfetched = []\n\n      pairList.map(async (pair) => {\n        let currentData = state?.[pair.id]\n        if (!currentData) {\n          unfetched.push(pair.id)\n        } else {\n          newFetched.push(currentData)\n        }\n      })\n\n      let newPairData = await getBulkPairData(\n        unfetched.map((pair) => {\n          return pair\n        }),\n        ethPrice\n      )\n      setFetched(newFetched.concat(newPairData))\n    }\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\n      setStale(true)\n      fetchNewPairData()\n    }\n  }, [ethPrice, state, pairList, stale, fetched])\n\n  let formattedFetch =\n    fetched &&\n    fetched.reduce((obj, cur) => {\n      return { ...obj, [cur?.id]: cur }\n    }, {})\n\n  return formattedFetch\n}\n\n/**\n * Get all the current and 24hr changes for a pair\n */\nexport function usePairData(pairAddress) {\n  const [state, { update }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  const pairData = state?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!pairData && pairAddress) {\n        let data = await getBulkPairData([pairAddress], ethPrice)\n        data && update(pairAddress, data[0])\n      }\n    }\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\n      fetchData()\n    }\n  }, [pairAddress, pairData, update, ethPrice])\n\n  return pairData || {}\n}\n\n/**\n * Get most recent txns for a pair\n */\nexport function usePairTransactions(pairAddress) {\n  const [state, { updatePairTxns }] = usePairDataContext()\n  const pairTxns = state?.[pairAddress]?.txns\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!pairTxns) {\n        let transactions = await getPairTransactions(pairAddress)\n        updatePairTxns(pairAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [pairTxns, pairAddress, updatePairTxns])\n  return pairTxns\n}\n\nexport function usePairChartData(pairAddress) {\n  const [state, { updateChartData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.chartData\n\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getPairChartData(pairAddress)\n        updateChartData(pairAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, pairAddress, updateChartData])\n  return chartData\n}\n\n/**\n * Get list of all pairs in Uniswap\n */\nexport function useAllPairData() {\n  const [state] = usePairDataContext()\n  return state || {}\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useTimeframe } from './Application'\nimport {\n  getPercentChange,\n  getBlockFromTimestamp,\n  getBlocksFromTimestamps,\n  get2DayPercentChange,\n  getTimeframe,\n} from '../utils'\nimport {\n  GLOBAL_DATA,\n  GLOBAL_TXNS,\n  GLOBAL_CHART,\n  ETH_PRICE,\n  ALL_PAIRS,\n  ALL_TOKENS,\n  TOP_LPS_PER_PAIRS,\n} from '../apollo/queries'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport { useAllPairData } from './PairData'\nconst UPDATE = 'UPDATE'\nconst UPDATE_TXNS = 'UPDATE_TXNS'\nconst UPDATE_CHART = 'UPDATE_CHART'\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\nconst UPDATE_ALL_PAIRS_IN_UNISWAP = 'UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS'\nconst UPDATE_ALL_TOKENS_IN_UNISWAP = 'UPDATE_ALL_TOKENS_IN_UNISWAP'\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nconst GlobalDataContext = createContext()\n\nfunction useGlobalDataContext() {\n  return useContext(GlobalDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { data } = payload\n      return {\n        ...state,\n        globalData: data,\n      }\n    }\n    case UPDATE_TXNS: {\n      const { transactions } = payload\n      return {\n        ...state,\n        transactions,\n      }\n    }\n    case UPDATE_CHART: {\n      const { daily, weekly } = payload\n      return {\n        ...state,\n        chartData: {\n          daily,\n          weekly,\n        },\n      }\n    }\n    case UPDATE_ETH_PRICE: {\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\n      return {\n        [ETH_PRICE_KEY]: ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      }\n    }\n\n    case UPDATE_ALL_PAIRS_IN_UNISWAP: {\n      const { allPairs } = payload\n      return {\n        ...state,\n        allPairs,\n      }\n    }\n\n    case UPDATE_ALL_TOKENS_IN_UNISWAP: {\n      const { allTokens } = payload\n      return {\n        ...state,\n        allTokens,\n      }\n    }\n\n    case UPDATE_TOP_LPS: {\n      const { topLps } = payload\n      return {\n        ...state,\n        topLps,\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        data,\n      },\n    })\n  }, [])\n\n  const updateTransactions = useCallback((transactions) => {\n    dispatch({\n      type: UPDATE_TXNS,\n      payload: {\n        transactions,\n      },\n    })\n  }, [])\n\n  const updateChart = useCallback((daily, weekly) => {\n    dispatch({\n      type: UPDATE_CHART,\n      payload: {\n        daily,\n        weekly,\n      },\n    })\n  }, [])\n\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\n    dispatch({\n      type: UPDATE_ETH_PRICE,\n      payload: {\n        ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      },\n    })\n  }, [])\n\n  const updateAllPairsInUniswap = useCallback((allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS_IN_UNISWAP,\n      payload: {\n        allPairs,\n      },\n    })\n  }, [])\n\n  const updateAllTokensInUniswap = useCallback((allTokens) => {\n    dispatch({\n      type: UPDATE_ALL_TOKENS_IN_UNISWAP,\n      payload: {\n        allTokens,\n      },\n    })\n  }, [])\n\n  const updateTopLps = useCallback((topLps) => {\n    dispatch({\n      type: UPDATE_TOP_LPS,\n      payload: {\n        topLps,\n      },\n    })\n  }, [])\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTransactions,\n            updateChart,\n            updateEthPrice,\n            updateTopLps,\n            updateAllPairsInUniswap,\n            updateAllTokensInUniswap,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTransactions,\n          updateTopLps,\n          updateChart,\n          updateEthPrice,\n          updateAllPairsInUniswap,\n          updateAllTokensInUniswap,\n        ]\n      )}\n    >\n      {children}\n    </GlobalDataContext.Provider>\n  )\n}\n\n/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */\nasync function getGlobalData(ethPrice, oldEthPrice) {\n  // data for each day , historic data used for % changes\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // get timestamps for the days\n    const utcCurrentTime = dayjs()\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\n\n    // get the blocks needed for time travel queries\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\n      utcOneDayBack,\n      utcTwoDaysBack,\n      utcOneWeekBack,\n      utcTwoWeeksBack,\n    ])\n\n    // fetch the global data\n    let result = await client.query({\n      query: GLOBAL_DATA(),\n      fetchPolicy: 'cache-first',\n    })\n    data = result.data.uniswapFactories[0]\n\n    // fetch the historical data\n    let oneDayResult = await client.query({\n      query: GLOBAL_DATA(oneDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.uniswapFactories[0]\n\n    let twoDayResult = await client.query({\n      query: GLOBAL_DATA(twoDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.uniswapFactories[0]\n\n    let oneWeekResult = await client.query({\n      query: GLOBAL_DATA(oneWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const oneWeekData = oneWeekResult.data.uniswapFactories[0]\n\n    let twoWeekResult = await client.query({\n      query: GLOBAL_DATA(twoWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const twoWeekData = twoWeekResult.data.uniswapFactories[0]\n\n    if (data && oneDayData && twoDayData && twoWeekData) {\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneDayData.totalVolumeUSD ? oneDayData.totalVolumeUSD : 0,\n        twoDayData.totalVolumeUSD ? twoDayData.totalVolumeUSD : 0\n      )\n\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneWeekData.totalVolumeUSD,\n        twoWeekData.totalVolumeUSD\n      )\n\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\n        data.txCount,\n        oneDayData.txCount ? oneDayData.txCount : 0,\n        twoDayData.txCount ? twoDayData.txCount : 0\n      )\n\n      // format the total liquidity in USD\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\n      const liquidityChangeUSD = getPercentChange(\n        data.totalLiquidityETH * ethPrice,\n        oneDayData.totalLiquidityETH * oldEthPrice\n      )\n\n      // add relevant fields with the calculated amounts\n      data.oneDayVolumeUSD = oneDayVolumeUSD\n      data.oneWeekVolume = oneWeekVolume\n      data.weeklyVolumeChange = weeklyVolumeChange\n      data.volumeChangeUSD = volumeChangeUSD\n      data.liquidityChangeUSD = liquidityChangeUSD\n      data.oneDayTxns = oneDayTxns\n      data.txnChange = txnChange\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\n/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */\nconst getChartData = async (oldestDateToFetch) => {\n  let data = []\n  let weeklyData = []\n  const utcEndTime = dayjs.utc()\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      let result = await client.query({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: oldestDateToFetch,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.uniswapDayDatas)\n      if (result.data.uniswapDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    if (data) {\n      let dayIndexSet = new Set()\n      let dayIndexArray = []\n      const oneDay = 24 * 60 * 60\n\n      // for each day, parse the daily volume and format for chart array\n      data.forEach((dayData, i) => {\n        // add the day index to the set of days\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n        dayIndexArray.push(data[i])\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      })\n\n      // fill in empty days ( there will be no day datas if no trades made that day )\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\n      let latestDayDats = data[0].mostLiquidTokens\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dailyVolumeUSD: 0,\n            totalLiquidityUSD: latestLiquidityUSD,\n            mostLiquidTokens: latestDayDats,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    // format weekly data for weekly sized chunks\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n    let startIndexWeekly = -1\n    let currentWeek = -1\n    data.forEach((entry, i) => {\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\n      if (week !== currentWeek) {\n        currentWeek = week\n        startIndexWeekly++\n      }\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\n      weeklyData[startIndexWeekly].date = data[i].date\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  return [data, weeklyData]\n}\n\n/**\n * Get and format transactions for global page\n */\nconst getGlobalTransactions = async () => {\n  let transactions = {}\n\n  try {\n    let result = await client.query({\n      query: GLOBAL_TXNS,\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = []\n    transactions.burns = []\n    transactions.swaps = []\n    result?.data?.transactions &&\n      result.data.transactions.map((transaction) => {\n        if (transaction.mints.length > 0) {\n          transaction.mints.map((mint) => {\n            return transactions.mints.push(mint)\n          })\n        }\n        if (transaction.burns.length > 0) {\n          transaction.burns.map((burn) => {\n            return transactions.burns.push(burn)\n          })\n        }\n        if (transaction.swaps.length > 0) {\n          transaction.swaps.map((swap) => {\n            return transactions.swaps.push(swap)\n          })\n        }\n        return true\n      })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\n/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */\nconst getEthPrice = async () => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n\n  let ethPrice = 0\n  let ethPriceOneDay = 0\n  let priceChangeETH = 0\n\n  try {\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n    let result = await client.query({\n      query: ETH_PRICE(),\n      fetchPolicy: 'cache-first',\n    })\n    let resultOneDay = await client.query({\n      query: ETH_PRICE(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\n    ethPrice = currentPrice\n    ethPriceOneDay = oneDayBackPrice\n  } catch (e) {\n    console.log(e)\n  }\n\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\n}\n\nconst PAIRS_TO_FETCH = 500\nconst TOKENS_TO_FETCH = 500\n\n/**\n * Loop through every pair on uniswap, used for search\n */\nasync function getAllPairsOnUniswap() {\n  try {\n    let allFound = false\n    let pairs = []\n    let skipCount = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_PAIRS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skipCount = skipCount + PAIRS_TO_FETCH\n      pairs = pairs.concat(result?.data?.pairs)\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\n        allFound = true\n      }\n    }\n    return pairs\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Loop through every token on uniswap, used for search\n */\nasync function getAllTokensOnUniswap() {\n  try {\n    let allFound = false\n    let skipCount = 0\n    let tokens = []\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_TOKENS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      tokens = tokens.concat(result?.data?.tokens)\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\n        allFound = true\n      }\n      skipCount = skipCount += TOKENS_TO_FETCH\n    }\n    return tokens\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */\nexport function useGlobalData() {\n  const [state, { update, updateAllPairsInUniswap, updateAllTokensInUniswap }] = useGlobalDataContext()\n  const [ethPrice, oldEthPrice] = useEthPrice()\n\n  const data = state?.globalData\n\n  useEffect(() => {\n    async function fetchData() {\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\n      globalData && update(globalData)\n\n      let allPairs = await getAllPairsOnUniswap()\n      updateAllPairsInUniswap(allPairs)\n\n      let allTokens = await getAllTokensOnUniswap()\n      updateAllTokensInUniswap(allTokens)\n    }\n    if (!data && ethPrice && oldEthPrice) {\n      fetchData()\n    }\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInUniswap, updateAllTokensInUniswap])\n\n  return data || {}\n}\n\nexport function useGlobalChartData() {\n  const [state, { updateChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n\n  const chartDataDaily = state?.chartData?.daily\n  const chartDataWeekly = state?.chartData?.weekly\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    // based on window, get starttime\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  /**\n   * Fetch data if none fetched or older data is needed\n   */\n  useEffect(() => {\n    async function fetchData() {\n      // historical stuff for chart\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch)\n      updateChart(newChartData, newWeeklyData)\n    }\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly)) {\n      fetchData()\n    }\n  }, [chartDataDaily, chartDataWeekly, oldestDateFetch, updateChart])\n\n  return [chartDataDaily, chartDataWeekly]\n}\n\nexport function useGlobalTransactions() {\n  const [state, { updateTransactions }] = useGlobalDataContext()\n  const transactions = state?.transactions\n  useEffect(() => {\n    async function fetchData() {\n      if (!transactions) {\n        let txns = await getGlobalTransactions()\n        updateTransactions(txns)\n      }\n    }\n    fetchData()\n  }, [updateTransactions, transactions])\n  return transactions\n}\n\nexport function useEthPrice() {\n  const [state, { updateEthPrice }] = useGlobalDataContext()\n  const ethPrice = state?.[ETH_PRICE_KEY]\n  const ethPriceOld = state?.['oneDayPrice']\n  useEffect(() => {\n    async function checkForEthPrice() {\n      if (!ethPrice) {\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\n      }\n    }\n    checkForEthPrice()\n  }, [ethPrice, updateEthPrice])\n\n  return [ethPrice, ethPriceOld]\n}\n\nexport function useAllPairsInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allPairs = state?.allPairs\n\n  return allPairs || []\n}\n\nexport function useAllTokensInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allTokens = state?.allTokens\n\n  return allTokens || []\n}\n\n/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */\nexport function useTopLps() {\n  const [state, { updateTopLps }] = useGlobalDataContext()\n  let topLps = state?.topLps\n\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    async function fetchData() {\n      // get top 20 by reserves\n      let topPairs = Object.keys(allPairs)\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\n        ?.slice(0, 99)\n        .map((pair) => pair)\n\n      let topLpLists = await Promise.all(\n        topPairs.map(async (pair) => {\n          // for each one, fetch top LPs\n          try {\n            const { data: results } = await client.query({\n              query: TOP_LPS_PER_PAIRS,\n              variables: {\n                pair: pair.toString(),\n              },\n              fetchPolicy: 'cache-first',\n            })\n            if (results) {\n              return results.liquidityPositions\n            }\n          } catch (e) {}\n        })\n      )\n\n      // get the top lps from the results formatted\n      const topLps = []\n      topLpLists\n        .filter((i) => !!i) // check for ones not fetched correctly\n        .map((list) => {\n          return list.map((entry) => {\n            const pairData = allPairs[entry.pair.id]\n            return topLps.push({\n              user: entry.user,\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\n              pairAddress: entry.pair.id,\n              token0: pairData.token0.id,\n              token1: pairData.token1.id,\n              usd:\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\n                parseFloat(pairData.reserveUSD),\n            })\n          })\n        })\n\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\n      const shorter = sorted.splice(0, 100)\n      updateTopLps(shorter)\n    }\n\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\n      fetchData()\n    }\n  })\n\n  return topLps\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  TOKEN_DATA,\n  FILTERED_TRANSACTIONS,\n  TOKEN_CHART,\n  TOKENS_CURRENT,\n  TOKENS_DYNAMIC,\n  PRICES_BY_BLOCK,\n  PAIR_DATA,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  get2DayPercentChange,\n  getPercentChange,\n  getBlockFromTimestamp,\n  isAddress,\n  getBlocksFromTimestamps,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\n\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\n\ndayjs.extend(utc)\n\nconst TokenDataContext = createContext()\n\nfunction useTokenDataContext() {\n  return useContext(TokenDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { tokenAddress, data } = payload\n      return {\n        ...state,\n        [tokenAddress]: {\n          ...state?.[tokenAddress],\n          ...data,\n        },\n      }\n    }\n    case UPDATE_TOP_TOKENS: {\n      const { topTokens } = payload\n      let added = {}\n      topTokens &&\n        topTokens.map((token) => {\n          return (added[token.id] = token)\n        })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_TOKEN_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_PRICE_DATA: {\n      const { address, data, timeWindow, interval } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [timeWindow]: {\n            ...state?.[address]?.[timeWindow],\n            [interval]: data,\n          },\n        },\n      }\n    }\n\n    case UPDATE_ALL_PAIRS: {\n      const { address, allPairs } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [TOKEN_PAIRS_KEY]: allPairs,\n        },\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((tokenAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        tokenAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopTokens = useCallback((topTokens) => {\n    dispatch({\n      type: UPDATE_TOP_TOKENS,\n      payload: {\n        topTokens,\n      },\n    })\n  }, [])\n\n  const updateTokenTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_TOKEN_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateAllPairs = useCallback((address, allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS,\n      payload: { address, allPairs },\n    })\n  }, [])\n\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\n    dispatch({\n      type: UPDATE_PRICE_DATA,\n      payload: { address, data, timeWindow, interval },\n    })\n  }, [])\n\n  return (\n    <TokenDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTokenTxns,\n            updateChartData,\n            updateTopTokens,\n            updateAllPairs,\n            updatePriceData,\n          },\n        ],\n        [state, update, updateTokenTxns, updateChartData, updateTopTokens, updateAllPairs, updatePriceData]\n      )}\n    >\n      {children}\n    </TokenDataContext.Provider>\n  )\n}\n\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  try {\n    let current = await client.query({\n      query: TOKENS_CURRENT,\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayResult = await client.query({\n      query: TOKENS_DYNAMIC(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let twoDayResult = await client.query({\n      query: TOKENS_DYNAMIC(twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let bulkResults = await Promise.all(\n      current &&\n        oneDayData &&\n        twoDayData &&\n        current?.data?.tokens.map(async (token) => {\n          let data = token\n\n          // let liquidityDataThisToken = liquidityData?.[token.id]\n          let oneDayHistory = oneDayData?.[token.id]\n          let twoDayHistory = twoDayData?.[token.id]\n\n          // catch the case where token wasnt in top list in previous days\n          if (!oneDayHistory) {\n            let oneDayResult = await client.query({\n              query: TOKEN_DATA(token.id, oneDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = oneDayResult.data.tokens[0]\n          }\n          if (!twoDayHistory) {\n            let twoDayResult = await client.query({\n              query: TOKEN_DATA(token.id, twoDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = twoDayResult.data.tokens[0]\n          }\n\n          // calculate percentage changes and daily changes\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n            data.tradeVolumeUSD,\n            oneDayHistory?.tradeVolumeUSD ?? 0,\n            twoDayHistory?.tradeVolumeUSD ?? 0\n          )\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\n            data.txCount,\n            oneDayHistory?.txCount ?? 0,\n            twoDayHistory?.txCount ?? 0\n          )\n\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\n\n          // percent changes\n          const priceChangeUSD = getPercentChange(\n            data?.derivedETH * ethPrice,\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\n          )\n\n          // set data\n          data.priceUSD = data?.derivedETH * ethPrice\n          data.totalLiquidityUSD = currentLiquidityUSD\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n          data.volumeChangeUSD = volumeChangeUSD\n          data.priceChangeUSD = priceChangeUSD\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n          data.oneDayTxns = oneDayTxns\n          data.txnChange = txnChange\n\n          // new tokens\n          if (!oneDayHistory && data) {\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n            data.oneDayTxns = data.txCount\n          }\n\n          // update name data for\n          updateNameData({\n            token0: data,\n          })\n\n          // HOTFIX for Aave\n          if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n            const aaveData = await client.query({\n              query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n              fetchPolicy: 'cache-first',\n            })\n            const result = aaveData.data.pairs[0]\n            data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n            data.liquidityChangeUSD = 0\n            data.priceChangeUSD = 0\n          }\n\n          return data\n        })\n    )\n\n    return bulkResults\n\n    // calculate percentage changes and daily changes\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  // initialize data arrays\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(address),\n      fetchPolicy: 'cache-first',\n    })\n    data = result?.data?.tokens?.[0]\n\n    // get results from 24 hours in past\n    let oneDayResult = await client.query({\n      query: TOKEN_DATA(address, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.tokens[0]\n\n    // get results from 48 hours in past\n    let twoDayResult = await client.query({\n      query: TOKEN_DATA(address, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.tokens[0]\n\n    // catch the case where token wasnt in top list in previous days\n    if (!oneDayData) {\n      let oneDayResult = await client.query({\n        query: TOKEN_DATA(address, oneDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      oneDayData = oneDayResult.data.tokens[0]\n    }\n    if (!twoDayData) {\n      let twoDayResult = await client.query({\n        query: TOKEN_DATA(address, twoDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      twoDayData = twoDayResult.data.tokens[0]\n    }\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n      data.tradeVolumeUSD,\n      oneDayData?.tradeVolumeUSD ?? 0,\n      twoDayData?.tradeVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\n      data.untrackedVolumeUSD,\n      oneDayData?.untrackedVolumeUSD ?? 0,\n      twoDayData?.untrackedVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\n      data.txCount,\n      oneDayData?.txCount ?? 0,\n      twoDayData?.txCount ?? 0\n    )\n\n    const priceChangeUSD = getPercentChange(\n      data?.derivedETH * ethPrice,\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\n    )\n\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\n\n    // set data\n    data.priceUSD = data?.derivedETH * ethPrice\n    data.totalLiquidityUSD = currentLiquidityUSD\n    data.oneDayVolumeUSD = oneDayVolumeUSD\n    data.volumeChangeUSD = volumeChangeUSD\n    data.priceChangeUSD = priceChangeUSD\n    data.oneDayVolumeUT = oneDayVolumeUT\n    data.volumeChangeUT = volumeChangeUT\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n    data.liquidityChangeUSD = liquidityChangeUSD\n    data.oneDayTxns = oneDayTxns\n    data.txnChange = txnChange\n\n    // new tokens\n    if (!oneDayData && data) {\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n      data.oneDayTxns = data.txCount\n    }\n\n    // update name data for\n    updateNameData({\n      token0: data,\n    })\n\n    // HOTFIX for Aave\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n      const aaveData = await client.query({\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n        fetchPolicy: 'cache-first',\n      })\n      const result = aaveData.data.pairs[0]\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n      data.liquidityChangeUSD = 0\n      data.priceChangeUSD = 0\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nconst getTokenTransactions = async (allPairsFormatted) => {\n  const transactions = {}\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: allPairsFormatted,\n      },\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n  return transactions\n}\n\nconst getTokenPairs = async (tokenAddress) => {\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(tokenAddress),\n      fetchPolicy: 'cache-first',\n    })\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\n  const utcEndTime = dayjs.utc()\n  let time = startTime\n\n  // create an array of hour start times until we reach current hour\n  // buffer by half hour to catch case where graph isnt synced to latest block\n  const timestamps = []\n  while (time < utcEndTime.unix()) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  // backout if invalid timestamp format\n  if (timestamps.length === 0) {\n    return []\n  }\n\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n  let blocks\n  try {\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      let derivedETH = parseFloat(result[row]?.derivedETH)\n      if (timestamp) {\n        values.push({\n          timestamp,\n          derivedETH,\n        })\n      }\n    }\n\n    // go through eth usd prices and assign to original values array\n    let index = 0\n    for (var brow in result) {\n      let timestamp = brow.split('b')[1]\n      if (timestamp) {\n        values[index].priceUSD = result[brow].ethPrice * values[index].derivedETH\n        index += 1\n      }\n    }\n\n    let formattedHistory = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistory.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].priceUSD),\n        close: parseFloat(values[i + 1].priceUSD),\n      })\n    }\n\n    return formattedHistory\n  } catch (e) {\n    console.log(e)\n    console.log('error fetching blocks')\n    return []\n  }\n}\n\nconst getTokenChartData = async (tokenAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year')\n  let startTime = utcStartTime.startOf('minute').unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: TOKEN_CHART,\n        variables: {\n          tokenAddr: tokenAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (result.data.tokenDayDatas.length < 1000) {\n        allFound = true\n      }\n      skip += 1000\n      data = data.concat(result.data.tokenDayDatas)\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n    })\n\n    // fill in empty days\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\n    let latestPriceUSD = data[0] && data[0].priceUSD\n    let latestPairDatas = data[0] && data[0].mostLiquidPairs\n    let index = 1\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\n      const nextDay = timestamp + oneDay\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\n      if (!dayIndexSet.has(currentDayIndex)) {\n        data.push({\n          date: nextDay,\n          dayString: nextDay,\n          dailyVolumeUSD: 0,\n          priceUSD: latestPriceUSD,\n          totalLiquidityUSD: latestLiquidityUSD,\n          mostLiquidPairs: latestPairDatas,\n        })\n      } else {\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n        latestPriceUSD = dayIndexArray[index].priceUSD\n        latestPairDatas = dayIndexArray[index].mostLiquidPairs\n        index = index + 1\n      }\n      timestamp = nextDay\n    }\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nexport function Updater() {\n  const [, { updateTopTokens }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs for overview list\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\n      topTokens && updateTopTokens(topTokens)\n    }\n    ethPrice && ethPriceOld && getData()\n  }, [ethPrice, ethPriceOld, updateTopTokens])\n  return null\n}\n\nexport function useTokenData(tokenAddress) {\n  const [state, { update }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  const tokenData = state?.[tokenAddress]\n\n  useEffect(() => {\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\n        update(tokenAddress, data)\n      })\n    }\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\n\n  return tokenData || {}\n}\n\nexport function useTokenTransactions(tokenAddress) {\n  const [state, { updateTokenTxns }] = useTokenDataContext()\n  const tokenTxns = state?.[tokenAddress]?.txns\n\n  const allPairsFormatted =\n    state[tokenAddress] &&\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\n      return pair.id\n    })\n\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!tokenTxns && allPairsFormatted) {\n        let transactions = await getTokenTransactions(allPairsFormatted)\n        updateTokenTxns(tokenAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\n\n  return tokenTxns || []\n}\n\nexport function useTokenPairs(tokenAddress) {\n  const [state, { updateAllPairs }] = useTokenDataContext()\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\n\n  useEffect(() => {\n    async function fetchData() {\n      let allPairs = await getTokenPairs(tokenAddress)\n      updateAllPairs(tokenAddress, allPairs)\n    }\n    if (!tokenPairs && isAddress(tokenAddress)) {\n      fetchData()\n    }\n  }, [tokenAddress, tokenPairs, updateAllPairs])\n\n  return tokenPairs || []\n}\n\nexport function useTokenChartData(tokenAddress) {\n  const [state, { updateChartData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.chartData\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getTokenChartData(tokenAddress)\n        updateChartData(tokenAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, tokenAddress, updateChartData])\n  return chartData\n}\n\n/**\n * get candlestick data for a token - saves in context based on the window and the\n * interval size\n * @param {*} tokenAddress\n * @param {*} timeWindow // a preset time window from constant - how far back to look\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\n */\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\n  const [state, { updatePriceData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\n      updatePriceData(tokenAddress, data, timeWindow, interval)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\n\n  return chartData\n}\n\nexport function useAllTokenData() {\n  const [state] = useTokenDataContext()\n  return state\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { useAllPairData, usePairData } from './PairData'\nimport { client, stakingClient } from '../apollo/client'\nimport {\n  USER_TRANSACTIONS,\n  USER_POSITIONS,\n  USER_HISTORY,\n  PAIR_DAY_DATA_BULK,\n  MINING_POSITIONS,\n} from '../apollo/queries'\nimport { useTimeframe, useStartTimestamp } from './Application'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useEthPrice } from './GlobalData'\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\nimport { timeframeOptions } from '../constants'\n\ndayjs.extend(utc)\n\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\n\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\nconst POSITIONS_KEY = 'POSITIONS_KEY'\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\n\nconst UserContext = createContext()\n\nfunction useUserContext() {\n  return useContext(UserContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_TRANSACTIONS: {\n      const { account, transactions } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [TRANSACTIONS_KEY]: transactions,\n        },\n      }\n    }\n    case UPDATE_POSITIONS: {\n      const { account, positions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\n      }\n    }\n    case UPDATE_MINING_POSITIONS: {\n      const { account, miningPositions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\n      }\n    }\n    case UPDATE_USER_POSITION_HISTORY: {\n      const { account, historyData } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\n      }\n    }\n\n    case UPDATE_USER_PAIR_RETURNS: {\n      const { account, pairAddress, data } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [USER_PAIR_RETURNS_KEY]: {\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\n            [pairAddress]: data,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n  const updateTransactions = useCallback((account, transactions) => {\n    dispatch({\n      type: UPDATE_TRANSACTIONS,\n      payload: {\n        account,\n        transactions,\n      },\n    })\n  }, [])\n\n  const updatePositions = useCallback((account, positions) => {\n    dispatch({\n      type: UPDATE_POSITIONS,\n      payload: {\n        account,\n        positions,\n      },\n    })\n  }, [])\n\n  const updateMiningPositions = useCallback((account, miningPositions) => {\n    dispatch({\n      type: UPDATE_MINING_POSITIONS,\n      payload: {\n        account,\n        miningPositions,\n      },\n    })\n  }, [])\n\n  const updateUserSnapshots = useCallback((account, historyData) => {\n    dispatch({\n      type: UPDATE_USER_POSITION_HISTORY,\n      payload: {\n        account,\n        historyData,\n      },\n    })\n  }, [])\n\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\n    dispatch({\n      type: UPDATE_USER_PAIR_RETURNS,\n      payload: {\n        account,\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\n        ],\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\n      )}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUserTransactions(account) {\n  const [state, { updateTransactions }] = useUserContext()\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_TRANSACTIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data) {\n          updateTransactions(account, result?.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!transactions && account) {\n      fetchData(account)\n    }\n  }, [account, transactions, updateTransactions])\n\n  return transactions || {}\n}\n\n/**\n * Store all the snapshots of liquidity activity for this account.\n * Each snapshot is a moment when an LP position was created or updated.\n * @param {*} account\n */\nexport function useUserSnapshots(account) {\n  const [state, { updateUserSnapshots }] = useUserContext()\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let skip = 0\n        let allResults = []\n        let found = false\n        while (!found) {\n          let result = await client.query({\n            query: USER_HISTORY,\n            variables: {\n              skip: skip,\n              user: account,\n            },\n            fetchPolicy: 'cache-first',\n          })\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\n            found = true\n          } else {\n            skip += 1000\n          }\n        }\n        if (allResults) {\n          updateUserSnapshots(account, allResults)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!snapshots && account) {\n      fetchData()\n    }\n  }, [account, snapshots, updateUserSnapshots])\n\n  return snapshots\n}\n\n/**\n * For a given position (data about holding) and user, get the chart\n * data for the fees and liquidity over time\n * @param {*} position\n * @param {*} account\n */\nexport function useUserPositionChart(position, account) {\n  const pairAddress = position?.pair?.id\n  const [state, { updateUserPairReturns }] = useUserContext()\n\n  // get oldest date of data to fetch\n  const startDateTimestamp = useStartTimestamp()\n\n  // get users adds and removes on this pair\n  const snapshots = useUserSnapshots(account)\n  const pairSnapshots =\n    snapshots &&\n    position &&\n    snapshots.filter((currentSnapshot) => {\n      return currentSnapshot.pair.id === position.pair.id\n    })\n\n  // get data needed for calculations\n  const currentPairData = usePairData(pairAddress)\n  const [currentETHPrice] = useEthPrice()\n\n  // formatetd array to return for chart data\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchedData = await getHistoricalPairReturns(\n        startDateTimestamp,\n        currentPairData,\n        pairSnapshots,\n        currentETHPrice\n      )\n      updateUserPairReturns(account, pairAddress, fetchedData)\n    }\n    if (\n      account &&\n      startDateTimestamp &&\n      pairSnapshots &&\n      !formattedHistory &&\n      currentPairData &&\n      Object.keys(currentPairData).length > 0 &&\n      pairAddress &&\n      currentETHPrice\n    ) {\n      fetchData()\n    }\n  }, [\n    account,\n    startDateTimestamp,\n    pairSnapshots,\n    formattedHistory,\n    pairAddress,\n    currentPairData,\n    currentETHPrice,\n    updateUserPairReturns,\n    position.pair.id,\n  ])\n\n  return formattedHistory\n}\n\n/**\n * For each day starting with min(first position timestamp, beginning of time window),\n * get total liquidity supplied by user in USD. Format in array with date timestamps\n * and usd liquidity value.\n */\nexport function useUserLiquidityChart(account) {\n  const history = useUserSnapshots(account)\n  // formatetd array to return for chart data\n  const [formattedHistory, setFormattedHistory] = useState()\n\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n  const [activeWindow] = useTimeframe()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    const utcEndTime = dayjs.utc()\n    // based on window, get starttime\n    let utcStartTime\n    switch (activeWindow) {\n      case timeframeOptions.WEEK:\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\n        break\n      case timeframeOptions.ALL_TIME:\n        utcStartTime = utcEndTime.subtract(1, 'year')\n        break\n      default:\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\n        break\n    }\n    let startTime = utcStartTime.unix() - 1\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\n      setStartDateTimestamp(startTime)\n    }\n  }, [activeWindow, startDateTimestamp])\n\n  useEffect(() => {\n    async function fetchData() {\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\n\n      // sort snapshots in order\n      let sortedPositions = history.sort((a, b) => {\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n      })\n      // if UI start time is > first position time - bump start index to this time\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\n      }\n\n      const dayTimestamps = []\n      // get date timestamps for all days in view\n      while (dayIndex < currentDayIndex) {\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\n        dayIndex = dayIndex + 1\n      }\n\n      const pairs = history.reduce((pairList, position) => {\n        return [...pairList, position.pair.id]\n      }, [])\n\n      // get all day datas where date is in this list, and pair is in pair list\n      let {\n        data: { pairDayDatas },\n      } = await client.query({\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\n      })\n\n      const formattedHistory = []\n\n      // map of current pair => ownership %\n      const ownershipPerPair = {}\n      for (const index in dayTimestamps) {\n        const dayTimestamp = dayTimestamps[index]\n        const timestampCeiling = dayTimestamp + 86400\n\n        // cycle through relevant positions and update ownership for any that we need to\n        const relevantPositions = history.filter((snapshot) => {\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n        })\n        for (const index in relevantPositions) {\n          const position = relevantPositions[index]\n          // case where pair not added yet\n          if (!ownershipPerPair[position.pair.id]) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n          // case where more recent timestamp is found for pair\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n        }\n\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\n          // find last day data after timestamp update\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\n            return dayData.pairAddress === pairAddress\n          })\n          // find the most recent reference to pair liquidity data\n          let mostRecent = dayDatasForThisPair[0]\n          for (const index in dayDatasForThisPair) {\n            const dayData = dayDatasForThisPair[index]\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\n              mostRecent = dayData\n            }\n          }\n          return mostRecent\n        })\n\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\n          if (dayData) {\n            return (totalUSD =\n              totalUSD +\n              (ownershipPerPair[dayData.pairAddress]\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\n                  parseFloat(dayData.reserveUSD)\n                : 0))\n          } else {\n            return totalUSD\n          }\n        }, 0)\n\n        formattedHistory.push({\n          date: dayTimestamp,\n          valueUSD: dailyUSD,\n        })\n      }\n\n      setFormattedHistory(formattedHistory)\n    }\n    if (history && startDateTimestamp && history.length > 0) {\n      fetchData()\n    }\n  }, [history, startDateTimestamp])\n\n  return formattedHistory\n}\n\nexport function useUserPositions(account) {\n  const [state, { updatePositions }] = useUserContext()\n  const positions = state?.[account]?.[POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n  const [ethPrice] = useEthPrice()\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_POSITIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data?.liquidityPositions) {\n          let formattedPositions = await Promise.all(\n            result?.data?.liquidityPositions.map(async (positionData) => {\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\n              return {\n                ...positionData,\n                ...returnData,\n              }\n            })\n          )\n          updatePositions(account, formattedPositions)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!positions && account && ethPrice && snapshots) {\n      fetchData(account)\n    }\n  }, [account, positions, updatePositions, ethPrice, snapshots])\n\n  return positions\n}\n\nexport function useMiningPositions(account) {\n  const [state, { updateMiningPositions }] = useUserContext()\n  const allPairData = useAllPairData()\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let miningPositionData = []\n        let result = await stakingClient.query({\n          query: MINING_POSITIONS(account),\n          fetchPolicy: 'no-cache',\n        })\n        if (!result?.data?.user?.miningPosition) {\n          return\n        }\n        miningPositionData = result.data.user.miningPosition\n        for (const miningPosition of miningPositionData) {\n          const pairAddress = miningPosition.miningPool.pair.id\n          miningPosition.pairData = allPairData[pairAddress]\n        }\n        updateMiningPositions(account, miningPositionData)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    if (!miningPositions && account && snapshots) {\n      fetchData(account)\n    }\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\n  return miningPositions\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Logo = () => {\n    return (\n      <div className=\"col-7 col-md-6 col-lg-2\">\n        <StyledLink to=\"/\"><img src=\"logo.png\" alt=\"Justswap\" /></StyledLink>\n      </div>\n    )\n}\n\nconst StyledNav = styled.nav`\n    position:relative;\n    .sub-trade{\n      display:none;\n      border-radius:3px;\n      padding-top:10px;\n      ul{\n        padding-left:0;\n        li{\n          margin-bottom:10px;\n          a{\n            text-decoration:none;\n          }\n        }\n      }\n    }\n    .paren_item{\n      position:relative;\n      cursor: inherit;\n    &:hover{\n      .sub-trade{\n          li{\n            list-style:none;\n            a{\n              font-size:14px;\n            }\n          }\n          background:#fff;\n          padding-left:0;\n          display:block;\n          position:absolute;\n          left:15px;\n          top:20px\n      }\n    }\n    }\n    display:none;\n    @media (min-width: 768px) {\n      display:block;\n    }\n`\n\n\n\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  max-width: 125px;\n  width: 100%;\n  transition: all 0.5s ease-in-out 0s;\n  outline: none;\n  text-decoration: none!important;\n  overflow: hidden;\n  float: left;\n\n  img{\n    width: 100%;\n    object-fit: cover;\n  }\n\n  &:hover {\n    \n  }\n  \n  @media (max-width: 576px) {\n    padding-left: 8px;\n    padding-right: 8px;\n    margin-left:25px;\n  }\n  \n`\n\nconst StyledAbsoluteLink = styled.a`\n  color: rgb(31, 199, 212);\n  font-weight: 700;\n  padding-left: 16px;\n  padding-right: 16px;\n  text-decoration: none;\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: green[500];\n  }\n  @media (max-width: 400px) {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n`\n\nexport default Logo","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst ListIcon = () => {\n    return (\n      <BoxIcon className=\"hide_pc\">\n        <a target=\"_blank\" href=\"https://juiceswap.finance/\"><i class=\"fa fa-home\"></i></a>\n        <a target=\"_blank\" ><i class=\"fa fa-twitter\"></i></a>\n        <a target=\"_blank\"><i class=\"fa fa-github\"></i></a>\n    </BoxIcon>\n    )\n}\n\n\n\nconst BoxIcon = styled.div`\n  max-width: 100px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  i{\n    font-size:20px;\n    color: #696868;\n    transition: ease-in-out .5s all;\n\n    &:hover{\n      transform: scale(1.3);\n    }\n\n  }\n\n  @media(max-width:576px){\n    display:none;\n  }\n\n\n`\n\n\n\n\n\n\nexport default ListIcon","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst Search = () => {\n    return (\n      <GroupNav>\n      <SearchPage>\n            <form className=\"search-fr\" method=\"GET\" action=\"\">\n              <button type=\"submit\">\n                <span className=\"fa fa-search\" />\n              </button>\n              <input required id=\"search\" type=\"text\" name=\"q\"  className=\"input-text\" maxLength={128} />\n            </form>\n      </SearchPage>\n    </GroupNav>\n    )\n}\n\nconst GroupNav = styled.div`\n  max-width: 245px;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst SearchPage = styled.div`\n  position:relative;\n  form{\n    position:relative;\n    display: flex;\n    button{\n      border: none;\n      background: transparent;\n      color: #7b7b7b;\n      outline: none;\n      @media screen and (max-width: 576px){\n        position: absolute;\n        font-size: 12px;\n        top: 2px;\n    }\n      }\n      \n    input{\n      border: none;\n      outline: none;\n      border-radius:25px;\n      padding-left:20px;\n      font-size:13px;\n      padding:3px 0 3px 20px;\n      width: 100%;\n    }\n  }\n`\n\n\nconst LinkParen = styled.a`\n  color: #99378E;\n  font-weight: 700;\n  padding-left: 16px;\n  padding-right: 16px;\n  text-decoration: none!important;\n  .down-menu{\n    font-size:12px;\n  }\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: #000;\n  }\n  \n`\n\n\n\nconst StyledLink = styled(NavLink)`\n  color: #99378E;\n  font-weight: 700;\n  padding-left: 16px;\n  padding-right: 16px;\n  text-decoration: none!important;\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: #000;\n  }\n  @media (max-width: 400px) {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n  \n`\n\nconst StyledAbsoluteLink = styled.a`\n  color: rgb(31, 199, 212);\n  font-weight: 700;\n  padding-left: 16px;\n  padding-right: 16px;\n  text-decoration: none;\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: green[500];\n  }\n  @media (max-width: 400px) {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n`\n\nexport default Search","import React, { useState, useEffect, } from \"react\";\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport {supportArray} from './Array'\n\nconst Nav = () => {\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if  ( (window.scrollY > 72)){\n        document.body.classList.add(\"fix\");\n      }\n      else{\n        document.body.classList.remove(\"fix\");\n      }\n    });\n    }, []);\n\n    const [isActive, setActive] = useState(false);\n    const [isActives, setActives] = useState(false);\n\n    const [isExchang1, setExchang1] = useState(false);\n    const [isExchang2, setExchang2] = useState(false);\n\n    const [isFarming1, setFarming1] = useState(false);\n    const [isFarming2, setFarming2] = useState(false);\n    const [isFarming3, setFarming3] = useState(false);\n    \n    \n\n    // const handleToggle = (id) => {\n    //   supportArray.find(id).document.\n    // };\n    const handleToggle = (id) => {\n      if ( !document.getElementById(id).classList.contains('dark-mode')){\n          document.getElementById(id).classList.add(\"dark-mode\");\n      }else{\n        document.getElementById(id).classList.remove(\"dark-mode\");\n      }\n    };\n\n    return (\n      <BoxSidebar>\n        <ul className=\"sidebar-top\">\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/\"\n          >\n            <img className=\"thum-nav\" src=\"mf.png\" alt=\"Juiceswap\" />Welcome to JuiceSwap\n          </StyledLink>\n          {/* <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/migrating\"\n          >\n            <img className=\"thum-nav\" src=\"mt.png\" alt=\"Juiceswap\" />Migrating JuiceSwap v2 LP tokens\n          </StyledLink> */}\n        \n          {/* <BlankLink href=\"https://devhub.juiceswap.finance\" target=\"_blank\">\n            <img className=\"thum-nav\" src=\"bdd.png\" alt=\"Juiceswap\" />Dev Docs\n          </BlankLink> */}\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/faq\"\n          >\n            <img className=\"thum-nav\" src=\"que.png\" alt=\"Juiceswap\" />FAQ\n          </StyledLink>\n        </ul>\n        <ul className=\"sidebar-middle\">\n          <TitleSide>PRODUCTS</TitleSide>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/amm-exchange\"\n          >\n            <div className=\"box-childpage\">\n              <span className=\"box-title\" onClick={() => setActive(true)}>\n              <img className=\"thum-nav\" src=\"amm.png\" alt=\"Juiceswap\" />AMM / Exchange\n              </span>\n              <span\n                className={isActive ? \"ic-rote\" : \"ic-right\"}\n                onClick={() => setActive(!isActive)}\n              >\n                <i class=\"fa fa-angle-right\"></i>\n              </span>\n            </div>\n            <div className={`${isActive ? \"sub-menu-show\" : \"sub-menu-bar\"}`}>\n              <ul>\n                {/* <li> */}\n                  {/* <StyledLink to=\"/amm-exchange/swapping\">\n                    <div className=\"box-childpage\">\n                      <span\n                        className=\"box-title\"\n                        onClick={() => setExchang1(true)}\n                      >\n                        Swapping\n                      </span>\n                      <span\n                        className={isExchang1 ? \"ic-rote\" : \"ic-right\"}\n                        onClick={() => setExchang1(!isExchang1)}\n                      >\n                        <i class=\"fa fa-angle-right\"></i>\n                      </span>\n                    </div>\n                  </StyledLink> */}\n                  {/* <div  className={`${isExchang1 ? \"sub-menu-show\" : \"sub-menu-bar\"}`}>\n                    <ul>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/swapping/juiceswap\">\n                          juiceswap\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/swapping/lite.juiceswap\">\n                          lite.juiceswap\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/swapping/how-to-swap-tokens\">\n                          juiceswapclassic.org\n                        </StyledLink>\n                      </li>\n                    </ul>\n                  </div> */}\n                {/* </li>\n                <li> */}\n                  {/* <StyledLink to=\"/amm-exchange/liquidity-pools\">\n                    \n                    <div className=\"box-childpage\">\n                      <span\n                        className=\"box-title\"\n                        onClick={() => setExchang2(true)}\n                      >\n                        Liquidity Pools\n                      </span>\n                      <span\n                        className={isExchang2 ? \"ic-rote\" : \"ic-right\"}\n                        onClick={() => setExchang2(!isExchang2)}\n                      >\n                        <i class=\"fa fa-angle-right\"></i>\n                      </span>\n                    </div>\n                  </StyledLink> */}\n                  {/* <div className={`${isExchang2 ? \"sub-menu-show\" : \"sub-menu-bar\"}`}>\n                    <ul>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/liquidity-pools/juiceswap\">\n                          juiceswap\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/liquidity-pools/lite.juiceswap\">\n                          lite.juiceswap\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink to=\"/amm-exchange/liquidity-pools/juiceswapclassic.org\">\n                          juiceswapclassic.org\n                        </StyledLink>\n                      </li>\n                    </ul>\n                  </div> */}\n                {/* </li> */}\n                {/* <li>\n                  <StyledLink to=\"/amm-exchange/impermanent-loss\">\n                    Impermanent loss\n                  </StyledLink>\n                </li> */}\n              </ul>\n            </div>\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/product-pools\"\n          >\n            <img className=\"thum-nav\" src=\"juspool.png\" alt=\"Juiceswap\" />JuiceSwap Pools\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/yield-farming\"\n          >\n            <div className=\"box-childpage\">\n              <span className=\"box-title\" onClick={() => setActives(true)}>\n              <img className=\"thum-nav\" src=\"yp.png\" alt=\"Juiceswap\" />Yield Farming\n              </span>\n              <span\n                className={isActives ? \"ic-rote\" : \"ic-right\"}\n                onClick={() => setActives(!isActives)}\n              >\n                <i class=\"fa fa-angle-right\"></i>\n              </span>\n            </div>\n       \n          </StyledLink>\n          {/* <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/lending-bentobox\"\n          >\n            <img className=\"thum-nav\" src=\"ldd.png\" alt=\"Juiceswap\" />Lending (BentoBox)\n          </StyledLink> */}\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/product-staking\"\n          >\n            <img className=\"thum-nav\" src=\"jusstaking.png\" alt=\"Juiceswap\" />JuiceSwap Staking\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/reclamation\"\n          >\n            <img className=\"thum-nav\" src=\"ic-rec.png\" alt=\"Juiceswap\" />Reclamation\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/about-nfts\"\n          >\n            <img className=\"thum-nav\" src=\"ord.png\" alt=\"Juiceswap\" />NFTs\n          </StyledLink>\n        </ul>\n        <ul className=\"sidebar-middle\">\n          <TitleSide>The Nominations</TitleSide>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/the-basics\"\n          >\n            <img className=\"thum-nav\" src=\"bss.png\" alt=\"Juiceswap\" />The Basics\n          </StyledLink>\n        </ul>\n        <ul className=\"sidebar-middle\">\n          <TitleSide>Guides</TitleSide>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/how-to-add-tokens-to-juiceswap-exchange\"\n          >\n              <img className=\"thum-nav\" src=\"tktoken.png\" alt=\"Juiceswap\" /> How to add tokens to JuiceSwap Exchange\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/how-to-farm-with-juiceswap-tokens\"\n          >\n              <img className=\"thum-nav\" src=\"tkfarm.png\" alt=\"Juiceswap\" /> How to Farm with Juiceswap Tokens\n          </StyledLink>\n          {/* <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/how-to-stake-juiceswap-for-xjuiceswap\"\n          >\n              <img className=\"thum-nav\" src=\"tkstak.png\" alt=\"Juiceswap\" /> How to Stake Juiceswap for xJuiceswap\n          </StyledLink> */}\n        </ul>\n        <ul className=\"sidebar-middle\">\n          <TitleSide>Governance</TitleSide>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/current-governance-mdoel\"\n          >\n            <img className=\"thum-nav\" src=\"crr.png\" alt=\"Juiceswap\" />Current governance model\n          </StyledLink>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/proposals-and-voting\"\n          >\n            <img className=\"thum-nav\" src=\"pross.png\" alt=\"Juiceswap\" /> Proposals &amp; voting\n          </StyledLink>\n        </ul>\n        <ul className=\"sidebar-middle\">\n          <TitleSide>Ecosystem</TitleSide>\n          <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/all-official-juiceswap-links\"\n          >\n            <img className=\"thum-nav\" src=\"ll.png\" alt=\"Juiceswap\" />Official JuiceSwap links\n          </StyledLink>\n          {/* <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/how-to-build-on-Juiceswap\"\n          >\n            <img className=\"thum-nav\" src=\"bbd.png\" alt=\"Juiceswap\" />Build on JuiceSwap\n          </StyledLink> */}\n          {/* <StyledLink\n            className=\"link-mode\"\n            exact\n            activeClassName=\"active\"\n            to=\"/presskit-and-branding-assets\"\n          >\n             <img className=\"thum-nav\" src=\"cp.png\" alt=\"Juiceswap\" />Presskit &amp; Branding Assets\n          </StyledLink> */}\n        </ul>\n      </BoxSidebar>\n    );\n}\n\n\n\n\nconst BoxSidebar = styled.div`\n    position:relative;\n\n    .sidebar-middle{\n      margin-bottom: 30px;\n    }\n\n    @media(min-width:1600px){\n    }\n\n    @media(max-width:1025px){\n    }\n  \n`\n\nconst LinkParen = styled.a`\n  text-decoration: none;\n  font-size: 13px;\n  font-weight: 500;\n  color: #696868;\n  margin-bottom: 7px;\n  display: block;\n  padding: 5px 0;\n  .down-menu{\n    font-size:12px;\n  }\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: #000;\n  }\n  \n`\n\n\nconst TitleSide = styled.h3`\n  font-size: 16px;\n  color: #696868;\n  font-weight: bold;\n  margin-bottom: 10px;\n  \n`\n\nconst BlankLink = styled.a`\n  text-decoration: none!important;\n  font-size: 13px;\n  font-weight: 500;\n  color: #696868;\n  margin-bottom: 7px;\n  position:relative;\n  display: block;\n  padding: 5px 0;\n  \n  .thum-nav{\n    max-width:18px;\n    width:100%;\n    margin-right:5px;\n    margin-top:-5px;\n  }\n`\n\n\nconst StyledLink = styled(NavLink)`\n  .box-childpage{\n    display: flex;\n    .box-title{\n      width: 90%;\n    }\n  }\n  &.no-mp{\n    padding: 0;\n    margin: 0;\n  }\n\n  text-decoration: none!important;\n  font-size: 13px;\n  font-weight: 500;\n  color: #696868;\n  margin-bottom: 7px;\n  position:relative;\n  // z-index: 5;\n  display: block;\n  padding: 5px 0;\n  // span{\n  //   z-index: 10;\n  // }\n  &:hover {\n    color: #805e49;\n  }\n  &.active {\n    color: #99378E;\n    font-weight:bold;\n  }\n  @media (max-width: 400px) {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n  .sub-menu-bar{\n    display:none;\n  }\n  .ic-right{\n    width:25px;\n    height:25px;\n    color:#000;\n    // float:right;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n  }\n  .ic-rote{\n    width:25px;\n    height:25px;\n    color:#000;\n    // float:right;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n    i{\n      transition:ease-in-out .5s all;\n      transform: rotate(-90deg);\n    }\n  }\n\n  .thum-nav{\n    max-width:18px;\n    width:100%;\n    margin-right:5px;\n    margin-top:-5px;\n  }\n`\n\n\n\nexport default Nav","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ListIcon from \"../Header/components/ListIcon\";\nimport Nav from \"../SideBar/components/Nav\";\n\n\nconst ButtonMenu = ({ status, onClose }) => {\n\n  return (\n    <StyledBlock>\n      <StyledCard className={`${status ? \"active\" : \"\"}`}>\n        <StyledHover className=\"topRight\" onClick={onClose}>\n          <svg\n            viewBox=\"0 0 24 24\"\n            color=\"text\"\n            width=\"20px\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"sc-hBEYos ivTGBL\"\n          >\n            <path d=\"M18.3 5.70997C17.91 5.31997 17.28 5.31997 16.89 5.70997L12 10.59L7.10997 5.69997C6.71997 5.30997 6.08997 5.30997 5.69997 5.69997C5.30997 6.08997 5.30997 6.71997 5.69997 7.10997L10.59 12L5.69997 16.89C5.30997 17.28 5.30997 17.91 5.69997 18.3C6.08997 18.69 6.71997 18.69 7.10997 18.3L12 13.41L16.89 18.3C17.28 18.69 17.91 18.69 18.3 18.3C18.69 17.91 18.69 17.28 18.3 16.89L13.41 12L18.3 7.10997C18.68 6.72997 18.68 6.08997 18.3 5.70997Z\"></path>\n          </svg>\n        </StyledHover>\n        <StyledMainNav>\n          <Nav/>\n          <ListIcon/>\n        </StyledMainNav>\n      </StyledCard>\n      <StyledBg onClick={onClose} className={`${status ? \"display\" : \"\"}`} />\n    </StyledBlock>\n  );\n};\n\n\nconst StyledMainNav = styled.div`\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    flex-direction: column;\n    order: 2;\n    margin-bottom: 32px;\n    height: 100%;\n    overflow-y: scroll;\n    .link{\n      cursor: pointer;\n      display: flex;\n      -webkit-box-align: center;\n      align-items: center;\n      width: 100%;\n      min-height: 40px;\n      padding: 8px 40px;\n      font-weight: 700;\n      transition: background-color 0.2s ease 0s;\n      color: #99378E;\n    }\n    .link:hover {\n      background-color: rgb(238, 234, 244);\n      text-decoration: unset;\n      \n    }\n\n    @media (max-width:576px){\n      .hide_pc{\n        display:block;\n        \n        i{\n          margin-right:10px;\n        }\n\n      }\n    }\n`;\n\nconst StyledBlock = styled.div``;\n\nconst StyledHover = styled.div`\n\n  &.fill{\n    svg{\n      fill: rgb(31, 199, 212);\n    }\n   \n  }\n\n  &.topRight{\n    position: absolute;\n    top: 5px;\n    right: 5px;\n  }\n\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: transparent;\n  border: 0px;\n  border-radius: 16px;\n  box-shadow: none;\n  color: rgb(31, 199, 212);\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  width: max-content;\n  height: 32px;\n  line-height: 1;\n  letter-spacing: 0.03em;\n  -webkit-box-pack: center;\n  justify-content: center;\n  outline: 0px;\n  padding: 0px 16px;\n  transition: background-color 0.2s ease 0s;\n\n  padding: 0px 8px;\n  border-radius: 8px;\n\n  svg {\n    fill: rgb(69, 42, 122);\n  }\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: rgb(239, 244, 245);\n    border-color: currentcolor;\n  }\n`;\n\nconst StyledBg = styled.div`\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(24, 48, 85, 0.3);\n  transition: opacity 0.4s ease 0s;\n  opacity: 0.6;\n  pointer-events: initial;\n  display: none;\n  z-index: 99;\n  &.display {\n    display: unset;\n  }\n`;\n\nconst StyledCard = styled.div`\nposition: fixed;\ndisplay: flex;\nflex-direction: column;\nbackground-color: rgb(255, 255, 255);\ntop: 0px;\nleft: -100%;\nwidth: 100%;\nmax-width: 320px;\nheight: 100vh;\npadding: 45px 0px;\noverflow-y: auto;\ntransition: right 0.4s ease 0s;\nz-index: 999;\n&.active{\n  left: 0px;\n}\n  .nav-ct{\n    display: flex;\n    -webkit-box-align: center;\n    align-items: center;\n    flex-direction: column;\n    order: 2;\n    margin-bottom: 32px;\n    \n  }\n  button{\n   \n    i {\n      width: auto;\n      height: auto;\n      border: none;\n    }\n    i:after{\n      content: \"\";\n      display: block;\n      margin: auto;\n      width: 17px;\n      border-bottom: solid 2px #ffe630;\n      transform: rotate(-45deg);\n      margin-top: -2px;\n    }\n    i:before{\n      content: \"\";\n      display: block;\n      margin: auto;\n      width: 17px;\n      border-bottom: solid 2px #ffe630;\n      transform: rotate(45deg);\n    }\n    .m-nav .main-nav > ul > li > a {\n      display: block;\n      font-weight: normal;\n      border: none;\n      border-top: solid 1px #e6e6e6;\n      line-height: 20px;\n      padding: 10px 15px 10px 15px;\n      color: rgb(31, 199, 212);\n      margin: 0px;\n      text-transform: none;\n  }\n`;\n\nexport default ButtonMenu;\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n// import Nav from './components/Nav'\nimport Logo from './components/Logo'\nimport ListIcon from './components/ListIcon'\nimport Search from './components/Search'\nimport ButtonMenu from '../ButtonMenu'\n\n\n\n\nconst Header = () => {\n  const [Status, setStatus] = useState(false);\n\n    return (\n      <StyleHeader>\n        <HeaderTop>\n          <svg\n            onClick={() => setStatus(true)}\n            preserveAspectRatio=\"xMidYMid meet\"\n            height=\"1em\"\n            width=\"1em\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke=\"currentColor\"\n            class=\"icon-7f6730be--text-3f89f380--icon-1f8349b3\"\n          >\n            <g>\n              <line x1=\"3\" y1=\"12\" x2=\"21\" y2=\"12\"></line>\n              <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\n              <line x1=\"3\" y1=\"18\" x2=\"21\" y2=\"18\"></line>\n            </g>\n          </svg>\n          <div className=\"container inner\">\n            <div className=\"row\">\n              <Logo />\n              <div className=\"col-5 col-md-6 col-lg-10\">\n                <HeaderItem>\n                  <Search />\n                  <ListIcon/>\n                </HeaderItem>\n              </div>\n            </div>\n          </div>\n        </HeaderTop>\n        <StyledButtonMenu className={`${Status ? \"active\" : \"\"}`}>\n          <ButtonMenu onClose={() => setStatus(false)} status={Status} />\n        </StyledButtonMenu>\n      </StyleHeader>\n    );\n}\nconst StyledButtonMenu = styled.div`\n  opacity: 1;\n  transition: ease-in-out .5s all;\n  &.active{\n    opacity: 1;\n  }\n`\n\nconst StyleHeader = styled.header`\n  position: fixed;\n  width:100%;\n  z-index:99;\n  top:0;\n  left:0;\n  box-shadow: rgba(116, 129, 141, 0.1) 0px 3px 8px 0px;\n  background-color: rgb(255, 255, 255);\n  border-bottom: 1px solid rgb(212, 218, 223);\n  padding:10px 0;\n  background: radial-gradient(circle,rgba(191,233,239,1) 0%,rgba(255,255,255,1) 100%);\n\n  .inner{\n    @media(min-width:1200px){\n      max-width: 1440px;\n    }\n    @media(min-width:1500px){\n      max-width: 1920px;\n    }\n  }\n`\n\nconst HeaderItem = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n`\n\nconst HeaderTop = styled.section`\n  position:relative;\n  svg{\n    position: absolute;\n    top: 50%;\n    left: 2%;\n    transform: translate(50%, -50%);\n    cursor: pointer;\n    z-index: 99;\n  }\n  @media screen and (min-width: 991px){\n    svg{\n      display:none;\n    }\n  }\n`\n\n\n\nexport default Header","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport ButtonMenu from '../ButtonMenu';\nimport Nav from './components/Nav'\n\nconst SideBar = () => {\n  \n\n    return (\n      <StyledSideBar >\n        <Nav />\n      </StyledSideBar>\n    );\n}\n\nconst StyledSideBar = styled.section`\n  display: none;\n  \n  @media screen and (min-width: 768px){\n    display: block;\n    overflow-y:auto;\n    height:95vh;\n   \n  }\n  ::-webkit-scrollbar{\n    width: 6px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background:#bdf4fd;\n    border-radius: 10px;\n  }\n\n`\n\nexport default SideBar","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst Title = ({ title , image}) => {\n  \n  return <ContentTitle className=\"title\">\n  <img className=\"thum-nav\" src={image}   alt=\"Justswap\" /> {title}\n  </ContentTitle>;\n};\n\nconst ContentTitle = styled.h3`\n    max-width: 600px;\n    margin-bottom: 25px;\n    font-size: 32px;\n    font-weight: bold;\n    width: 100%;\n    padding-bottom: 20px;\n    border-bottom: 2px solid #E6ECF1;\n    @media(max-width:770px){\n      font-size:24px;\n    }\n    img{\n      max-width:32px;\n      width: 100%;\n      margin-top:-7px;\n    }\n`;\n\nexport default Title;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Home = () => {\n  return (\n    <Box_home>\n            <Title image=\"mf.png\"  title=\"Welcome to JuiceSwap\"/>\n            <p>Automated market makers (AMMs) have become all the buzz, largely for replacing the traditional exchange-listing process and limit-order books with a permissionless liquidity pool run by algorithms.</p>\n            <p>Automated market makers are smart contracts that create a liquidity pool of ERC20 tokens, which are automatically traded by an algorithm rather than an order book. This effectively replaces a traditional limit order-book with a system where assets can be automatically swapped against the pool’s latest price.</p>\n            <p>JuiceSwap is an automated market-making (AMM) decentralized exchange (DEX) currently on the Ethereum blockchain. JuiceSwap is an Ethereum-based decentralized exchange that allows its users to both supply liquidity to earn passive income or exchange between various assets</p>\n            <p>There are a few core products of JuiceSwap's ecosystem:</p>\n            <ul className=\"linkpage\">\n              <li><a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">🔹 JuiceSwap Exchange</a></li>\n              <li><a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/add/ETH\">🔹 JuiceSwap Liquidity Pools</a></li>\n              <li><a target=\"_blank\" href=\"https://juiceswap.finance/Reclamation\">🔹 JuiceSwap Reclamation</a></li>\n              <li><a target=\"_blank\" href=\"https://juiceswap.finance/farms\">🔹 JuiceSwap Yield Farms</a></li>\n              <li><a target=\"_blank\" href=\"https://juiceswap.finance/Staking\">🔹 JuiceSwap Staking.</a></li>\n              <li><a target=\"_blank\" href=\"https://nfts.juiceswap.finance/\">🔹 JuiceSwap NFTs</a></li>\n            </ul>\n            <p><strong><img width=\"20\" src=\"./nw.svg\" alt=\"\"/> Community Networks</strong></p>\n            <ul>\n              <li>Website: <a target=\"_blank\" href=\"https://juiceswap.finance/\">https://juiceswap.finance/</a></li>\n              <li>Twitter: <a target=\"_blank\" href=\"https://twitter.com/Juice_Swap\">https://twitter.com/Juice_Swap</a> </li>\n              <li>Telegram Announcement: <a target=\"_blank\" href=\"https://t.me/JuiceSwap_Prot0col\">https://t.me/JuiceSwap_Prot0col</a></li>\n              <li>Telegram Discussion: <a target=\"_blank\" href=\"https://t.me/Juiceswap_Finance\">https://t.me/Juiceswap_Finance</a></li>\n              <li>Medium: <a target=\"_blank\" href=\"https://juiceswap.medium.com/\">https://juiceswap.medium.com/</a></li>\n              <li>Linkedin:<a target=\"_blank\" href=\"https://www.linkedin.com/company/juiceswap-finance/\">https://www.linkedin.com/company/juiceswap-finance/</a></li>\n            </ul>\n            {/* <p><strong>NETWORKS:</strong></p> */}\n           \n            <p><strong>🍓   Resource:</strong></p>\n            <ul>\n              <li><a target=\"_blank\" href=\"https://github.com/Juiceswap-defi\">https://github.com/Juiceswap-defi</a></li>\n              <li><a target=\"_blank\" href=\"https://github.com/Juiceswap-finance\">https://github.com/Juiceswap-finance</a></li>\n              {/* <li><a target=\"_blank\" href=\"https://github.com/LiamJohnson99\">https://github.com/LiamJohnson99</a></li>\n              <li><a target=\"_blank\" href=\"https://github.com/JosephMiller-Jus\">https://github.com/JosephMiller-Jus</a></li> */}\n            </ul>\n\n            {/* <BoxPagination>\n              <BoxButton className=\"next\">\n                  <StyledLink to=\"/migrating\">\n                      <span>Next</span>\n                      Migrating JuiceSwap v2 JLP tokens\n                  </StyledLink>\n                  <p><i class=\"fa fa-arrow-right\"></i></p>\n              </BoxButton>\n            </BoxPagination> */}\n  </Box_home>\n  )\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .linkpage{\n    padding-left:15px;\n    li{\n      list-style: none;\n    }\n  }\n`\nconst BoxPagination = styled.div`\n  display: flex;\n  margin-top: 25px;\n  width: 100%;\n  max-width:600px;\n  justify-content: space-between;\n`\n\nconst BoxButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 2px solid #E6ECF1;\n  box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);\n  border-radius: 3px;\n  background-color: #FFFFFF;\n  transition: ease-in-out .5s all;\n  cursor: pointer;\n  padding: 10px 25px;\n  max-width: 400px;\n  width: 100%;\n  p{\n    margin-bottom:0;\n    span{\n      display:block;\n    }\n  }\n  &:before,\n  &:after {\n    width: 0%;\n    height: 2px;\n    position: absolute;\n    background: #23d8f3;\n    transition: width .4s ease-in-out;\n    content: \" \";\n  }\n\n  &:before {\n    left: 0;\n    top: -2px;\n  }\n\n  &:after {\n    bottom: -2px;\n    right: 0;\n  }\n\n  &:hover {\n    opacity:.5;\n    border-color: #23d8f3;\n    color: #23d8f3;\n\n    &:before,\n    &:after {\n      width: 100%;\n    }\n  }\n`\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  height:100%;\n  display: block;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display: block;\n    width: 100%;\n    color: #c3c3c3;\n  }\n  &:hover {\n    color: #805e49;\n  }\n  \n`\nconst TitlePage = styled.h3`\n  max-width:${(props) => props.width};\n  margin-bottom:25px;\n  font-size:${(props) => props.size};\n  font-weight:bold;\n  width:100%;\n  padding-bottom:20px;\n  border-bottom: 2px solid #E6ECF1;\n`\n\nexport default Home\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {pagi} from '../../constants/index';\nimport { NavLink } from 'react-router-dom'\n\n\n\nconst Pagination = ({prev, next, linkprev, linknext}) => {\n\n    return (\n      <BoxPagination className=\"row\">\n        <BoxButton className=\"prev col-12 col-md-6\">\n          <p>\n            <i class=\"fa fa-arrow-left\"></i>\n          </p>\n          <StyledLink to={linkprev}>\n            <span>Prev</span>\n             {prev}\n          </StyledLink>\n        </BoxButton>\n        <BoxButton className=\"next col-12 col-md-6\">\n          <StyledLink to={linknext}>\n            <span>Next</span>\n             {next}\n          </StyledLink>\n          <p>\n            <i class=\"fa fa-arrow-right\"></i>\n          </p>\n        </BoxButton>\n      </BoxPagination>\n    );\n}\n\nconst BoxPagination = styled.div`\n  \n  display: flex;\n  margin-left: 0 !important;\n  margin-top: 25px;\n  width: 100%;\n  justify-content: space-between;\n  @media screen and (min-width: 768px){\n    max-width: 800px;\n    margin-left: 0 !important;\n  }\n`\n\nconst BoxButton = styled.div`\n  &.prev{\n    margin-bottom: 10px;\n    @media screen and (min-width: 768px){\n      margin: 0;\n      \n    }\n  }\n \n\n  @media screen and (min-width: 768px){\n    &.col-md-6{ \n      max-width: 49% !important;\n    }\n  }\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 2px solid #E6ECF1;\n  box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);\n  border-radius: 3px;\n  background-color: #FFFFFF;\n  transition: ease-in-out .5s all;\n  cursor: pointer;\n  padding: 10px 25px;\n\n  width: 100%;\n  p{\n    margin-bottom:0;\n    span{\n      display:block;\n    }\n  }\n  &:before,\n  &:after {\n    width: 0%;\n    height: 2px;\n    position: absolute;\n    background: #23d8f3;\n    transition: width .4s ease-in-out;\n    content: \" \";\n  }\n\n  &:before {\n    left: 0;\n    top: -2px;\n  }\n\n  &:after {\n    bottom: -2px;\n    right: 0;\n  }\n\n  &:hover {\n    opacity:.5;\n    border-color: #23d8f3;\n    color: #23d8f3;\n\n    &:before,\n    &:after {\n      width: 100%;\n    }\n  }\n  \n`;\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  text-align:center;\n  height:100%;\n  display: block;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display: block;\n    width: 100%;\n    color: #c3c3c3;\n  }\n  &:hover {\n    color: #805e49;\n  }\n`\n\n\nexport default Pagination","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Migrating = () => {\n  return (\n    <Box_home>\n          <Title image=\"mt.png\"  title=\"Migrating JuiceSwap v2 JLP tokens\"/>\n          <p>You can now easily migrate your liquidity from Uniswap to JuiceSwap with just a few clicks, in a gas efficient manner. </p>\n          <p>If you feel unsure, please ask in our Discord or read the smart contract code yourself should you be able to understand it!</p>\n          <p>We will have a video guide showcasing how it is done online on the evening of Monday, November 16.</p>\n          <Pagination\n            prev=\"Welcome to JuiceSwap\"\n            linkprev=\"/\"\n            next=\"FAQ\"\n            linknext=\"/faq\"\n          />\n  </Box_home>\n  )\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nconst BoxPagination = styled.div`\n  display: flex;\n  margin-top: 25px;\n  flex-wrap:wrap;\n  width: 100%;\n  max-width:600px;\n  justify-content: space-between;\n`\n\nconst BoxButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #E6ECF1;\n  box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);\n  border-radius: 3px;\n  background-color: #FFFFFF;\n  transition: ease-in-out .5s all;\n  cursor: pointer;\n  padding: 10px 25px;\n  max-width: 400px;\n  width: 100%;\n  margin-right:25px;\n  p{\n    margin-bottom:0;\n    span{\n      display:block;\n    }\n  }\n @media (max-width:576px) {\n   width:100%;\n   margin-right:0;\n   margin-bottom:25px;\n }\n`\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  height:100%;\n  display: flex;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display:block;\n  }\n  &:hover {\n    color: #805e49;\n  }\n  \n`\n\nexport default Migrating\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title';\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Faq = () => {\n  return (\n    <Box_home>\n      <Title image=\"que.png\"  title=\"FAQ\"/>\n      <p><strong>What is DeFi?</strong></p>\n      <p>DeFi is short for Decentralized Finance. Decentralized Finance includes digital assets, protocols,  smart contracts, and dApps built on a blockchain.</p>\n      <p><strong>What is a DeFi token?</strong></p>\n      <p>DeFi has created a suite of highly demanded tokens within the larger cryptocurrency ecosystem. With DeFi tokens outperforming BTC in 2020, the ecosystem is quickly turning towards popular protocol tokens as a means of value capture for DeFi’s growth.</p>\n      <p><strong>Are their risks for Defi?</strong></p>\n      <p>Securely handling cryptocurrencies and finance tools require specialized knowledge, Hence there is a risk factor involved. It is the user’s responsibility to keep their key and holdings secret, use a hardware wallet and multi-factor authentication.</p>\n      <p><strong>Why do we need DeFi?</strong></p>\n      <p>Crypto is just one of the components that enable Defi to provide transparent and more profitable financial products. On its own, cryptocurrency provides a medium for facilitating transactions without the hassles prevalent with traditional fiat currencies.</p>\n      <p><strong>Do I need to unstake and restake?</strong></p>\n      <p>If you were deposited before the migration then no.</p>\n      <p>If weren't part of juiceswap before the migration, then you'd need to redeem your Uniswap JLP tokens and come deposit them at <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a> to deposit.</p>\n      <p><strong>Do I need to approve JLP?</strong></p>\n      <p>Yes. JLP is our version of UNI-v2 LP tokens. They need to be approved to interact with the system.</p>\n      <p><strong>Why don't I see my tokens on <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a> after migrating?</strong> </p>\n      <p><a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a>, <a target=\"_blank\" href=\"https://juiceswap.finance/Staking\">https://juiceswap.finance/Staking</a>  are two different smart contracts.</p>\n      <p>The exchange.juiceswapclassic.org page looks for JLP tokens that are in your wallet (such as metamask) it cannot see what you have deposited into the farms on the /farms page. So it will show 0, but your LP tokens are still safe in that contract.</p>\n      <p><strong>What is xJuiceswap?</strong></p>\n      <p>xJuiceswap is what you get when you stake Juiceswap on the new juiceswapclassic.org/staking page - the xJuiceswap staked earns a reward fee of 0.05% of all trades.</p>\n      <p><strong>How are xJuiceswap rewards sent?</strong></p>\n      <p>When users make trades on the juiceswap Exchange a 0.3% fee is charged.</p>\n      <p>0.05% (1/6th of the fee) is added to the JuiceswapBar pool in the form of LP tokens for the relative pool.</p>\n      <p>When the rewards contract is called (minimum once per day) all the LP tokens are sold for Juiceswap (on juiceswap Exchange). The newly purchased Juiceswap is then divided up proportionally between the xJuiceswap holders in the pool, meaning their xJuiceswap is now worth more Juiceswap.</p>\n      <p>Currently you will not see the gained amount until you have withdrawn.</p>\n      <p>It started as 1 Juiceswap = 1 xJuiceswap, but just like LP tokens the price of xJuiceswap changes over time depend on how many Juiceswap rewards are in the pool.</p>\n      <p><strong>How do I get trade rewards?</strong></p>\n      <p>If you have LP tokens you automatically get 0.25% of all trades in your pool added back to that pool, so you get a proportional share.</p>\n      <p>If you have xJuiceswap staked then you continue to get 0.05% of all trade fees from all pools divided proportionally against your stake</p>\n      {/* <p><strong>When will we get the 2M migration airdrop?</strong></p>\n      <p>As soon as SBFs team is ready. They've had a LONG day with the migration and I assume have passed out right now. Let them sleep.</p>\n      <p><strong>What is the APR of the xJuiceswap token?</strong></p>\n      <p>No one knows, because it is based on fees and use.</p>\n      <p><strong>Do I continue to get new $Juiceswap rewards?</strong></p>\n      <p>Yes new $Juiceswap is issued every block for Juiceswap staked in the /farms</p>\n      <p><strong>Can I add new pairs to the default list on juiceswap?</strong></p>\n      <p>Yes you can add a new pair at the exchange.juiceswapclassic.org/#/pool <a href=\"\"></a> you will be eligible for the 0.25% trade fee on that pair, but it is not eligible to appear on the default list or for the Juiceswap rewards on juiceswapclassic.org/farms</p>\n      <p><strong>Are there plans to cap the $Juiceswap distribution, lower the emission, or add burning?</strong></p>\n      <p>Yes, all of those are being discussed and proposed.</p>\n      <p><strong>Did any pairs not migrate?</strong></p>\n      <p>Yes BASED is still using UNI-V2 tokens instead of JLP tokens due to the issues with their rebasing.</p>\n      <p><strong>I can't see my LP tokens showing up?</strong></p>\n      <p>Make sure to refresh your cache. There are lots of caching issues.</p>\n      <p><strong>Is juiceswap now the largest DEX by liquidity?</strong></p>\n      <p>Yes.</p>\n      <p><strong>Why juiceswapclassic.org?</strong></p>\n      <p>This was a backup with a temporary design. A new design is being built for juiceswap.org and will be live soon and that domain will be redirected.</p>\n      <p><strong>What is the purpose of $Juiceswap now?</strong></p>\n      <p>Now it can be used in yield farming on juiceswapclassic.org/farms or staked as xJuiceswap for trade fee rewards or used in governance voting or added as an LP on exchange.juiceswapclassic.org pools.</p> */}\n      {/* <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\n\nexport default Faq\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\nconst Builds = () => {\n  return (\n    <Box_home>\n      <Title image=\"bbd.png\"  title=\"Build on JuiceSwap\"/>\n      <p>\n        Anyone is welcome to build for and on the JuiceSwap platform. The smart\n        contracts can be interacted with by anyone on the blockchain. All of our\n        code is also open source and available at our Github.\n      </p>\n      <p>\n        We also have channels on our Discord server (#engineering) where you can\n        discuss development of both our official projects and community\n        projects.{\" \"}\n      </p>\n      <p>\n        Our Dev Docs can be found at{\" \"}\n        <a href=\"/\" className=\"link\">\n          https://dev.Juiceswap.fi.\n        </a>{\" \"}\n        Please note that the dev Gitbook is still being built and is incomplete.\n      </p>\n      <Pagination\n        prev=\"Official JuiceSwap links\"\n        next=\"Presskit & Branding Assets\"\n        linknext=\"/presskit-and-branding-assets\"\n        linkprev=\"/all-official-Juiceswap-links\"\n      />\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n  line-height: 1.625;\n\n  .unset{\n    font-weight: 400;\n  }\n  .line-height{\n    margin-bottom: 0;\n  }\n  \n  h3{\n    border-bottom: 2px solid #E6ECF1;\n    margin-bottom: 32px;\n    font-size: 32px;\n    line-height: 1.5;\n  }\n  p{\n    font-size: 16px;\n  }\n  .link{\n    color: rgb(234, 87, 164);\n    font-weight: 400;\n  }\n  .bold{\n    font-weight: 700;\n  }\n`\n\n\n\n\nexport default Builds\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Home = () => {\n  return (\n    <Box_home>\n      <Title image=\"pross.png\"  title=\"Proposals & voting\"/>\n      <p>\n        Any member of the community is welcome to post a proposal on our{\" \"}\n        <span className=\"link\">forums</span>, but please try and follow the set-out template that is shown when creating a thread, so that the proposals\n        can be easily read through by the prospective voters.\n      </p>\n      <p>\n        If you desire a poll added to your thread, please contact a member of\n        the core team or a community team member.\n      </p>\n      <p>\n        Your proposal can gain enough traction to be brought up for voting on\n        our Snapshot voting platform by the core team, where the community will\n        vote with <span className=\"bold\">JuicePOWAH</span> to decide the\n        outcome.{\" \"}\n      </p>\n      <p>\n        Our Snapshot voting platform can be found at{\" \"}\n        <a className=\"link\" href=\"/\">\n          https://snapshot.page/#/Juice\n        </a>{\" \"}\n        and you can also read our archived Snapshot (with older proposals) at{\" \"}\n        <a className=\"link\" href=\"/\">\n          {\" \"}\n          https://snapshot.page/#/Juicepowah\n        </a>\n      </p>\n      <p>\n        {\" \"}\n        <span className=\"bold\">JuicePOWAH</span> is our voting metric, and is\n        decided as follows:\n      </p>\n      <p className=\"line-height\">\n        Each Juice token held in the voters wallet is worth{\" \"}\n        <span className=\"bold\">1 JuicePOWAH</span>\n        <p className=\"line-height\">\n          Each Juice in the Juice-ETH pool is worth{\" \"}\n          <span className=\"bold\">2 JuicePOWAH</span>\n        </p>\n        <p className=\"\">\n          Each Juice held via xJuice tokens equal{\" \"}\n          <span className=\"bold\">3 JuicePOWAH</span>\n        </p>\n      </p>\n      <p>\n        For a vote to pass and become binding, it must gain a quorum of at least\n        5 million <span className=\"bold\">JuicePOWAH</span>\n      </p>\n\n      <p>\n        {\" \"}\n        <span className=\"bold\">Please note:</span> To be an eligible voter for\n        any proposal on our Snapshot, you must have\n        <span className=\"bold\"> JuicePOWAH </span>from any or all of the 3 above\n        options{\" \"}\n        <span className=\"bold\">at the time of the vote is started</span>.\n        This means that you cannot simply buy Juice tokens to vote on an already\n        ongoing vote, and is meant to reduce the risk of influence by whales and\n        flash loaders.\n      </p>\n      <Pagination\n        prev=\"Current governance model\"\n        next=\"Official JuiceSwap links\"\n        linknext=\"/all-official-Juiceswap-links\"\n        linkprev=\"/current-governance-mdoel\"\n      />\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n  line-height: 1.625;\n\n  .unset{\n    font-weight: 400;\n  }\n  .line-height{\n    margin-bottom: 0;\n  }\n  \n  h3{\n    border-bottom: 2px solid #E6ECF1;\n    margin-bottom: 32px;\n    font-size: 32px;\n    line-height: 1.5;\n  }\n  p{\n    font-size: 16px;\n  }\n  .link{\n    color: rgb(234, 87, 164);\n    font-weight: 400;\n  }\n  .bold{\n    font-weight: 700;\n  }\n`\n\n\n\nexport default Home\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination';\nimport Title from '../../components/Title';\n\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <Title image=\"cp.png\"  title=\"Presskit & Branding Assets\"/>\n      <Pagination \n        prev=\"Build on JuiceSwap\"\n        linkprev=\"/amm-exchange/swapping/lite.juiceswap.fi\"\n        next=\"Welcome to JuiceSwap\"\n        linknext=\"/\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Official = () => {\n  return (\n    <Box_home>\n      <Title image=\"ll.png\"  title=\"Official JuiceSwap links\"/>\n      <p>\n        JuiceSwap’s shiny new UI (recommended)\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juiceswap.fi/\n        </a>\n      </p>\n      <p>\n        JuiceSwap’s OG website (soon to be discontinued)\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juiceswapclassic.org/\n        </a>\n      </p>\n      <p>\n        JuiceSwap Lite\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://lite.Juiceswap.fi/\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        See which proposals are being discussed and contribute to the\n        conversation on JuiceSwap’s development and vision.\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://forum.Juiceswapclassic.org/\n        </a>\n      </p>\n      <p className=\"bold\">\n        Vote on key proposals\n        <br />\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://snapshot.page/#/Juice\n        </a>\n        <p className=\"unset\">\n          (Our old Snapshot is archived at{\" \"}\n          <a href=\"#\" className=\"link\">\n            https://snapshot.page/#/Juicepowah\n          </a>{\" \"}\n          )\n        </p>\n      </p>\n      <p className=\"bold line-height\">\n        Keep track of upcoming updates and features the core JuiceSwap team is\n        working on.\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://trello.com/b/ZpcRUpis/main-projects\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Track your accumulated xJuice, check the timelock and more\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://app.boring.finance/\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juiceview.vercel.app/timelock\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        For Juicebar APY\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juice.zippo.io/Juicebar\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Keep track of OmakaseBar’s UI developments\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://trello.com/b/qlCpmFz2/Juiceswap-frontend-bugs-enhancements{\" \"}\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://www.notion.so/Juiceswap-Shiny-Frontend-38629fec29bd41a3bbe0fa52d404c921\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Track JuiceSwap’s performance in the DEX space (TVL, Volume)\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://www.tokenterminal.com/{\" \"}\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juice.zippo.io/Juicebar\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Social Media\n        <br /> <p className=\"unset\">JuiceSwap Medium</p>{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://app.boring.finance/\n        </a>\n        <br /> <p className=\"unset\">JuiceSwap Twitter</p>{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://Juiceview.vercel.app/timelock\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Check how your portfolio is doing and manage your investments\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://zapper.fi/{\" \"}\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://debank.com/\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://apy.vision/{\" \"}\n        </a>\n        <p className=\"unset\"> (excellent tool to track impermanent loss)</p>\n      </p>\n      <p className=\"bold line-height\">\n        Track gas prices\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://ethgasstation.info/{\" \"}\n        </a>\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://www.gasnow.org/\n        </a>\n      </p>\n      <p className=\"bold line-height\">\n        Track history of transactions + more with nice UI\n        <br />{\" \"}\n        <a href=\"#\" className=\"link\">\n          {\" \"}\n          https://app.zerion.io/{\" \"}\n        </a>\n      </p>\n      <Pagination\n        prev=\"Proposals & voting\"\n        next=\"Build on JuiceSwap\"\n        linknext=\"/how-to-build-on-Justswap\"\n        linkprev=\"/proposals-and-voting\"\n      />\n    </Box_home>\n  );\n}\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n  line-height: 1.625;\n\n  .unset{\n    font-weight: 400;\n  }\n  \n  h3{\n    border-bottom: 2px solid #E6ECF1;\n    margin-bottom: 32px;\n    font-size: 32px;\n    line-height: 1.5;\n  }\n  p{\n    font-size: 16px;\n  }\n  .link{\n    color: rgb(234, 87, 164);\n    font-weight: 400;\n  }\n  .bold{\n    font-weight: 700;\n  }\n`\n\n\n\nexport default Official\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Pagination from '../../components/Pagination'\nimport Title from \"../../components/Title\";\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Governance = () => {\n  return (\n    <Box_home>\n      <Title image=\"crr.png\"  title=\"Current governance model\"/>\n      <p>\n        JuiceSwap is ultimately governed by its community, via forum discussions\n        and, when pertinent, voting on proposals held on the \n        <a href=\"#\" className=\"link\"> JuiceSwap Snapshot</a>. At this time, only\n        proposals posted to the Snapshot voting system by CORE can be considered\n        binding if passed with a quorum.\n      </p>\n      <p>\n        Major structural changes and use of the dev fund wallet are voted on by\n        the community, whereas smaller changes affecting operations, as well as\n        changes of JuiceSwap menu farming pairs. The mandate for this\n        comes from the following proposal:\n      </p>\n      <p><a href=\"#\" className=\"link\">\n        https://forum.Juiceswapclassic.org/t/governance-reorg-pre-proposal/28\n      </a></p>\n      <p>\n        Any use of the dev fund wallet requires that the{\" \"}\n        <span className=\"bold\">Multisig</span> sign it, which they will only do\n        if it is clear by the will of the community and has had a passing vote\n        by a quorum. There must be at least 6 out of 9 signatures for a\n        transaction to be approved.\n      </p>\n      <p>\n        The <span className=\"bold\">Multisig</span> members have trusted members\n        of the DeFi & Ethereum ecosystem:\n        <br /> @SBF_Alameda, @rleshner, @0xMaki, @lawmaster, @cmsholdings,\n        @mattysino, @mickhagen, @AdamScochran (to be replaced by JiroOno),\n        @zippoxe\n      </p>\n      <p>Any changes that are within the purview of the core team, such as rebalancing and administration of farming pools and use of the growth fund, must pass the <span className=\"bold\">Operations Multisig</span> with at least 3 signatures.</p>\n      <p>The <span className=\"bold\">Ops Multisig</span> members are: @0xMaki, @0xCTRL, @LevxApp, @OmakaseBar, @JiroOno\n(twitter handles)</p>\n      <p>Our goal is to establish a DAO, with working trustless governance. This is not an easy task by any measure and is not something that will be rushed. There are at this time no time estimates for when this can be accomplished, but it will surely take well into 2021.</p>\n      <p>All are welcome to discuss how the future DAO should work, as well as how the current governance model works, by participating in our <a href=\"#\" className=\"link\">forums</a> and in the #governance channel on our <a href=\"#\" className=\"link\">Discord</a> server.</p>\n      <Pagination\n        prev=\"The Basics\"\n        next=\"Proposals & voting\"\n        linknext=\"/proposals-and-voting\"\n        linkprev=\"/the-basics\"\n      />\n    </Box_home>\n  );\n};\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n  line-height: 1.625;\n\n  .unset {\n    font-weight: 400;\n  }\n  .line-height {\n    margin-bottom: 0;\n  }\n\n  h3 {\n    border-bottom: 2px solid #e6ecf1;\n    margin-bottom: 32px;\n    font-size: 32px;\n    line-height: 1.5;\n  }\n  p {\n    font-size: 16px;\n  }\n  .link {\n    color: rgb(234, 87, 164);\n    font-weight: 400;\n  }\n  .bold {\n    font-weight: 700;\n  }\n`;\n\nexport default Governance;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Pagination from '../../components/Pagination'\nimport Title from \"../../components/Title\";\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Home = () => {\n  return (\n    <Box_home>\n      <Title image=\"ldd.png\"  title=\"Lending (BentoBox)\"/>\n      <p>\n        Our most exciting upcoming product is the BentoBox, an advanced isolated\n        pair lending solution created by BoringCrypto. For an outline of the\n        product's premise, please read his article on Medium:\n        <a href=\"/\">\n          https://medium.com/@boringcrypto/the-bentobox-lending-solution-1351606b9f5a\n        </a>\n      </p>\n      <p>\n        We will expand this section with more information as well as detailed\n        tutorials when the product is due to be launched.{\" \"}\n      </p>\n      <Pagination\n        prev=\"juiceswapclassic.org\"\n        linkprev=\"/yield-farming/menu-of-the-week/juiceswapclassic.org\"\n        next=\"Limit Orders\"\n        linknext=\"/limit-orders\"\n      />\n    </Box_home>\n  );\n};\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport default Home;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Nfts = () => {\n  return (\n    <Box_home>\n      <Title image=\"ord.png\"  title=\"About NFTs\"/>\n      <p>These are the most common properties of NFTs, it is good to have them fresh in our minds in order to grasps what we can do with them and how they function:</p>\n      <p><strong>Unique</strong> — each NFT has different properties that are usually stored in the token’s metadata.</p>\n      <p><strong>Provably Scarce</strong> — there is usually a limited number of NFTs with an extreme example of having only 1 copy, the number of tokens can be verified on the blockchain, hence it’s provability.</p>\n      <p><strong>Indivisible</strong> — most NFTs cannot be split into smaller denominations, so you cannot buy or transfer a fraction of your NFT.</p>\n      <p><strong>How can NFTs be used in DeFi ?</strong></p>\n      <p>NFTs are being promoted as the next big thing in the Decentralised Finance world. NFTs attractive trait is that they can be used as collateral, NFTs may represent other type of financial products such as insurance, bonds or options. A DeFi lending and borrowing platform requires collaterals, this is were NFTs come in and solve that issue. JuiceSwap utilises NFTs in the insurance space, each contract is represented as an NFT which can then be traded on another marketplace</p>\n      \n      {/* <Pagination\n        prev=\"Lending (BentoBox)\"\n        linkprev=\"/lending-bentobox\"\n        next=\"The Basics\"\n        linknext=\"/the-basics\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n`\n\n\n\nexport default Nfts\n","import React from 'react'\nimport styled from 'styled-components'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Home = () => {\n  return (\n    <Box_home>\n            <Title image=\"bss.png\"  title=\"The Basics\"/>\n            <p>The tokenomics (JuiceNOMICS) can be broken down as follows</p>\n            <Pagination\n        prev=\"Limit Orders\"\n        linkprev=\"/limit-orders\"\n        next=\"Current governance model\"\n        linknext=\"/current-governance-mdoel\"\n      />\n  </Box_home>\n  )\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\n\nexport default Home\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Amm = () => {\n  return (\n    <Box_home>\n      <Title image=\"amm.png\"  title=\"AMM / Exchange\"/>\n      <p>Here are the articles in this section:</p>\n      <h3>Juiceswap Exchange:</h3>\n      <p>The Juiceswap exchange allows users to swap any ERC20 token into any other ERC20 token through automated liquidity pools.</p>\n      <ThumPage><img src=\"./exchange.png\" alt=\"\"/></ThumPage>\n      <p>The liquidity provided to the exchange comes from Liquidity Providers (\"LPs\") who stake their tokens in \"Pools.\" In return, they get SLP (Juiceswap Liquidity Provider) tokens, which can also be staked in the \"Farm.\"</p>\n      <p>When users make a trade on the exchange, they pay a 0.3% trade fee.</p>\n      <h3>0.25% fee reward for LPs:</h3>\n      <p>0.25% of this trading fee goes to the Liquidity Providers who provide liquidity for that pool. It is added to the pool balance.</p>\n      <p>If previously there were 100 SLP tokens representing 100 ETH and 100 SRM, each token would be worth 1 ETH & 1 SRM.</p>\n      <p>If one user trade 10 ETH for 10 SRM and another traded 10 SRM for 10 ETH, then there would now be 100.025 ETH and 100.025 SRM.</p>\n      <p>This means each LP token would be worth 1.00025 ETH and 1.00025 SRM now when it is withdrawn.</p>\n      <h3>0.05% fee reward for xJuiceswap holders:</h3>\n      <p>The remaining portion of the trade fee paid goes to a pool called JuiceswapBar. </p>\n      <p>The JuiceswapBar contract collects the fees from all the pools, and when the reward distribution command is called, it then sells all the fees turning them into Juiceswap (via Juiceswap)</p>\n      <p>That new Juiceswap is divided up among the users in the xJuiceswap pool. When those users withdraw their xJuiceswap, it will be worth more Juiceswap than when they put in from the distribution.</p>\n      <ListMenu>\n        <li>\n          <StyledLink to=\"/amm-exchange/swapping\">Swapping</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/amm-exchange/liquidity-pools\">\n            Liquidity Pools\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/amm-exchange/impermanent-loss\">\n            Impermanent loss\n          </StyledLink>\n        </li>\n      </ListMenu>\n      <Pagination\n        prev=\"FAQ\"\n        linkprev=\"/faq\"\n        next=\"Swapping\"\n        linknext=\"/amm-exchange/swapping\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst BoxPagination = styled.div`\n  display: flex;\n  margin-top: 25px;\n  width: 100%;\n  max-width:600px;\n  justify-content: space-between;\n`\n\nconst BoxButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #E6ECF1;\n  box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);\n  border-radius: 3px;\n  background-color: #FFFFFF;\n  transition: ease-in-out .5s all;\n  cursor: pointer;\n  padding: 10px 25px;\n  max-width: 400px;\n  width: 100%;\n  p{\n    margin-bottom:0;\n    span{\n      display:block;\n    }\n  }\n \n`\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nconst ThumPage = styled.p`\n  max-width: 500px;\n  width:100%;\n  overflow: hidden;\n  margin-left: 100px;\n\n  img{\n    width: 100%;\n    object-fit: cover;\n  }\n\n  @media (max-width:1025px){\n    margin: 0 auto;\n    \n  }\n  @media (max-width:576px){\n    margin: 0 auto;\n    margin-left: 0;\n  }\n`\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  height:100%;\n  display: flex;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display:block;\n  }\n  &:hover {\n    color: #805e49;\n  }\n \n  \n`\n\nconst ListMenu = styled.ul`\n  height: 200px;\n  margin-top:35px;\n  position: relative;\n  display:flex;\n  align-items:center;\n  flex-wrap:wrap;\n  width:100%;\n  padding-left:0;\n  max-width:600px;\n  justify-content: space-between;\n  li{\n    list-style: none;\n    height:45px;\n    width: 100%;\n    background: #fff;\n    text-align: center;\n    color: rgb(36, 42, 49);\n    border: 1px solid rgb(230, 236, 241);\n    margin-bottom: 25px;\n    box-shadow: rgba(116, 129, 141, 0.1) 0px 3px 8px 0px;\n    max-width: 285px;\n    transition:ease-in-out .3s all;\n    &:hover {\n    margin-top:-5px;\n    box-shadow: rgb(177 138 80 / 66%) 0px 3px 8px 0px;\n  }\n  }\n`\n\nconst TitlePage = styled.h3`\n  max-width:${(props) => props.width};\n  margin-bottom:25px;\n  font-size:${(props) => props.size};\n  font-weight:bold;\n  width:100%;\n  padding-bottom:20px;\n  border-bottom: 2px solid #E6ECF1;\n`\n\nexport default Amm\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport styled from 'styled-components'\n\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title'\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Yield = () => {\n  return (\n    <Box_home>\n      <Title image=\"yp.png\"  title=\"Yield Farming\"/>\n      <p>The Juiceswap Farms (Menu) are located here:</p>\n      <ul>\n        <li><a target=\"_blank\" href=\"https://juiceswap.finance/farms\">https://juiceswap.finance/farms</a></li>\n      </ul>\n      <p>The Farm allows users to yield farm Juiceswap rewards with each new block based on staking JLP tokens they received from exchange.Juiceswapclassic.org/#/pool. </p>\n      <p>The Farm previously supported UNI-V2 LP tokens from Uniswap, but it now only works with tokens from Juiceswap pools.</p>\n      <ReactFancyBox \n          thumbnail=\"./ya.png\"\n          image=\"./ya.png\"/>\n      <br/>\n      <p>Users enter into the farms of their choice.</p>\n      <p>When farming users will receive a new distribution of Juiceswap with every block. In the first two weeks of launch, the rewards were 1000 Juiceswap per block, divided by the proportional share of the pool.\nThe exception to this was the \"Juiceswap Party!\" pool which had an additional 2x bonus.</p>\n      <p>After the first two weeks, the reward is set to drop to 100 Juiceswap per block.</p>\n      <p>The APY calculation is based on the return in ETH to the daily USD value, based on the current block return annualized. It is not a fixed return, it is not a promised return, it is not financial advice. It is based on ETH returns.</p>\n      <p><strong>If I am deposited into the \"Farm\" it says I don't have liquidity on <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a> </strong></p>\n      <p>Correct. The <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a> page only scans your wallet for JLP tokens.</p>\n      <p>If you have deposited your JLP tokens into a farm (which is a separate contract) then the exchange will not see them.</p>\n      <p>However, you ARE still providing liquidity and will still get you a 0.25 JLP trade fee reward when withdrawing.</p>\n\n      <ListMenu>\n        <li>\n          <StyledLink to=\"/amm-exchange/swapping\">Swapping</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/amm-exchange/liquidity-pools\">\n            Liquidity Pools\n          </StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/amm-exchange/impermanent-loss\">\n            Impermanent loss\n          </StyledLink>\n        </li>\n       \n      </ListMenu>\n      <Pagination\n        prev=\"Impermanent loss\"\n        linkprev=\"/amm-exchange/impermanent-loss\"\n        next=\"The Juicebar\"\n        linknext=\"/yield-farming/the-juicebar\"\n      />\n    </Box_home>\n  );\n}\n\n\n\n\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  #thumpage{\n    cursor: pointer;\n  }\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    }  \n  }\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  height:100%;\n  display: flex;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display:block;\n  }\n  &:hover {\n    color: #805e49;\n  }\n \n  \n`\n\nconst ListMenu = styled.ul`\n  margin-top:35px;\n  position: relative;\n  display:flex;\n  align-items:center;\n  flex-wrap:wrap;\n  width:100%;\n  padding-left:0;\n  max-width:600px;\n  justify-content: space-between;\n  li{\n    list-style: none;\n    height:45px;\n    width: 100%;\n    background: #fff;\n    text-align: center;\n    color: rgb(36, 42, 49);\n    border: 1px solid rgb(230, 236, 241);\n    margin-bottom: 25px;\n    box-shadow: rgba(116, 129, 141, 0.1) 0px 3px 8px 0px;\n    max-width: 285px;\n    transition:ease-in-out .3s all;\n    &:hover {\n    margin-top:-5px;\n    box-shadow: rgb(177 138 80 / 66%) 0px 3px 8px 0px;\n  }\n  }\n`\n\nconst TitlePage = styled.h3`\n  max-width:${(props) => props.width};\n  margin-bottom:25px;\n  font-size:${(props) => props.size};\n  font-weight:bold;\n  width:100%;\n  padding-bottom:20px;\n  border-bottom: 2px solid #E6ECF1;\n`\n\nexport default Yield\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst TitleChild = ({ title}) => {\n  return <ContentTitle className=\"title\">{title}</ContentTitle>;\n};\n\nconst ContentTitle = styled.h3`\n    max-width: 600px;\n    margin-bottom: 25px;\n    font-size: 32px;\n    font-weight: bold;\n    width: 100%;\n    padding-bottom: 20px;\n    border-bottom: 2px solid #E6ECF1;\n    @media(max-width:770px){\n      font-size:24px;\n    }\n    img{\n      max-width:30px;\n      width: 100%;\n      margin-top:-7px;\n    }\n`;\n\nexport default TitleChild;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../components/Pagination'\nimport TitleChild from '../../../../components/TitleChild/TitleChild'\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Swapping = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"Swapping\"/>\n      <Pagination \n        prev=\"AMM / Exchange\"\n        linkprev=\"/amm-exchange\"\n        next=\"juiceswap\"\n        linknext=\"/amm-exchange/swapping/juiceswap\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst BoxPagination = styled.div`\n  display: flex;\n  margin-top: 25px;\n  width: 100%;\n  max-width:600px;\n  justify-content: space-between;\n`\n\nconst BoxButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid #E6ECF1;\n  box-shadow: 0 3px 8px 0 rgba(116, 129, 141, 0.1);\n  border-radius: 3px;\n  background-color: #FFFFFF;\n  transition: ease-in-out .5s all;\n  cursor: pointer;\n  padding: 10px 25px;\n  max-width: 400px;\n  width: 100%;\n  p{\n    margin-bottom:0;\n    span{\n      display:block;\n    }\n  }\n \n`\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n  padding: 45px 0;\n`\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none!important;\n  font-size: 14px;\n  font-weight: 500;\n  color: #000;\n  width:100%;\n  height:100%;\n  display: flex;\n  align-items:center;\n  justify-content:center;\n  transition:ease-in-out .5s all;\n  span{\n    display:block;\n  }\n  &:hover {\n    color: #805e49;\n  }\n \n  \n`\n\nconst ListMenu = styled.ul`\n  margin-top:35px;\n  position: relative;\n  display:flex;\n  align-items:center;\n  flex-wrap:wrap;\n  width:100%;\n  padding-left:0;\n  max-width:600px;\n  justify-content: space-between;\n  li{\n    list-style: none;\n    height:45px;\n    width: 100%;\n    background: #fff;\n    text-align: center;\n    color: rgb(36, 42, 49);\n    border: 1px solid rgb(230, 236, 241);\n    margin-bottom: 25px;\n    box-shadow: rgba(116, 129, 141, 0.1) 0px 3px 8px 0px;\n    max-width: 285px;\n    transition:ease-in-out .3s all;\n    &:hover {\n    margin-top:-5px;\n    box-shadow: rgb(177 138 80 / 66%) 0px 3px 8px 0px;\n  }\n  }\n`\n\nexport default Swapping\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../components/Pagination'\nimport TitleChild from '../../../components/TitleChild/TitleChild'\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Impermanent = () => {\n  return (\n    <Box_home>\n          <TitleChild title=\"Impermanent loss\"/>\n          <Pagination \n            prev=\"juiceswapclassic.org\"\n            linkprev=\"/amm-exchange/liquidity-pools/juiceswapclassic.org\"\n            next=\"Yield Farming\"\n            linknext=\"/yield-farming\"\n          />\n           \n  </Box_home>\n  )\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\n\nexport default Impermanent\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../components/Pagination'\nimport TitleChild from '../../../../components/TitleChild/TitleChild'\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Liquidity = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"Liquidity Pools\"/>\n      <Pagination\n        prev=\"juicewapclassic.org\"\n        linkprev=\"/amm-exchange/swapping/how-to-swap-tokens\"\n        next=\"juiceswap\"\n        linknext=\"/amm-exchange/liquidity-pools/juiceswap\"\n      />\n         \n  </Box_home>\n  )\n}\n\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nexport default Liquidity\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Nav from '../SideBar/components/Nav'\n\nconst Menu = () => {\n  \n\n    return (\n      <StyledMenu className=\"side-bar\">\n        <div className=\"z-index\">\n          <Nav />\n        </div>\n        <Bg />\n      </StyledMenu>\n    );\n}\n\n\nconst Bg = styled.div`\n    inset: 0px;\n    margin: 0px;\n    display: flex;\n    padding: 0px;\n    z-index: 29;\n    position: absolute;\n    align-items: center;\n    animation-name: keyframes-animation-2f81d449-0-1-4;\n    pointer-events: auto;\n    justify-content: center;\n    -webkit-box-pack: center;\n    background-color: rgba(24, 48, 85, 0.3);\n    -webkit-box-align: center;\n    transition: background-color 250ms ease-out 0s;\n    animation-duration: 0.2s;\n    animation-fill-mode: forwards;\n    animation-timing-function: ease-out;\n`\n\nconst StyledMenu = styled.section`\n  .z-index{\n      z-index: 30;\n      margin: 0;\n      display: block;\n      padding: 0;\n  }\n  \n`\n\nexport default Menu","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst JUSswap = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswap\"/>\n      <Pagination\n        prev=\"Swapping\"\n        linkprev=\"/amm-exchange/swapping\"\n        next=\"lite.juiceswap\"\n        linknext=\"/amm-exchange/swapping/lite.juiceswap\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default JUSswap\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswapclassic.org\"/>\n      <Pagination\n        prev=\"lite.juiceswap\"\n        linkprev=\"/amm-exchange/swapping/lite.juiceswap\"\n        next=\"Liquidity Pools\"\n        linknext=\"/amm-exchange/liquidity-pools\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Lite = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"lite.juiceswap\"/>\n      <Pagination\n        prev=\"juiceswap\"\n        linkprev=\"/amm-exchange/swapping/juiceswap\"\n        next=\"juiceswapclassic.org\"\n        linknext=\"/amm-exchange/swapping/how-to-swap-tokens\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Lite\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst JUSswap = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswap\"/>\n      <Pagination\n        prev=\"Liquidity Pools\"\n        linkprev=\"/amm-exchange/liquidity-pools\"\n        next=\"lite.juiceswap\"\n        linknext=\"/amm-exchange/liquidity-pools/lite.juiceswap\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default JUSswap\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswapclassic.org\"/>\n      <Pagination\n        prev=\"lite.juiceswap\"\n        linkprev=\"/amm-exchange/liquidity-pools/lite.juiceswap\"\n        next=\"Impermanent loss\"\n        linknext=\"/amm-exchange/impermanent-loss\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Lite = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"lite.juiceswap.fi\"/>\n      <Pagination\n        prev=\"juiceswap\"\n        linkprev=\"/amm-exchange/liquidity-pools/juiceswap\"\n        next=\"juiceswapclassic.org\"\n        linknext=\"/amm-exchange/liquidity-pools/juiceswapclassic.org\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Lite\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst JUSswap = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswap\"/>\n      <Pagination\n        prev=\"The Juicebar\"\n        linkprev=\"/yield-farming/the-juicebar\"\n        next=\"lite.juiceswap\"\n        linknext=\"/yield-farming/the-juicebar/lite.juiceswap\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default JUSswap\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswapclassic.org\"/>\n      <Pagination\n        prev=\"lite.juiceswap\"\n        linkprev=\"/yield-farming/the-juicebar/lite.juiceswap\"\n        next=\"The Juice Menu\"\n        linknext=\"/yield-farming/the-juice-menu\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Lite = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"lite.juiceswap\"/>\n      <Pagination\n        prev=\"juiceswap\"\n        linkprev=\"/yield-farming/the-juicebar/juiceswap\"\n        next=\"juiceswapclassic.org\"\n        linknext=\"/yield-farming/the-juicebar/juiceswapclassic.org\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Lite\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst JUSswap = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswap\"/>\n      <Pagination\n        prev=\"The Juice Menu\"\n        linkprev=\"/yield-farming/the-juice-menu\"\n        next=\"juiceswapclassic.org\"\n        linknext=\"/yield-farming/the-juice-menu/juiceswapclassic.org\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default JUSswap\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswapclassic.org\"/>\n      <Pagination\n        prev=\"juiceswap\"\n        linkprev=\"/yield-farming/the-juice-menu/juiceswap\"\n        next=\"Menu of the Week\"\n        linknext=\"/yield-farming/menu-of-the-week\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\n\nconst JUSswap = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswap\"/>\n      <Pagination\n        prev=\"Menu of the Week\"\n        linkprev=\"/yield-farming/menu-of-the-week\"\n        next=\"juiceswapclassic.org\"\n        linknext=\"/yield-farming/menu-of-the-week/juiceswapclassic.org\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default JUSswap\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../../components/Pagination'\nimport TitleChild from '../../../../../components/TitleChild'\n\n\nconst Classic = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"juiceswapclassic.org\"/>\n      <Pagination\n        prev=\"juiceswap\"\n        linkprev=\"/yield-farming/menu-of-the-week/juiceswap\"\n        next=\"🍱 Lending (BentoBox)\"\n        linknext=\"/lending-bentobox\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\nexport default Classic\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../components/Pagination'\nimport TitleChild from '../../../../components/TitleChild'\n\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst MenuWeek = () => {\n  return (\n    <Box_home>\n          <TitleChild title=\"Menu of the Week\"/>\n          <Pagination \n            prev=\"juiceswapclassic.orge\"\n            linkprev=\"/yield-farming/the-juice-menu/juiceswapclassic.org\"\n            next=\"juiceswap\"\n            linknext=\"/yield-farming/menu-of-the-week/juiceswap\"\n          />\n           \n  </Box_home>\n  )\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\n\n\nexport default MenuWeek\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../components/Pagination'\nimport TitleChild from '../../../../components/TitleChild'\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst TheJuiceBar = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"The Juicebar\"/>\n      <Pagination\n        prev=\"Yield Farming\"\n        linkprev=\"/yield-farming\"\n        next=\"juiceswap\"\n        linknext=\"/yield-farming/the-juicebar/juiceswap\"\n      />\n         \n  </Box_home>\n  )\n}\n\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n`\n\nexport default TheJuiceBar\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pagination from '../../../../components/Pagination'\nimport TitleChild from '../../../../components/TitleChild'\n\n\nconst TheJuiceMenu = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"The Juice Menu\"/>\n      <Pagination \n        prev=\"juiceswapclassic.org\"\n        linkprev=\"/yield-farming/the-juicebar/juiceswapclassic.org\"\n        next=\"juiceswap\"\n        linknext=\"/yield-farming/the-juice-menu/juiceswap\"\n      />\n    </Box_home>\n  );\n}\n\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n`\n\nexport default TheJuiceMenu\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport TitleChild from '../../components/TitleChild';\n\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Staking = () => {\n  return (\n    <Box_home>\n      <TitleChild title=\"Juiceswap Staking\"/>\n      <p>The JuiceSwap located at <a href=\"https://juiceswap.finance/Staking\">https://juiceswap.finance/Staking</a> allows you to stake your Juiceswap and receive xJuiceswap in return and then you stake it in the xJuiceswap pool.</p>\n      <ReactFancyBox \n          thumbnail=\"./stack.png\"\n          image=\"./stack.png\"/>\n      <br/>\n      <p>When users make trades on the Juiceswap Exchange a 0.3% fee is charged.</p>\n      <p>0.05% of this fee is added to the Juiceswap pool in the form of LP tokens for the relative pool.</p>\n      <p>When the rewards contract is called (minimum once per day) all the LP tokens are sold for Juiceswap (on Juiceswap Exchange). The newly purchased Juiceswap is then divided up proportionally between the xJuiceswap holders in the pool, meaning their xJuiceswap is now worth more Juiceswap.</p>\n      <p>Currently you will not see the gained amount until you have withdrawn.</p>\n      <p>It started as 1 Juiceswap = 1 xJuiceswap, but just like LP tokens the price of xJuiceswap changes over time depending on how many Juiceswap rewards are in the pool.</p>\n\n      {/* <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    \n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default Staking\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport TitleChild from '../../components/TitleChild';\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Pools = () => {\n  return (\n    <Box_home>\n      <TitleChild  title=\"Juiceswap Pools\"/>\n      <p>Juiceswap pools allow liquidity providers to add their tokens to liquidity pools.</p>\n      <p>When they do so, they will receive JLP tokens (Juiceswap Liquidity Provider tokens). For example, if a user deposited $Juiceswap and $ETH into a pool, they would receive Juice-ETH JLP tokens.</p>\n      <p>These tokens represent a proportional share of the pooled assets, allowing a user to reclaim their funds at any point.</p>\n      <ReactFancyBox \n          thumbnail=\"./pool.png\"\n          image=\"./pool.png\"/>\n      <br/>\n      <p>As an LP, it is important to understand that you may be exposed to \"Impermanent Loss\" when providing liquidity.</p>\n      <p>However, as a liquidity provider, you will also receive a trade fee reward.</p>\n      <p>Every time a user trades between $Juice and $ETH, a 0.3% fee is taken on the trade. 0.25% of that trade goes back to the LP pool.</p>\n      <p>If previously there were 100 JLP tokens representing 100 ETH and 100 Juice, each token would be worth 1 ETH & 1 SRM.</p>\n      <p>If one user trade 10 ETH for 10 Juice and another traded 10 Juice for 10 ETH, then there would now be 100.025 ETH and 100.025 Juice.</p>\n      <p>This means each LP token would be worth 1.00025 ETH and 1.00025 Juice now when it is withdrawn.</p>\n      <p>When you have your LP tokens, you can also put them into yield farming on:</p>\n      <ul>\n        <li><a href=\"https://juiceswap.finance/farms\">https://juiceswap.finance/farms</a></li>\n      </ul>\n      <p>If you are farming on the farms, you will still get the 0.25% reward fee for being an LP when you next remove your liquidity.</p>\n      <p>However, because the /farms and exchange.Juiceswapclassic.org/#/pool are different smart contracts, it's important to know that the pool page cannot see the tokens you have in farms.</p>\n      <p>When you are on the pool page, it only scans your wallet for JLP tokens to tell you if you are providing liquidity. Therefore it may say \"No Liquidity\" even though you ARE providing liquidity. It's just that it cannot see which tokens you've deposited into the farms.</p>\n      \n\n      <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      />\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default Pools\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport TitleChild from '../../components/TitleChild';\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst TokenExchange = () => {\n  return (\n    <Box_home>\n      <TitleChild  title=\"How to add tokens to JuiceswapSwap Exchange\"/>\n      <p><strong>Step 1:</strong></p>\n      <p>Go to <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a></p>\n      <p>Click the large \"Add Liquidity\" button</p>\n      <ReactFancyBox \n          thumbnail=\"./pool.png\"\n          image=\"./pool.png\"/>\n      <br/>\n      <p><strong>Step 2:</strong></p>\n      <p>Select which token pair you want to add liquidity for:</p>\n      <ReactFancyBox \n          thumbnail=\"./liquis.png\"\n          image=\"./liquis.png\"/>\n      <p><strong>Step 3:</strong></p>\n      <p>Fill in the amounts you want to add to the liquidity pool. </p>\n      <p>It may ask you to \"Approve\" the tokens - you will have to send these \"approve transactions\" first. </p>\n      <p>Once you've approved the token you can hit \"Supply\"</p>\n      <p className=\"thum-page\">\n        <img src=\"\" alt=\"\"/>\n      </p>\n      <p>Then a transaction will pop-up for you to sign in to your wallet (like MetaMask) - after the transaction is complete you will have successfully added liquidity.</p>\n      <p><strong>Step 4:</strong></p>\n      <p>The transaction will provide you with some \"JLP\" tokens in your wallet. These are Juiceswapswap LP tokens and represent the share you've deposited in the pool. All pools are labeled as JLP but represent different pools.</p>\n      <p>When you go back to the <a target=\"_blank\" href=\"https://exchange.juiceswap.finance/#/swap\">https://exchange.juiceswap.finance/#/swap</a>  page you will now see your </p>\n      <p className=\"thum-page\"> <img src=\"\" alt=\"\"/> </p>\n      <p><strong>Step 5:</strong></p>\n      <p>If you click the arrow, the drop-down menu will show you more details about the pool including your shares, and options to add or remove liquidity.</p>\n      <p className=\"thum-page\"> <img src=\"\" alt=\"\"/> </p>\n      <p>Congratulations, you have successfully staked your tokens as a \"Liquidity Provider\" in JuiceswapSwap. This means when people make a trade you will be eligible for part of the 0.25% trade reward.</p>\n      <p><strong>How does the trade fee reward work?</strong></p>\n      <p>Every time a user trades between $Juiceswap and $ETH a 0.3% fee is taken on the trade. 0.25% of that trade goes back to the JLP pool.</p>\n      <p>If previously there were 100 JLP tokens representing 100 ETH and 100 Juiceswap each token would be worth 1 ETH & 1 SRM. </p>\n      <p>If one user trade 10 ETH for 10 Juiceswap and another traded 10 Juiceswap for 10 ETH, then there would now be 100.025 ETH and 100.025 Juiceswap.</p>\n      <p>This means each LP token would be worth 1.00025 ETH and 1.00025 Juiceswap now when it is withdrawn.</p>\n      <p> <strong>Does this mean I am also farming new Juiceswap?</strong> </p>\n      <p>No. Once you have the JLP tokens you'll need to go to Juiceswapswapclassic.org/farms to also farm them for new Juiceswap rewards for each block.</p>\n      {/* <ReactFancyBox \n          thumbnail=\"./pool.png\"\n          image=\"./pool.png\"/>\n      <br/> */}\n\n      \n\n      {/* <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default TokenExchange\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport TitleChild from '../../components/TitleChild';\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst TokenFarm = () => {\n  return (\n    <Box_home>\n      <TitleChild  title=\"How to Farm with Juiceswap JLP Tokens\"/>\n      {/* <p>Once you've got your JLP tokens from being a \"Liquidity Provider\" in the JuiceswapSwap Pools (read the guide here) then you are ready to also stake your tokens in the JuiceswapSwap Farm (Menu) for additional Juiceswap Rewards every block.</p>\n      <p><strong>Step 1:</strong></p>\n      <p>Navigate to <a target=\"_blank\" href=\"https://juiceswap.finance/farms\">https://juiceswap.finance/farms</a> and unlock your wallet.</p>\n      <p><strong>Step 2:</strong></p>\n      <p>Select the pool you want to stake into: </p>\n      <ReactFancyBox \n          thumbnail=\"./ya.png\"\n          image=\"./ya.png\"/>\n      <br/>\n      <p><strong>Step 3:</strong></p>\n      <p>From here you'll need to \"Approve\" the JLP token for the first time:</p>\n      <ReactFancyBox \n          thumbnail=\"\"\n          image=\"\"/>\n      <br/>\n      <p><strong>Step 4:</strong></p>\n      <p>Once the token is approved you'll be able to stake your tokens by using the \"+\" button.</p>\n      <ReactFancyBox \n          thumbnail=\"\"\n          image=\"\"/>\n      <br/>\n      <p><strong>Step 5:</strong></p>\n      <p>This will then display a pop-up asking you how many JLP tokens you wish to stake. Enter the amount and hit confirm</p>\n      <ReactFancyBox \n          thumbnail=\"\"\n          image=\"\"/>\n      <br/>\n      <p><strong>Step 6:</strong></p>\n      <p>After this you'll see a transaction as you wait for your token to be staked. Once staked it will appear in the farm and you can unstake it at anytime.</p>\n      <p>Important Note: When you deposit your JLP for farming, the exchange.Juiceswapswapclassic.org/#/pool page no longer sees it. That page only scans your wallet to see if you are holding JLP tokens.  So that page will say \"No Liquidity\" - however you do still have your tokens and you are still earning the 0.25% trade fee, it is just currently deposited in the farming contract and so not detected.</p>\n      <p><strong>Step 7:</strong></p>\n      <p>After this, your \"Juiceswap Earned\" balance will update every block. You'll be able to click \"Harvest\" at any time to bring out your Juiceswap.</p> */}\n\n      <p><strong>We will open Yield Farm at 10:00 February 5th, 2021.</strong></p>\n      <ReactFancyBox \n          thumbnail=\"./ya.png\"\n          image=\"./ya.png\"/>\n      <br/>\n\n      {/* <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default TokenFarm\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport TitleChild from '../../components/TitleChild';\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst TokenStak = () => {\n  return (\n    <Box_home>\n      <TitleChild  title=\"How to Stake Juiceswap for xJuiceswap\"/>\n      <p><strong>Step 1:</strong></p>\n      <p>Go to <a target=\"_blank\" href=\"https://juiceswap.finance/Staking\">https://juiceswap.finance/Staking</a> - and unlock your wallet.</p>\n      <p><strong>Step 2:</strong></p>\n      <p>From there you'll be able to see the \"Grow Up Staking\" where you can stake Juiceswap (turning it into xJuiceswap) in order to earn part of the 0.05% trade fee from all pools on the exchange.</p>\n      <ReactFancyBox \n          thumbnail=\"./stack.png\"\n          image=\"./stack.png\"/>\n      <br/>\n      <p><strong>Step 3:</strong></p>\n      <p>First, you may need to \"Approve\" the Juiceswap token before you are able to use it. Simply hit the \"Approve Juiceswap\" button and sign the transaction with your wallet or MetaMask.</p>\n      <p><strong>Step 4:</strong></p>\n      <p>Once the Juiceswap token is approved you'll be able to hit \"Convert to xJuiceswap\" to stake your Juiceswap.</p>\n      <ReactFancyBox \n          thumbnail=\"./stack.png\"\n          image=\"./stack.png\"/>\n      <br/>\n      <p><strong>Step 5:</strong></p>\n      <p>Then a new window prompt will pop-up letting you select how much Juiceswap you want to stake. Select the amount, hit confirm and send the transaction.</p>\n      <ReactFancyBox \n          thumbnail=\"./stack.png\"\n          image=\"./stack.png\"/>\n      <br/>\n      <p><strong>Step 6:</strong></p>\n      <p>After that you will see the xJuiceswap available in the bar.</p>\n      <ReactFancyBox \n          thumbnail=\"./stack.png\"\n          image=\"./stack.png\"/>\n      <br/>\n      <p>The amount of xJuiceswap in the JuiceswapBar will not change. But the amount of Juiceswap it represents will.</p>\n      <p>As fees are collected they are converted to $Juiceswap and distributed proportionally across holders in the xJuiceswap pool. So when you withdraw your xJuiceswap back into $Juiceswap it will be worth more $Juiceswap than when you put in.</p>\n      <p>These rewards are slower to update (because they cost a lot of gas) and so you should expect them to update, on average, once per day.</p>\n      <p>Currently there is no way in the UI to see the level of rewards until you withdraw. The team is working to fix this.</p>\n      <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      />\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default TokenStak\n","import React from 'react'\nimport styled from 'styled-components'\nimport ReactFancyBox from 'react-fancybox'\nimport 'react-fancybox/lib/fancybox.css'\nimport Pagination from '../../components/Pagination'\nimport Title from '../../components/Title';\n\n\n\n\n// import Item from './components/Item'\n// import CountUp from 'react-countup';\n\nconst Reclamation = () => {\n  return (\n    <Box_home>\n      <Title image=\"ic-rec.png\"  title=\"Reclamation\"/>\n      <h4 className=\"title-rec\">How to participate in the Reclamation program on Juiceswap?</h4>\n      <p><strong>Requirements:</strong></p>\n      <p>1. Metamask wallet</p>\n      <p>🔅 Tip:If you do not have wallet. You can install Metamask <a  style={{textDecoration: 'underline'}} target=\"_blank\" href=\"https://docs.matic.network/docs/develop/metamask/hello/#step-2-create-an-account\">here.</a></p>\n      <p></p>\n      <p>2. ERC-20 ETH tokens</p>\n      <p>🔅 Tip: How to deposit or receive  ETH tokens to your wallet <a  style={{textDecoration: 'underline'}} target=\"_blank\" href=\"https://metamask.zendesk.com/hc/en-us/articles/360028141672-\">here.</a></p>\n      <p></p>\n      <p>3: Access JuiceSwap</p>\n      <p className=\"step\"><strong>Step by Step Tutorial</strong></p>\n      <p>First, you will need ETH in your Metamask wallet and some additional ETH for the gas fees.</p>\n      <p className=\"step\"><strong>👉 Step 1. Go to 🌐🌐🌐</strong><a target=\"_blank\" href=\"https://www.juiceswap.finance/\">https://www.juiceswap.finance/</a></p>\n      <p>Once you are on the Juiceswap website, connect your Metamask wallet by clicking on the <strong>“🔓 Unlock Wallet”</strong> button in the top right corner, followed by clicking MetaMask.</p>\n      <ReactFancyBox \n          thumbnail=\"./hom.png\"\n          image=\"./hom.png\"/>\n      <br/>\n      <p>Then click <strong>“Connect”</strong> to sync your address to Juiceswap.</p>\n      <ReactFancyBox \n          thumbnail=\"./rec2.png\"\n          image=\"./rec2.png\"/>\n      <br/>\n      <p className=\"step\"><strong>👉 Step 2. Connecting to the Reclamation click the “Reclamation” tab at the top.</strong></p>\n      <ReactFancyBox \n          thumbnail=\"./rec.png\"\n          image=\"./rec.png\"/>\n      <br/>\n      <p className=\"step\"><strong>👉 Step 3: Deposit and join in reclamation</strong></p>\n      <p>Enter the amount of ETH you want to join in reclamation. Juiceswap will automatically fill the JUS Token input box with the equivalent amount. Then click the “deposit” button and confirm the transaction.</p>\n      <ReactFancyBox \n          thumbnail=\"./mte.png\"\n          image=\"./mte.png\"/>\n      <br/>\n      <ReactFancyBox \n          thumbnail=\"./repo.png\"\n          image=\"./repo.png\"/>\n      <br/>\n      <p className=\"step\"><strong>👉 Step 4: Confirm Supply</strong></p>\n      <p>You will then need to confirm the transaction in your Metamask wallet. It will display the gas fee and the total transaction amount. If everything looks correct, click on <strong>“Confirm.”</strong></p>\n      {/* <Pagination\n        prev=\"Migrating Uniswap v2 LP tokens\"\n        linkprev=\"/migrating\"\n        next=\"AMM / Exchange\"\n        linknext=\"/amm-exchange\"\n      /> */}\n    </Box_home>\n  );\n}\n\nconst Box_home = styled.section`\n  position: relative;\n  overflow: hidden;\n\n  .title-rec{\n    font-size:28px;\n    font-weight:bold;\n  }\n\n  .step{\n    font-size:22px;\n    color:#000;\n    font-weight:bold;\n  }\n\n  .react-fancybox {\n    margin-left:100px;\n\n    .thumbnail {\n      max-width:500px;\n\n      img{\n        width:100%;\n      }\n    }\n  }\n\n  @media(max-width:1025px){\n    .react-fancybox{\n      margin-left:0;\n\n      .thumbnail {\n        margin: 0 auto;\n      }\n    \n    }  \n  }\n\n  @media(max-width:576px){\n    .react-fancybox{\n      \n      .image-box{\n        width:90%;\n\n        .close-btn{\n          width:auto;\n        }\n        img{\n          width:100%;\n        }\n      }\n    }  \n  }\n`\n\n\n\nexport default Reclamation\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst ButtonTotop = () => {\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 120) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleVisibility);\n  }, []);\n\n  return (\n    <ToTop>\n    {isVisible && (\n      <div className=\"itemtop\" onClick={scrollToTop}>\n        🍓\n      </div>\n    )}\n  </ToTop>\n  );\n};\n\n\nconst ToTop = styled.div`\n\n\n  .itemtop{\n    font-size: 22px;\n    position: fixed;\n    bottom: 80px;\n    right: 20px;\n    cursor: pointer;\n    width: 40px;\n    height: 40px;\n    background: #34999b;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    transition: ease-in-out .5s all;\n\n    &:hover{\n      background: #082844;\n    }\n  }\n`\n\n\n\n\n\n\nexport default ButtonTotop;\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport styled from 'styled-components'\n// import Footer from './components/Footer'\nimport Header from './components/Header'\nimport SideBar from './components/SideBar'\n\n\n// import Container from './components/Container';\nimport Home from './views/Home'\nimport Migrating from './views/Migrating'\nimport Faq from './views/Faq'\nimport Builds from './views/Builds'\nimport Voting from './views/Voting'\nimport Presskit from './views/Presskit'\nimport Official from './views/Official'\nimport Governance from './views/Governance'\nimport Lending from './views/Lending'\nimport Nfts from './views/Nfts'\nimport Basics from './views/Basics'\nimport Amm from './views/Amm'\nimport Yield from './views/Yield'\nimport Swapping from './views/Amm/PageChild/Swapping/Swapping'\nimport Impermanent from './views/Amm/PageChild/Impermanent'\nimport Liquidity from './views/Amm/PageChild/Liquidity/Liquidity'\nimport Menu from './components/Menu'\nimport ButtonMenu from './components/ButtonMenu'\nimport JUSswapS from './views/Amm/PageChild/Swapping/PageChild/JUSswap'\nimport ClassicS from './views/Amm/PageChild/Swapping/PageChild/Classic'\nimport LiteS from './views/Amm/PageChild/Swapping/PageChild/Lite'\n\nimport JUSswapL from './views/Amm/PageChild/Liquidity/PageChild/JUSswap'\nimport ClassicL from './views/Amm/PageChild/Liquidity/PageChild/Classic'\nimport LiteL from './views/Amm/PageChild/Liquidity/PageChild/Lite'\n\nimport JUSswapTJB from './views/Yield/PageChild/TheJuiceBar/PageChild/JUSswap'\nimport ClassicTJB from './views/Yield/PageChild/TheJuiceBar/PageChild/Classic'\nimport LiteTJB from './views/Yield/PageChild/TheJuiceBar/PageChild/Lite'\n\nimport JUSswapTJM from './views/Yield/PageChild/TheJuiceMenu/PageChild/JUSswap'\nimport ClassicTJM from './views/Yield/PageChild/TheJuiceMenu/PageChild/Classic'\n\nimport JUSswapMW from './views/Yield/PageChild/MenuWeek/PageChild/JUSswap'\nimport ClassicMW from './views/Yield/PageChild/MenuWeek/PageChild/Classic'\n\nimport MenuWeek from './views/Yield/PageChild/MenuWeek/MenuWeek'\nimport TheJuiceBar from './views/Yield/PageChild/TheJuiceBar/TheJuiceBar'\nimport TheJuiceMenu from './views/Yield/PageChild/TheJuiceMenu/TheJuiceMenu'\nimport Staking from './views/Staking'\nimport Pools from './views/Pools'\nimport TokenExchange from './views/TokenExchange'\nimport TokenFarm from './views/TokenFarm'\nimport TokenStak from './views/TokenStak'\nimport Reclamation from './views/Reclamation'\nimport ButtonTotop from './components/ButtonTotop'\n\n\n\n\n\n\n\n\nconst App = () => {\n  \n\n  return (\n    <StyledScreen>\n      <Router>\n        <Header/>\n        <div className=\"main\">\n          <Layout>\n              {/* <Menu/> */}\n              <ButtonMenu/>\n              <BoxSidebar>\n                <SideBar/>\n              </BoxSidebar>\n              <BoxContent>\n                <Switch>\n                  <Route path=\"/\" exact>\n                    <Home />\n                  </Route>\n                  <Route path=\"/migrating\" exact>\n                    <Migrating />\n                  </Route>\n                  <Route path=\"/faq\" exact>\n                    <Faq />\n                  </Route>\n                  <Route path=\"/amm-exchange\" exact>\n                    <Amm />\n                  </Route>\n                  <Route path=\"/amm-exchange/swapping\" exact>\n                    <Swapping />\n                  </Route>\n                  <Route path=\"/amm-exchange/swapping/juiceswap\" exact>\n                    <JUSswapS/>\n                  </Route>\n                  <Route path=\"/amm-exchange/swapping/lite.juiceswap\" exact>\n                    <LiteS />\n                  </Route>\n                  <Route path=\"/amm-exchange/swapping/how-to-swap-tokens\" exact>\n                    <ClassicS/>\n                  </Route>\n                  <Route path=\"/amm-exchange/liquidity-pools\" exact>\n                    <Liquidity />\n                  </Route>\n                  <Route path=\"/amm-exchange/liquidity-pools/juiceswap\" exact>\n                    <JUSswapL />\n                  </Route>\n                  <Route path=\"/amm-exchange/liquidity-pools/lite.juiceswap\" exact>\n                    <LiteL />\n                  </Route>\n                  <Route path=\"/amm-exchange/liquidity-pools/juiceswapclassic.org\" exact>\n                    <ClassicL />\n                  </Route>\n                  <Route path=\"/amm-exchange/impermanent-loss\" exact>\n                    <Impermanent />\n                  </Route>\n                  <Route path=\"/product-pools\" exact>\n                    <Pools />\n                  </Route>\n                  <Route path=\"/yield-farming\" exact>\n                    <Yield/>\n                  </Route>\n                  <Route path=\"/yield-farming/the-juicebar\" exact>\n                    <TheJuiceBar/>\n                  </Route>\n                  <Route path=\"/yield-farming/the-juicebar/juiceswap\" exact>\n                    <JUSswapTJB />\n                  </Route>\n                  <Route path=\"/yield-farming/the-juicebar/lite.juiceswap\" exact>\n                    <LiteTJB />\n                  </Route>\n                  <Route path=\"/yield-farming/the-juicebar/juiceswapclassic.org\" exact>\n                    <ClassicTJB />\n                  </Route>\n                  <Route path=\"/yield-farming/the-juice-menu\" exact>\n                    <TheJuiceMenu/>\n                  </Route>\n                  <Route path=\"/yield-farming/the-juice-menu/juiceswap\" exact>\n                    <JUSswapTJM />\n                  </Route>\n                  <Route path=\"/yield-farming/the-juice-menu/juiceswapclassic.org\" exact>\n                    <ClassicTJM />\n                  </Route>\n                  <Route path=\"/yield-farming/menu-of-the-week\" exact>\n                    <MenuWeek/>\n                  </Route>\n                  <Route path=\"/yield-farming/menu-of-the-week/juiceswap\" exact>\n                    <JUSswapMW />\n                  </Route>\n                  <Route path=\"/yield-farming/menu-of-the-week/juiceswapclassic.org\" exact>\n                    <ClassicMW />\n                  </Route>\n                  <Route path=\"/lending-bentobox\" exact>\n                    <Lending />\n                  </Route>\n                  <Route path=\"/product-staking\" exact>\n                    <Staking />\n                  </Route>\n                  <Route path=\"/reclamation\" exact>\n                    <Reclamation/>\n                  </Route>\n                  <Route path=\"/about-nfts\" exact>\n                    <Nfts />\n                  </Route>\n                  <Route path=\"/the-basics\" exact>\n                    <Basics />\n                  </Route>\n                  <Route path=\"/how-to-add-tokens-to-juiceswap-exchange\" exact>\n                    <TokenExchange />\n                  </Route>\n                  <Route path=\"/how-to-farm-with-juiceswap-tokens\" exact>\n                    <TokenFarm />\n                  </Route>\n                  <Route path=\"/how-to-stake-juiceswap-for-xjuiceswap\" exact>\n                    <TokenStak />\n                  </Route>\n                  <Route path=\"/current-governance-mdoel\" exact>\n                    <Governance />\n                  </Route>\n                  <Route path=\"/proposals-and-voting\" exact>\n                    <Voting />\n                  </Route>\n                  <Route path=\"/all-official-juiceswap-links\" exact>\n                    <Official />\n                  </Route>\n                  <Route path=\"/how-to-build-on-Justswap\" exact>\n                    <Builds />\n                  </Route>\n                  <Route path=\"/presskit-and-branding-assets\" exact>\n                    <Presskit />\n                  </Route>\n                </Switch>\n              </BoxContent>\n          </Layout>\n        </div>\n      \n      </Router>\n      <ButtonTotop/>\n    </StyledScreen>\n  )\n}\nconst StyledScreen = styled.div`\n  height:100%;\n`\n\nconst Layout = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  height:100%;\n`\nconst BoxSidebar = styled.section`\n  position: fixed;\n  top: 66px;\n  width: 100%;\n  padding-top: 16px;\n  min-width: 298px;\n  max-width:300px;\n  background: rgb(234 248 250);\n  height: auto;\n  min-height:100vh;\n  overflow:hidden;\n\n  @media (max-width:1690px){\n  }\n\n  @media (max-width:1500px){\n    padding-left: 0;\n  }\n\n  @media (max-width:991px){\n    width:100%;\n    min-height:auto;\n    display:none;\n  }\n\n`\n\nconst BoxContent = styled.section`\n  position: relative;\n  width: 70%;\n  padding: 50px;\n  max-width:1000px;\n \n\n\n  @media (min-width:1000px){\n    margin-left:300px;\n  }\n\n\n  @media (max-width:991px){\n    width:100%;\n    padding:15px;\n  }\n`\n\n\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ReactGA from 'react-ga'\nimport { isMobile } from 'react-device-detect'\nimport ThemeProvider, { GlobalStyle } from './Theme'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\nimport GlobalDataContextProvider from './contexts/GlobalData'\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\nimport ApplicationContextProvider from './contexts/Application'\nimport UserContextProvider from './contexts/User'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n// initialize GA\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID)\n  ReactGA.set({\n    customBrowserType: !isMobile\n      ? 'desktop'\n      : 'web3' in window || 'ethereum' in window\n      ? 'mobileWeb3'\n      : 'mobileRegular',\n  })\n} else {\n  ReactGA.initialize('test', { testMode: true, debug: true })\n}\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TokenDataContextProvider>\n          <GlobalDataContextProvider>\n            <PairDataContextProvider>\n              <UserContextProvider>{children}</UserContextProvider>\n            </PairDataContextProvider>\n          </GlobalDataContextProvider>\n        </TokenDataContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <PairDataContextUpdater />\n      <TokenDataContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <ContextProviders>\n    <Updaters />\n    <ThemeProvider>\n      <>\n        <GlobalStyle />\n        <App />\n      </>\n    </ThemeProvider>\n  </ContextProviders>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}